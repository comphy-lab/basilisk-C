name: Sync Darcs Repositories

on:
  schedule:
    # Run every day at midnight UTC
    - cron: "0 0 * * *"
  # Allow manual triggering
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Darcs
        run: |
          echo "Installing Darcs following official methods from darcs.net..."

          # Method 1: Install using Stack (preferred method according to darcs.net)
          echo "Checking if Stack is installed..."
          if ! command -v stack &> /dev/null; then
            echo "Installing Stack..."
            curl -sSL https://get.haskellstack.org/ | sh -s - -f
          else
            echo "Stack is already installed"
            stack --version
          fi

          echo "Installing Darcs with Stack..."
          stack install darcs || echo "Stack install encountered an issue, will try with Cabal next"
          export PATH="$HOME/.local/bin:$PATH"
          echo "$HOME/.local/bin" >> $GITHUB_PATH

          # Check if Darcs was installed successfully
          if command -v darcs &> /dev/null; then
            echo "Darcs installed successfully using Stack"
            darcs --version
          else
            echo "Stack installation failed, trying with Cabal..."

            # Method 2: Install using Cabal as fallback
            sudo apt-get update
            sudo apt-get install -y ghc cabal-install
            cabal update

            echo "Installing Darcs with Cabal..."
            cabal install darcs
            export PATH="$HOME/.cabal/bin:$PATH"
            echo "$HOME/.cabal/bin" >> $GITHUB_PATH

            # Verify installation
            if command -v darcs &> /dev/null; then
              echo "Darcs installed successfully using Cabal"
              darcs --version
            else
              echo "Failed to install Darcs. Exiting."
              exit 1
            fi
          fi

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Pull from Darcs into basilisk-source
        run: |
          TARGET_DIR="basilisk-source"

          # Check if there's a _darcs directory inside the target directory
          if [ ! -d "$TARGET_DIR/_darcs" ]; then
            echo "No _darcs directory found in $TARGET_DIR. Initializing Darcs repository..."

            # Set the Darcs repository URL
            DARCS_REPO="http://basilisk.fr/basilisk"

            echo "Getting from Darcs repository: $DARCS_REPO"
            darcs get --lazy "$DARCS_REPO" temp_repo_source

            # Move Darcs metadata and contents into the target directory
            echo "Moving Darcs metadata to $TARGET_DIR/_darcs"
            mkdir -p "$TARGET_DIR"
            mv temp_repo_source/_darcs "$TARGET_DIR/"
            echo "Moving repository contents to $TARGET_DIR"
            shopt -s dotglob # Enable matching hidden files
            mv temp_repo_source/* "$TARGET_DIR/" 2>/dev/null || true
            shopt -u dotglob # Disable matching hidden files
            rm -rf temp_repo_source
            echo "Initialization complete."
          else
            echo "_darcs directory found in $TARGET_DIR. Pulling changes..."
            cd "$TARGET_DIR"
            darcs pull --all
            cd ..
            echo "Pull complete."
          fi

      - name: Pull from Darcs into basilisk-wiki
        run: |
          TARGET_DIR="basilisk-wiki"

          # Check if there's a _darcs directory inside the target directory
          if [ ! -d "$TARGET_DIR/_darcs" ]; then
            echo "No _darcs directory found in $TARGET_DIR. Initializing Darcs repository..."

            # Set the Darcs repository URL for the wiki
            DARCS_REPO="http://basilisk.fr/wiki"

            echo "Getting from Darcs repository: $DARCS_REPO"
            darcs get --lazy "$DARCS_REPO" temp_repo_wiki

            # Move Darcs metadata and contents into the target directory
            echo "Moving Darcs metadata to $TARGET_DIR/_darcs"
            mkdir -p "$TARGET_DIR"
            mv temp_repo_wiki/_darcs "$TARGET_DIR/"
            echo "Moving repository contents to $TARGET_DIR"
            shopt -s dotglob # Enable matching hidden files
            mv temp_repo_wiki/* "$TARGET_DIR/" 2>/dev/null || true
            shopt -u dotglob # Disable matching hidden files
            rm -rf temp_repo_wiki
            echo "Initialization complete."
          else
            echo "_darcs directory found in $TARGET_DIR. Pulling changes..."
            cd "$TARGET_DIR"
            darcs pull --all
            cd ..
            echo "Pull complete."
          fi

      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain basilisk-source)" || -n "$(git status --porcelain basilisk-wiki)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in repositories."
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in repositories."
          fi

      - name: Commit and push if changes exist
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          # Add any changes in basilisk-source
          if [[ -n "$(git status --porcelain basilisk-source)" ]]; then
            echo "Committing changes in basilisk-source directory..."
            git add basilisk-source
            git commit -m "Auto-update basilisk-source from Darcs repository"
          fi

          # Add any changes in basilisk-wiki
          if [[ -n "$(git status --porcelain basilisk-wiki)" ]]; then
            echo "Committing changes in basilisk-wiki directory..."
            git add basilisk-wiki
            git commit -m "Auto-update basilisk-wiki from Darcs repository"
          fi

          # Push all commits
          git push
