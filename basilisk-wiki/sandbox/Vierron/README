# 👨‍🔬 Alexandre Sandbox

Welcome to the sandbox of **[Alexandre Vierron](https://www.linkedin.com/in/alexandre-vierron/)**.
On this page you will find all my projects done with [Basilisk](http://basilisk.fr).

# Physical Systems

## 🔥 Natural convection

<div style="float:right; margin-right:10px;">
  <a href="Natural-convection/rbvisco.c">
    <video src="Natural-convection/rbvisco/temperature.mp4" width="300" autoplay loop muted></video>
  </a>
</div>

<div style="float:right;margin-right:10px;">
  <a href="Natural-convection/rbvisco.c">
    <img src="Natural-convection/rbvisco/shadow.png" width="300" alt="drawing"/>
  </a>
</div>

* [Rayleigh Benard instability 2D](Natural-convection/rbi2d.c)
* [Rayleigh Benard instability adaptative mesh 2D](Natural-convection/rbi2dadpt.c)
* [Rayleigh Benard instability with stratified fluid 2D](Natural-convection/rbi2dsf.c)
* [Rayleigh Benard instability cylindrical coordinate 3D](Natural-convection/cylindrical/rbcyl.c)
* [Rayleigh Benard instability cylindrical coordinate 3D with embed](Natural-convection/cylindrical/rbcyl-emb.c)
* [Rayleigh Benard instability 2D: Strongly Temperature-Dependent Viscosity](Natural-convection/rbvisco.c)
* [Rayleigh Benard instability 3D: Strongly Temperature-Dependent Viscosity](Natural-convection/rbvisco3D.c)

<div style="float:right; margin-right:10px;">
  <a href="Natural-convection/rbvisco3D.c">
    <video src="Natural-convection/rbvisco3D/l2.mp4" width="300" autoplay loop muted></video>
  </a>
</div>

## 💨 Forced Convection

* [Rayleigh Benard poiseuille instability 2D](forced-convection/rbp2.c)

## 🧪 Nanofluid Convection


* [Rayleigh Benard convection of nanofluid 2D](Nanofluid-convection/nanofluid.c)

## 🌀 Cylindrical / Radial Tests
To understand the boundaries in radial/cylindrical coordinates:
- [Radial Boundary](test/radial-bound.c)

In 2D, only the `left` and `right` arguments are useful:

- **`left`**: Inner cylinder boundary conditions
- **`right`**: Outer cylinder boundary conditions
  - (Use `left` only with an inner cylinder)

<div style="float:right; margin-right:10px;">
  <a href="test/radial-diff2.c">
    <video src="test/radial-diff2/T.mp4" width="400" autoplay loop muted></video>
  </a>
</div>

In 3D, the logic is the same as in 2D, with the addition of `back` and `front` arguments.

### Small Test Cases

- [Radial Diffusion](test/radial-diff.c)
- [Radial Diffusion with Adaptive Mesh](test/radial-diff2.c)
- [Radial Advection](test/radial-advec.c)
- [Radial Diffusion Ring](test/hot-ring.c)
- [Taylor-Couette Flow](test/radial-rotating.c)

### Save simulation (Basilisk snapshots)

- [Dump Cylindrical](test/dumpcyl.c)
- [Restore Dump Cylindrical](test/restorecyl.c)

### Change Aspect Ratio

- [Change Aspect Ratio of Cylindrical Domain](test/cylmulti.c)

## 🌊 Waves

* [Surface wave generated by an immersed obstacle.](Waves/vagues2.c)

<div style="float:right; margin-right:10px;">
  <a href="Liquid-sheet-retraction/Hole.c">
    <video src="Liquid-sheet-retraction/Hole/Hole0.01.mp4" width="200" autoplay loop muted></video>
  </a>
</div>

## 💧 Liquid Sheet Retraction

* [Planar sheet retraction 2D (reference frame of the bulge).](Liquid-sheet-retraction/plan2D.c)
* [Planar sheet retraction 2D (stationnary reference frame).](Liquid-sheet-retraction/plan2D2.c)
* [Axisymetric Hole expansion in liquid sheet 2D.](Liquid-sheet-retraction/axiss2.c)
* [Hole expansion in liquid sheet 3D.](Liquid-sheet-retraction/Hole.c)
* [1/4 Hole expansion in liquid sheet 3D.](Liquid-sheet-retraction/half.c)

## 🧵 Filament Retraction
* [Axisymetric filament.](Filament/fil.c)

## 🎮 For Fun

* [Shark.](Shark/solid.c)
* [Raspberry pi cluster](raspberry-pi/cluster.md)

## 📄 Documentations

* [script slurm.](script/job.sh)

## 📬 Contact
💌 Here is my email address for any suggestions : alexandrevierron@gmail.com
