%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: nicer_2instab3nd.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Giacomo
%%CreationDate: 3/19/15
%%BoundingBox: 0 0 536 255
%%HiResBoundingBox: 0 0 535.4297 254.0361
%%CropBox: 0 0 535.4297 254.0361
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 7066 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD06FFA8A8FD7EFF52A8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FD07FFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FD07FFA8FD07FFA8FD0F%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0BFFA8%FFFFFFA8FD08FFA87D7DFD7EFFA8CAFD32FFA8FD43FFA8FD08FFA8FD0BFF%A8FD10FFA87DFFC3FD3FFF7DA8FD1FFFA8FD09FFA8527DFD09FF52A87D7D%A8A8A87DA8BCB5BCC3CAFD0EFFA8FD2BFFA852272727A8A8FD1AFFA8FD0A%FF7D27A8FF7D527DFFFF7DA8FF7D7DA87DFD07FFC3BCB5BCBCCAFD3AFFA8%52272752A8FD18FFA8A8FD09FFA87DA8FF7DA87DFFA8A8A8FF52A87D7DFD%0AFFC3BCB5B5BCCACAFD07FFA8FD21FFA8FD0FFF7D52F82752FD16FFA8FD%27FFCAC3B5BCBCCAFD3AFF7D27F87DFD14FFA8A8FD07FFFD04A87DA8A8A8%7DFD0BA87DA8FD0CFFCAC3B5BCBCCAFD24FFA8FD14FF7DF827A8FD12FFA8%FD09FF7DFD13FFA8FD0FFFCAC3B5BCBCFD39FFF827FD13FFA8FD07FFA8A8%7DA8FD04FFA8FFA8FD09FFA8A8FD04FFA8FD0DFFC3BCFCBCC3FD0DFFA8FD%29FFF852FD08FFA8FD08FFA8FD09FF7DA8FFFFA9A97EA97EA97EA9FD08FF%A8FD15FFC3BCB5C3CAFD34FF2727FD10FFA8A8FD08FFA8A8FFFF847EA8FD%05FF847EA8FD05FFA8A8FD14FFAFFFFFCAB5B5B5CAFD32FFF87DFD10FF52%7DFD09FFA8FFA87EFD04FF7DFD04FF7EA9FD05FFA8FD19FFCABCB5B5C3FD%07FFA8FD27FF2727FD10FFA8527DA8FFFFFFA8FFFFFFA8A8FF7EA8FD04FF%A8FD04FFA87EFD04FFA8A8FD06FFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FD%05FFBCB593CAFD0AFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FD04FF7DF827A8FFFFFFA8FD0EFFA8FD09FFA8FF7EFF%FFA8A8FD07FF7EFD05FFA8FD1DFFCAC3FCBCCAFD27FF7D52F87DFD14FFA8%A8FD07FFA8A8FF7EAFFF5252527D7D7D527D527EFD04FFA8A8FD1FFFCAB5%FCC3FD23FFA87D272752FD16FFA8FD09FFA8FFA87E7E5252FFA8FFA8FFA8%A87DFD05FFA8FD21FFC3FCB5FD1FFFA8FF525227A8FD18FFA8A8FD07FFA8%A8FFFFA87D7D7DFD06FFA77DFD04FFA8A8FD04FFA8FD0FFFA8FD0DFFCAB5%8CCAFD1BFFA87D52527DA8FD11FFA8FD08FFA8FD09FFA8FFFFA8A8FF7DFD%06FFA87DFD05FFA8FD24FFBCFCCAFD16FFA8A8FD047DA8FFFFA8FD1BFFA8%FD07FFA8A8FFFFA8FFA87DFD06FF7D7DFD04FFA8A8FD14FFA8FD10FFBCFC%CAFD10FFA8A8FF527D7D52A8A8FD04FFA852A8FFFFA8FFFFA852FD12FFA8%FD09FFA8FD04FFA87DFD06FFA87DFD05FFA8FD26FFBCB5FD0EFFA87DFF27%FF7DA8FD08FF7D52A8FF527D7DFF7D7DA8FD11FFA8A8FD07FFA8A8FD04FF%A87DFD06FF7D7DFD04FFA8A8FD26FFCAFCC3FD08FFA87DFF27A87D7DFFA8%A8FD0AFFA87DFFFFFFA8FFFFA87DFD12FFA8FD09FFA8FD05FF7DFD06FFA8%7DFD05FFA8FD27FFBCB5FFFFFFA8A8FF27FF7D52FFA8A8FD0BFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0DFFA8A8FD07FFFD05A8FF7D7DA8%FFA8A8A8FF7D7DA8FFFD04A8FD27FFBCB5A852FF277DFF7DA8FD05FFA8FD%09FFA8A8A8FFA8A8A8FFA8CFA8FFA8A8A8FFFD05A8FD06FFA8FD05FFA8FD%09FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8FD25FFBCCACA8CC3%847DFD16FFA8A8FD04FFAFFFA9A9A8FD08FFA8FD05FF7D7D52FFFFFF52A8%A8FFA8FFFFFFA8FD17FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFAFFFFFFFAFFFA1CAAF93A1FF8CCAFFBC8CFD07FFA8FFFFFFA8FF%A8FFA8FFFFFFA8FFFFFFA8A87DFFFFA97E7E7EA87EA87E7E7EA9FD04FFA8%FFFFFFA8FF52A852FFFFFF7D7DFD37FFA1FF9ABCFFBCBCFFC3CAFD04FFB5%BCFD18FFA8FFFF7E7EFD09FF7EA9FFFFA8A8FD05FF7DA87DFFFFFF7DA8FD%31FFCAFFCA93FF9AB5FFCAA1FD09FFC3FCCAFD17FFA8FFFF7EA8FD05FF7E%FD05FF7E84FFFFA8FD0CFFA8FD2BFFCAFFFFBCCACA8CFFA8BCFFFFCAFD0B%FFCAB5BCFD18FFA8FFA984FD06FFA8FD06FF7EFFFFA8FD0CFFA8A8FD0FFF%A8FD15FFA8FF9ACAFF8C9AFF93CAFFCAA8FFAFFD0EFFB5B5FD0FFFA8FD09%FFA8FF7EFFFFFFA8FD0AFFA87EFFA8FD0CFFA8FD22FFCABCFFBCB5FFBC9A%FFA1FD15FFCAB5B5FD1AFFA8FFA9A9FF7DA87DA8A8FFA8FFA8FFFFFF7EAF%FFA8FD0CFFA8A8FD1CFFC3CAFF8CCAA193FFCAA1FD19FFC3FCBCFD1BFFA8%FFA87EA853277D527D527D525228A9847EFFFFA8FD0CFFA8FD18FFC3FFC3%93FF93C3FFC3A8FD1DFFB5FCC3FD1CFFA8FFFFA97E537DFD06FFCF7DA8A9%FFFFA8A8FD0CFFA8A8FD0FFFAFFFA8CAFF93A1FF8CFFA1C3FFFFA8FFFFFF%A8FD0FFFA8FD0AFFC3FCB5CAFFAFFD1BFFA8FFFFFF7DFF7CFD06FFA852FD%05FFA8FFFFFFA8FD08FFA8FD0DFFCAFFFFB5A8C38CFF9ACAFD24FFC3B5B5%CAFD1FFFA8FFFFA8FFFF7DFD06FFA87DFD04FFA8A8FD0DFFA8FD07FFCACA%A8B5A8BC93FF9ACACAFD1FFFA8FD06FFC3B5B5C3FD21FFA8FD05FF52FD06%FFA852FD05FFA8FD0CFFA8FD06FFBCA8BC93FF93FD2BFFBCB5B5C3FD23FF%A8A8FD04FF7DFD06FFA87DFD05FFA8FD0CFFA8A8FD05FF93CACACAFD06FF%A8FD23FFCABCB5B5C3FD1BFFA8FD09FFA8FD05FF52FD06FFA852FD05FFA8%FD0BFFA1A8FD32FFC3B5B5BCCAFD27FFA8A8FD04FF7DFD06FFA87DFD05FF%A8FD0BFF7D7DA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFFFFFCABCB5B5C3A8FF%FFFFA8FFFFFFA8FD0BFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFA8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8FFA8FD08FFA87D%7DFD2CFFCABCBCB5C3CAFD4CFFA8A8A8FD21FFA8FD06FFCABCBCB5BCC3FF%FFFFA8FD0FFFA8FD33FFA8FD08FFA8FD26FFCABCBCB5C3CAFD11FF7DFD64%FFCACABCB5B5C3C3FD05FF7D7DFFFFA8FFFFFF52A87DFD04A87DA8FD40FF%A8FD1FFFCAC3BCBCBCC3CAFD07FFA85252FFA87D7DFFFF7D7DA87DFFFFFF%A8FD41FFA8A8FD0FFFA8FD0DFFCAB5B5C3CAFD0BFF52A8FFA87DA8A8FF52%7D527DFD1AFFA8FD0FFFA8FD1AFFA8FD7FFFA8A8FD7EFFA8FD7FFFA8A8FD%21FFA8FD0FFFA8FD0FFFA8FD33FFA8FD08FFA8FD7EFFA8FD11FFA8FD21FF%A8FD21FFA8FD21FFA8FD07FF7DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8A8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FD08FF52A8A8FFA8FFA8FFA8FFA8FFA8FFA8%FFFD04A87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FF%A8FFA8FFFD05A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFFD05A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FF%A8FFA8FFA8FFA8FF7DA8FFA8FD06FFA87DA8FD0EFF7DFF7D7DFD0EFF76FD%0EFFA87DFF52A8FD0EFF76FD0EFFA87DFF52FD0EFFA87DFD0EFF7DA8A852%FD07FFA87DFD0DFFA87DA8A87DFD0DFFA87DA8FD0DFFA87DA87D7DFD0DFF%7D27A8FD0DFF5252A87DA8FD0DFFA87DFD0EFF7D7DA852FD07FF7DA8FD0E%FF7DA8A8FD0FFFA8FD0EFFA8A8FFA8FD05FFA8FFA8A8FD06FFA8FD0FFFA8%A8A8FD0EFFA8A8FD0EFFFD04A8FD40FFA852A87DA8FD7CFF52A8A8FD7DFF%5252FD7EFF7DFDBDFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2015-03-19T11:57:29+01:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>124</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qxHzuPMK6hpV3pRm9&#xA;GwMs95Fy9O0kSg3mdJYpOUfGqpxZWqQfEKspiW6CATSI7/tMiFARUdAXbt74qvAl7sv/AAJ67e/z&#xA;xVxEu9GX2+E+/v8ALFXUkr9oU+R6V+fhiq2MysKllO5BoD2NP5j4HFV1JafaWtP5T1p8/HFXES70&#xA;Zfb4T7+/yxVaH5OyrIhKH41G5FTtXfbauKuBl5leS7KCdt6n2r02xVcRL2Zf+BPXf3+WKupJX7Qp&#xA;8j0qffwxVwEu1WX3+E+3v88VWky8gvJalSencUHSvSpxVcRLvRl9vhPv7/LFXUkr9oU+R6V+fhir&#xA;gJdqsvv8J9vf54qtkMqrUMoNQNwe5p/N7jFVxEnZh7bH398VdSWv2lp8j7e/zxV1JafaWvjxPWnz&#xA;8cVcRLvRl9vhPv7/ACxVpDIyK3JaEA7Cv41xVsCXarL7/Cfb3+eKupLT7S1/1T4fPxxV1Ja/aWny&#xA;Pv7/ACxVpTIWYclopAO3sD4/PFW6S/zL9x8PniriJd6Mvt8J9/f5Yq6kn8w+49K/PwxVpC/MqxUk&#xA;AHYU617VPhiq/FUHrRpo1+en+jy79P2D7j9eKozFXYqxD80b7W7Ty0jaTDPMZLmNb0WrTRz/AFdQ&#xA;0jJE9uskqNO0awBkFRzqCv2gqqyar5u0fQNEjl0ttc1ZrWNNWlikEQFxHGgkbZXFHct0xVMrfVdX&#xA;fQ4b4aS7X0jN6mnCZAyDmw/vJCimlMVSTXdW14at5RlW3urBp9SuIL+xDCWJ7c6dcmNp3hEiqv1o&#xA;QBSSKE4qhPIU/mjV7KQ6hfX9pwgsnkkkgijf67JbA3sQW4gb4Ul7AfCxZRstAqm3+BjXWfT1a7tW&#xA;1eSCV57RvRnR4TUtz+Jav9luKKOO1K75DJDiFWR7nJ0mo8HIJ8MZ10kLCD+o/mbpfP6pqVnr6qgJ&#xA;ivY/qsp2kNEaE8KlyoqwpxHc5Rw5o8iJe/Z23jdnZj6oTw/1TxDpzEt+V8uq4fmLJYTeh5k0O+0n&#xA;4uIvVT61Zn4uIPrRV41ozUK7KKnH8zw7TiY/aF/kMZRenywyf0b4Z/6U/Ac+bINH8y6BrMQk0vUI&#xA;LsMAeMbguAVDiqH4h8LA7jLoZYz+k26vVaDPgNZISj7x8OfJMsscRaT+9UV/Zbb6R7/wxVdirsVd&#xA;iq2U0Ub0+Jfb9oe4xVdirsVdirsVWwmsSGtaqN+vb5t+vFV2KpT5s8v/AOIfL93o/wBfutM+tqq/&#xA;XbGT0p04sG+FqHZuNGHcVGKsBl8q/nj5fmM2g+Z7bzJacyTputRelJxabn8NxGGblwAXc8d24qo4&#xA;qFULb/nxcaFKLX8xfLV95clLKh1BF+s2RPGMV5xl+NSzNxQvQUFS5pir0vy/5m8veYrBb/Q9Rg1G&#xA;0an723cPxJ/ZcDdG/wAlgDiqZ4q7FVoP71hX9ldvpPv/AAxVdiqD1mv6Hvqdfq8vT/UPhiqMxV2K&#xA;sO1DWrxPMVxZfXrxEM6xQ2tnHbSSKGFkobjJDIxQG7d5Gr8KKT2xVPX0u9VSza5eIo3LFbIAAfO3&#xA;xVCxehO4ig80TSSMfhRGsGY79APQOSMJDojiCLOkagf+l3ej/YWX/ZPkUuOkagf+l3ej/YWX/ZPi&#xA;rWiSXXq6nb3FzJdfVboRRSyrGr8Dbwy0/dpEp+KQ70xVMhX1G8KDxp1P0YquIBBBFQeoxVj2qeQP&#xA;KWpTfWZtPjhu68vrdtW3l5clbkXj48jVF+1XplE9NCW9bu00/bWqxDhEyY90vUOvQ+88kq/wx580&#xA;Zf8AcDr41G3WgWy1lTI3EcQaXEdHLUDdRSp3yvwskfplf9b9bm/yhos5/f4eCX87Ft3/AMJ27vgs&#xA;/wCVkXOlvGnm3RbvSAfha+iU3VlX4essdSv7XUdATj+aMfriY+fMJ/kGObfS5YZf6J9M/kefTrzN&#xA;Ms0nWtI1e1W70u8ivLdgCJIXD0qAaMBup33B3zIhkjIWDbpdTpMuCXDkiYy8wjcm47sVWyV4iniv&#xA;SviPDFV2KuxV2KuxVbHX01ruaCta16e++KrsVdirsVUZreC5int7mNZ7eWqSQyLyRlKgFSrChBxV&#xA;5H5y/IuaxvJfNP5WXreWfNEYLvZRH/QbwA19J4mqiV7Cnp7AcR9pVWTfkx+Zh/MDyidRurX6jrNh&#xA;O9jrFkAQqXMQBJQN8QVgwNDupqu9KlVnmKrRX1G8KDxp1P0YquxVhX5g675lsrrTbHS9MmuNOvDK&#xA;uqXyIsiJGYJAqfa5JRgHZ+J2FBUnFWYRNdFAZo0R/wBpUcuAKjoSi9vbFV4MvdV/4I9dvb54qxqe&#xA;7tNNbzBrM1qs93Z3PC2oq+oTNaWqrEjkVX1XCA9q/LJ44cUgESNC18HlO0nCXvmd01W/cgmOfezh&#xA;Zjslvbt+7HHoHYFz1rlpzkbQ9I+34liId+6uugaXd3F7a33l+xXT4jGLSZkik9cFAXJj4D0+DHiN&#xA;zXrlYzTHIn5p4R3ISe1m8r3FtcWUsj6FNNFbXdhK7SC3M7iOOa3ZizKokcB468aGq0pvaD4gIP1d&#xA;/f72NcPuZRmM2JVpBf8ASGtU3H11K8tqf6HbdNt8VTEGX1D8I+yvc0rU9+P8foxVcTL2Vf8Agj13&#xA;9vlirqyV+yKfM9Kn28MVcDLtVV9/iPt7fPFVORWf4HjVlZGDITVTWlQar0/zpikEg2GKa1+WWh3t&#xA;w99p3q6FqhJYX+mSm3YsSxq6KODVLfFt3OYs9JEmx6T3h3el9oM+OPBk4c2P+bMcXyPMIBtW/Mvy&#xA;sf8ActaJ5p0hAS+oWKiG9RQftPb/AGX23on37bw48uP6hxx7xz+TljTdn6z+6l+Xy/zZ7wPulzHx&#xA;/SyPy15z0HzJCz6TdRzSRgfWLYsVmiJps8bKGG/IfR92RizwyfSXUa/svUaQ1ljQPI9D7inEpm4i&#xA;iqTVe58f9VvbLXXryZOyj23Pv7Yq6stfsrT5n29vnirqy0+ytfDketPl44q4mXeir7fEff2+WKrY&#xA;jL6a1UdB3IP3cV/Viq4GXaqr7/Efb2+eKurLT7K1/wBY+Hy8cVdWWv2Vp8z7+3yxVapl5P8ACKch&#xA;3Pgv+SPf/Poq8z8+fnTa6fct5a8mwDzJ50uRJHa2dofVht5E+FmuZFooMbV5R8qinxlFPIKo38lP&#xA;y0ufIXlJ7W9lW713VJ3v9YuOdQZ5B/dq3EVVABv3Ys23TFXoNZP5R956V+XhirSF/UbkAPhWlDUd&#xA;678R+v7sVX4qg9aIGj35PT6vLX/gD8sVRmKuxVj0uljVYvMdgZWhaW7jMUwAJjkS0tnjcA9eLqGy&#xA;eOfDIFEhYed+f0836vPYyTfVrS003UdN0681C1meYSPqF/FY3CW0UsYjDelcn1fVEiqQqirAkGYh&#xA;/DaBfVm9v+X95bwRwRebtdWKJQsa+pZGijYCptO2Vskm82+W9R0230qVvMmq30MusaXDNaXT2pid&#xA;JL2IMG9K3if7mGSjIxNhBFvR8ilK9H/3v1vcn/TV6in/AB52/TYYqmQI9Vh34iv3n3/hiq7FXYq7&#xA;FVpI9VR34mn3j3/hiq7FXYqxTzT+W+ha7OdQhL6Try/FDrNkfSnDAUBk409QbAfFvToRmNm0sZ78&#xA;pd4d32d27m0w8M1kw9YS3j8O74fJJbHz1rnlu+g0Tz/GiLMypY+ZIRxtJyCNpq8RE/c9B7U61R1E&#xA;sZ4cv+m6Ofn7Hw6uBzaEk19WI/VH+r/OH2vRQQQCDUHocznlXYq7FXYqtiIMSEdCop93sT+vFVxI&#xA;AqdgOpxVJ9a84eWtGFyNQ1CGKa0s5NRntQwecWsWzSiJauVrtUDFWMXv5k61qEE48meXLnV5DY2u&#xA;o6deXH+i2VzHcyKGRZZONJFRuXE0Pwt0ovJVL778uPOfm6a6j84eYntNK9a5jTSNFJijmtpBG0Hr&#xA;yOKl42X4gVYGlPss4ZVmXlXyN5S8qW7weX9MhsFl/vpEBaWShJUSSuWkYLyPEFqKNhQYqnuKuxVa&#xA;CPVYd+Ir959/4YquxVB61/xx7/t/o8u/+wPhTFUZirsVSzSP+OhrfX/e1P8AqCtsVSX8xYYYfLNl&#xA;HCixxjXdAIRAFArrtmTsPEnFWW4qxX8xf+Odo/8A23NI/wCo6LFWVYqlej/7363uT/pq9RT/AI87&#xA;fpsMVTIf3rb/ALI238T7/wAMVXYq7FXYqtP96u/7J238R7/wxVdirsVdiqX+YNE0zW9Jn0zU4Vns&#xA;7iiyI3UbijKdqMOx7ZDJjExR5OTpNXk0+QZMZ4Zx/HyYV+XWoanofmC//L7V52ujYRC70O9k+1LY&#xA;khQhJpUxk0+8dFzE00jCRxS3rce56LtzDj1GCGuxDh4zw5IjpPv+P6upeikgEAmhOw9z1zOeUSu5&#xA;8z6BbnVFe+iabRYfrOqW8R9WaCIoZAzxR8n3RSQKVOKpTF+YNldxeWrrStOvtS07zKzCO+ghPp2y&#xA;KvLncFqcQT0PQgEgn4QyqEnm/NDVdG1u2sobPy/qcF2sWh38zfW457RSpMroOXAutftAkH4abcyq&#xA;jL7yRLqeparNqus3dzpWr6aNOn0VGMVshO0k0XEllZh713IYsOARVG6R5J8r6T9Te0sIzc2Fkum2&#xA;95KPUn+qoKCNpGqxH+fTFVfzRa6pN5W1W10V/Q1OSyni0+RKApM0TLGVrQAq1KV2xVjPlDQPNuk+&#xA;R/qNp9XstUa6llt7SYEQ2ts8hMcICNcDl6VC9GYcy256lVGX9h57m8o6pbXcsFxq0gH1VbFjEWjB&#xA;UyRh5BGFZ1DKD79cVTLyTZX1loIgvIntyLq9e2tpWDvFayXcr20dVaQAJAyBVB+EUXtiqe4qtH96&#xA;2/7I238T7/wxVhWjfmdFqeraVarpc8dl5gW7fQ7wHkZY7F0WWSaPiBArrJziq5LAbhWoCqmXnLzE&#xA;2mCCxe0eSDVEngF2CeMcggkdQfgZd+FPiYEkjiH3AVZBFcxyoHUOAdgHjdD1A3DKCOuKrxKp7N4/&#xA;Zb29vfFUsl0pvrVxPb6hd2n1lxJNHEkLKXRBHUepDI32Yh3/AF4qhNU8r/pS2jtb3Vr6SGO4t7pF&#xA;CWy0ms7hLmFqrbj7M0Kt4H5YqiU06+dd9Zvxvt+6tR0Ip1tR44qhdT8sDU4YY7zVr+RLeeG8iAS2&#xA;UiW3cTRN8NuK0ZRt36Yqi2029/6vV/t4RWvav/Lt/k/51xVE6fZJZCes81zLcy+rNNKq8iwRIh/d&#xA;pGgAVF7e+KokSD1CaNQqpHwt4n/J9/HFVxlUdm8fst7+3tirvUWtKHw+yfEjw9sVcJVNNm3/AMlu&#xA;9Pb3xVaZBzU0anEn7Lex/l/jirU13bwqGlf01LBFLAgFmPFVFepY7Ad9vEYqhG8waMusrorXaDVW&#xA;i9dbPf1DGG48qU8fw36DI8Yur3bvy+Tw/E4T4d8PF0vnV96Qj8x9PvPLOq63oVhd6q2lzvamxSJ4&#xA;5ZJY2RTxBViFpIHO3ILX4aimVeODEmO9bOcOypxzY8eUxx+JESEidhE3RPyRF7rXmqW88vSadpH+&#xA;4q+Hq62bolLi0UorIvAcvjDVDAK24p8NQ2SMpXGhsefk1Rw4BDLxz/eRrgoWJb7791bhgU1lrl1+&#xA;eF7a399ykl0q4GmXlgAkun20pZIy6tGwaVWYkFuQ+IHoQowxf5nff0/IPSzOP+Q/Rcbyjiv+KXfH&#xA;yr7mar5A0260vy5aa5e3mrXvluaO6ttQkkljkkuIxQPJxJLD4h9pi1BRmar8ti8Wntro+iWmpXmq&#xA;2tjHDqN+E+u3aRcZZRGvwcyBU0G3+1iqNVoo0CIpVEFFVUNABUUAA/ycVdFIPTUENWgB+E/LwX9W&#xA;KrhKpps2/wDkt3p7e+Ksf84rbS21iZ4PrCRTzSek0RlqyWNyy8YyrcmqNgBiqXwr5WstLtZtX0iz&#xA;iubz/eKzitRJdTAqDX0PSEgferrx+DvTJwxmXJBkA1HYSzgGz8k2MEX7P6Rkt4GoOhK28V4R9O+W&#xA;eHAc5fIfrpjxHuXfoq8gA9XyZpUsYoONnPHI9PYXFrar/wANjwYz/EfiP1Ercu5EaSnkm9uPqJ0a&#xA;Cx1FF5HTry0iim4Kack2ZJFH80bMPfIzxGIvmO8JEgUZFpel6d5jshY2cNqJLK6D+hGqcuMtsF5c&#xA;AK05HrlTJOkblIxANOK9QR4nuB+vFUrsvJ3lOxuobuy0ezt7q3L/AFeeKCNXj9UkyBGAqoYsSQNs&#xA;Vd5g0nTJ7W5v5rWKS9t7WZYLhlUugMbA8SQafaP3nxxVN8VdirsVdiq2KnE0/mbw/mPhTFV2KuxV&#xA;2KoO/wBT03TUa51C6hs4DwT1p3SJOTEhV5NTcn3wSkBuWzFhnkPDAGR7gLQ0vmnQovMkPluS6C6z&#xA;cQG5hteLbxAkV504V+BjxrWgyPiR4uHrzbRo8pwnNX7sS4b8+dd6Tp5+kv8Ay3rOq6Ho15eXmk3E&#xA;lp+jZk9CWaSJlDlPtmgVieNOe1ONaZX4xMSQDY6cnL/k6MM2OGTJCMckRLiHqEQb58t/JGXV751l&#xA;uvL0ljp9tDZXI5+YYrmQma2BjVgkbIeLFW5LsDU06CpyRM7jQFdWqENMI5BKUjMV4Zj9J334r35V&#xA;TUOi+YpNS1xdR1hn0zUYzHpcdsiwz2asnF2SUAnnUgqd9xX2wiMrNnY8vJjPPh4MfBjqcL4iSSJ7&#xA;7bdKG23NDn8uNCuvKuneXdbefWLfTpFmjuLmVxK0ilqVZCp4hZCgXstB2rkPy8TERlcq728drZYZ&#xA;pZsQjiMxREYjhrawAbq6ZAdK0xtSXVDaQnUlj9BbwovrCImvAPTlxqemW8Iu63cDx58Hh8R4Lvhv&#xA;a++uV+aKAAFAKDc7eJ3OSamM+ePO+meWbFfUVrzVbkhdN0qEcp55OXwgKAxC16tT5b5Rn1Axjvl0&#xA;DtuyeyMmsnt6cUfqmfpiP1+X6ED+XXlHUdON75h8wFZfNGtsJL0jcQRD7Fuh32UUrQ9gO1cr02Ex&#xA;uUvrl+KcrtztPHl4cGDbT4do/wBI9ZH3/r72aZlvPuxV2KrYaeklOnEU6eHtQYquxVLNWA+v6L7X&#xA;r0/6Q7jFUl0q9020g1nzTqkgEy3dzaPK3xGG3tLlraKFP5Q/ASEd2apy/MaAiOVA/MX+xhDqU90f&#xA;XLLVYfVt+S/BHKFYo3KKYcopUeNpI3SQD4WRiOvcHKGavplk1lYw2rXMt20S0a5uGDSua1qxAGKp&#xA;Z5ysYLjQLq5ZhDdadG95ZXmwaCaBS6uD/L8NHH7S1B2OXYJESA6HYsJjZdBObnWNIunT05JtNuXZ&#xA;e683tWK7+FcrkKJDIFOBT1W8eK+HifpyKV2KoPWjTRr89P8AR5d+n7B9x+vFUZirsVdiqg1/Yrd/&#xA;UmuIheekZ/qxdRL6IbiZOFeXDltypSuCxdM/Dlw8VHhur6X3MWufzT8n23l6DX4rmS+024vhp6Pa&#xA;xO7iZ2OzRtRwAor4kU4g1Ayk6iHCJcwTTsodjag5pYSBCcY8R4jWyYp5h1eXzTf6GmizpbWtotxb&#xA;azKStrPK1P3IYK1KFt6VOx+HpWYmeIxrbvceWmxjBHLxgyMqMP4gO9K1H5p6l5Y02QtY6F5hF4H1&#xA;KIj14TaK7AqoBmozLxNA/wDs1J2r/eGI5Rle/ucknRY88wOPJh4fQfpPFQ3PLYG03h8u36ebLvW3&#xA;1i6lsLq1W2TRSSLeJwRWVKHZiF8K7n4qUAsEDx8V7VycaWqidOMXBESEr4/4iO73Jbp/5Y+ULby4&#xA;nlie2bUNLgmF2kd3IXYSl2bkCpTj1K0VQCK15VbIR08BDgqw35e2dRLUHUCXBkIr07bVTKTaWpuh&#xA;eGGP62sZhFxxHqCMkMU505cSwBpl1dXW8ZrhvbuVcLF2KrSf3qiv7LbfSPf+GKrsVUL6+s7C1ku7&#xA;2dLe2hHKSaRgqqPcnBKQAstmHDPJIRgDKR6Bgl1+YGu+Y5ZbDyBYfWEB4SeYrxTHZRkmjGIMOUrL&#xA;7D6COuEdTKe2If5x5PS4+xcOlAnrp8P+1R3mff8AzfxuCmnlj8vtP0S4fVr64fV/MdwV+s6vc/b3&#xA;IHCFa0iTtQfLfpluHTCB4j6pd7gdpdtz1ERigBiwR5Qjy/zj/EWXZkuldirsVdiq2E1iQ1rVRv17&#xA;fNv14quxVLNWA+v6L7Xr0/6Q7jFUh8x+T49W1RrazlvNOiuzFdaxc2srQxv6TD0vTFCPXZoRV0oV&#xA;UVY7qDb4pqjRpjw72kH5bflj+W935K02e78q6RdXD+tznnsLaWRqTuoLO6MzGg6k5UyZN/yqf8rP&#xA;+pN0P/uG2f8A1TxVIfyv8naddfln5RNzc3c1lLpGnXEmmyTs1s0jW0ch5KfiK89/T5cP8nLxnI5A&#xA;X39WHAGa3AH+JrBqb/UrwV709W1yhmmIP71hX9ldvpPv/DFV2KpJ5m13SbK2fT7q5WK8v4ZltIiG&#xA;qzCNjSqj4a0+GpFTsN8VTvFUl1y282y6vo8mjXdtb6XDK7a3DOhaSWIgBFioDQ/a/aXenUVU1yEr&#xA;FcurmYJYBjmMgkchrgrkO/i+CUXH5ez6lpGu6Rrmu3t9ZavefWYOBWJ7WIOHWGNm9UFfhoQRx8FU&#xA;75WcBlExkTufk5cO1I4suPLixxjLHGje4kaIMiNudp1F5T0CPW4Nd+rc9Yt7YWcd7I8jyeiP5uTF&#xA;WffdyOXvlvhx4uLrVOF+cy+EcN/uzLi4f6XK/kjtN0+w0+1FtYW0VpbKzssEKCNAWcsxCgAbk1yQ&#xA;iBsGnJlnkPFMmR7zuicLW7FXYqtH943yHjTqfoxVdirsVdiqS6/5v8taCVOq6hFbuytwgqWlf/Vi&#xA;TkxrSg267ZVkzwh9Rc/R9majUn91AyHf0+JOzHX83+ddfSnlPRDaWr/Y1bWQ0EbKdw8cC1kZWA+E&#xA;07g+2UeNkn9EaHfJ2w7M0emP+FZeKX8zF6j7jLkPP3FUt/yttL65S+83ahP5jvENY4pv3VnGT/vu&#xA;2Q8fHqTiNICbmeI/Z8mE/aGWOJhpYRwQPUbzPvkWbQwwwxJDCixxRgKkaAKqgdAANgMywKeflIyN&#xA;k2S6T7I+a9K+I8MLFdirsVdirsVWx/3a/Ida16e+/wB+KrsVSzVgPr+i+169P+kO4xVMwQRUGo3G&#xA;3iNjirFPysIPkPSyNwfXof8Ao4kxVlYIYAg1B3BHQjFWK/lP/wCSs8m/9sPTf+oOPFU2m4N5lsHF&#xA;DWyvKMPD1bU9cVTIf3jfIeNOp+jFV2Ksc85eX31OGO7a+lhh02Oeb6kiRNHNIYmUF+aSN8KlgOPj&#xA;40IVT6K0tYUCQwpGi7qqKFAJIOwA8Riq8QxDoi+HQdNv6DFXGGI1qimvXYd6/wDNRxV3px1rxFRv&#xA;Wg61r+vFVkUMQXaNRRmp8IH7XyHgMVX+jFSnBaUpSg6UpT7sVcYYjWqKa9dh3r/zUcVd6cZNeIr1&#xA;rQdag/rGKrBDF6rfAtOKgbDpU7dPYd8VSzWvM3lbRhTVL62t3I+GF2UyMDyA4xirGvxDp7ZVPNCH&#xA;MubpezdRqP7uEpDvrb58kiXz3famFPljy7dX8clGjv7kCztiCVbmGk+Jhxl5DYV3HXKfzJl9ESfs&#xA;Dsj2Ljw/4xmhAj+GPrl1222G4r7UJd6J5puxCfNPmS20S0uJY4YbLTOMBkmfgUhW5lo5YtHQKo+I&#xA;fLHwssvqlQ/o/rZfn9Fg/uMXiS/nZN+/+EbfqIT7RPIXlXRZVezsEe4KnneT1nmY/CKmSQMQTxHQ&#xA;j5Zbj08Ichu4Os7Y1OoFTl6f5o2j8h706lm0+OeGCZ4knuSwgicqHkKqWcIp3aikk07Vy51iz6/p&#xA;JVpPrNvxWRo2fmlBIh+JSa/aU9R2xVR07VtKv7u9tbSjS6dIsVx8IFGZQ68e5FAKHptt0xVGSwxF&#xA;ADGp3XbiDtX5HxOKrzHGeqg167D3/rirvSirXgtfGg9v+aRirvRipTgtOlKDpSn6tsVcYYjWqKa9&#xA;dh3r/wA1HFVsUUYjT4ADQdgNxQ+C9/bFVwhiFKIop02Han/NIxVRu9N068jEV3aw3EStzVJY1dQw&#xA;BHIBgd6MRiqE/wAMeWv+rTZf9I8X/NOKrU8seW6uP0TZ0B+H/R4ulB/kDFV3+F/LX/Vpsv8ApHi/&#xA;5pxVw8r+WQKDSLIAdvq8X/NOKq9pouj2Tl7Oxt7Z2AVmhiSMkA1AJUDuK4qiEREkbioUFV6CnSo8&#xA;PD3xVUxVB61/xx7/AP5h5f8AiB8cVRmKuxV2KuxVbH9k/wCs3h/MfDFV2KuxVBaz+m/0e/6E+rfp&#xA;Hknp/XfU9HjzHPl6XxV4V4++QycVemr83I0vg+IPG4vD3+mr5bc9ufPyYyvkjXtR5L5i8x3VwrLR&#xA;7awC2ULA+otDwLORR1O5+0OuUfl5S+uR+Gztz2tgxH/B8MY+c/Wenft0PwKa6N5F8p6PI01jpsK3&#xA;TsXe6kHqzFmIZj6knJhVl5UG1d8shp4R5DdwtV2xqs4qczw9w2HyHy9yfZc61hX5g+R9U8z6jo72&#xA;179Vs7UTRXqhgGKTy27OyKY5KuYIZYgQylfUrU7qVUx8w+XfMOo6kk+n+YJdMgEXD6ukKyDkDUtX&#xA;mh3r4Yqt8xaFqt7qnlO5thFL+hr+S6vrmRvTk9OTT7mzPpLwkBYvdB6EgfDiqB8ieTLzSbd01iG1&#xA;craafZJHEfWVmsIPRa4JeOMhpdhTeiqu/bFWVWulafa3M91bwLHPcBRKwruErxAHRRuTRe+/XFUR&#xA;J9kf6y+H8w8cVXYq7FXYq7FVsX90n+qPDw9q4quxV2KuxVan2n/1vb+UYquxV2KuxVaP71v9UeHi&#xA;cVXYqg9a/wCOPf06/V5f+IH3H68VRmKuxV2KuxVbEaqd6/E3v+0fc4quxV2KuxVaD+9YV/ZXb6T7&#xA;/wAMVXYq7FXYqtJ/eqK/stt9I9/4YquxV2KuxVbKaKN6fEvt+0PcYquxV2KuxV2KrYTWJDWtVG/X&#xA;t82/Xiq7FXYq7FVqH4pN+jf8aj3P8MVXYq7FXYqtB/esK/srt9J9/wCGKrsVYt51sNUmudLv7OBL&#xA;i3sDdtfRvcC2BimtXhFSwZKBnDEn7IG1emKo3y+17qWiWGove3sLXcKTtBOtr6iGQBuDcYFHw9Om&#xA;Kph9Quv+rlcf8Db+3/FOKuNhdf8AVyuP+Bt/f/in3xVKvNF5qOiaJc6nDLc3zWyl2tw1rEWUVJAZ&#xA;oTVj9lFAJZiB3riqDi1G7g8z2+gK93FbXVu96l/L6Cq8pfnJDGBbsrOvLk1XXZtq02VZD9Quqf8A&#xA;HSuOlK8bf7/7nFXGwuv+rlcf8Db+/wDxT74q76jdV/46Nx8uNv8A9UsVSLTr24uPNWp6VJNd29xa&#xA;28EiXDCCk0TNIAVBgUfC1fsFh8Q5FW+EKp79Quv+rlcf8Db+/wDxTirvqN1X/jo3Hy42/wD1SxVw&#xA;sLr/AKuVx/wNv7f8U+2KsSfzBqBXXZo4NQn1TQKQxWUYhMs6XAVkZR9WrQlNyiuvwniWoQFWQ6Q0&#xA;2p6TZajFqcpjvbeK4jaL0Hj4zIHHB2gQsvxbEqK+GKoz6jdV/wCOjcfLjb/9UsVcLC6/6uVx/wAD&#xA;b+3/ABT7Yqx3z5rth5Y0FtR1TU7hlDoLa3raxtLKh9QBS8QHwhOR9l7nYqshS0nkQSR6nOyOAyMo&#xA;tyCDuCD6XeuKt/ULr/q43H/A2/t/xV7Yq76hdUp+krj58bfwp/vnFWPebvM9j5YGnLfarP6+qXcF&#xA;pbRVtENJp44ZJjyi+xD66s30eNcVX6RfXcnmC/8AL3O6tIdMhha1ml9GtxGwALxL9X48EYFCeda9&#xA;twcVT4WF1/1crj/gbf2/4p9sVd9Quqf8dK4+fG3/AOqOKu+oXX/VxuP+Bt/f/ir3xVIfLl/d6jqm&#xA;t2jyXVjNYXKqySeiZJkK8I5+Jt1VY5Fi+Dizd60IpiqffULr/q43H/A2/wD1SxVxsLr/AKuVx/wN&#xA;v7/8U++Ku+o3X/VxuP8Agbfxr/vr6MVYXF55urTQdT16bT7iS5tLtbG8tbh+DWsEKet690YrZTEo&#xA;im9VqI44lTWh2VegYqh9Q0+x1Gymsb6BLmzuFKTwSDkjqezA9Riq6xsbOwtIrOyhS3tYFCQwxgKi&#xA;qOwAxVWxV2KoLV9F0nWbM2Wq2kV7aFlcwTKGTkhqpoe4OKrbLy/odjdNd2dhBb3LAqZY0VW4seTA&#xA;UG1TuaYqj8VdirsVQtrpWm2lzcXVtaxQ3N2Q1zMigPIRUjkep3JP0nFUVirsVdiqVN5T8tNHNGdM&#xA;t+FwxkmAjUc2Lq5Jp/lIp+jFUziijijSKJBHHGAqIoAVVAoAAOgGKvOZNe8wP5280eVLfUZTe3K2&#xA;MmjfDCfqNrcxSC4ulHD4xE8LcfU5AuUTocVeiW0Lw20ULzPcPGio08vHm5UULvwCLybqaKB7Yqsv&#xA;tPsdQtntb63juraQUeGZFdDUU3VgRiquAAKDYDFXYq7FUPeadYXyIl5bRXKxuksayorhZI3EiMOQ&#xA;NCroGB8Riqlp+iaRpzyyWFnFbPNT1XjUKWC/ZBPgK9MVRuKuxV2KoXT9J0zThKLG1jtvXcyTemoX&#xA;kx7tTriqKxV2KuIBBBFQdiDiqUJ5Q8rpDHAul2whiZXRPTWnJAwUnxoHYb4qm+KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxVLof8P8A+Ibn0vq3+IPqsP1vjw+tfVPUk9Dn+36fqepx7VriqY4q&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>200.014837</stDim:w>
            <stDim:h>96.546389</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d1e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -254.036 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 254.036 li
535.43 254.036 li
535.43 0 li
cp
clp
[1 0 0 1 0 0 ]ct
33.064 222.224 mo
33.064 6.62354 li
526.681 6.62354 li
526.681 222.224 li
33.064 222.224 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
ef
.7 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
33.064 222.224 mo
33.064 6.62354 li
526.681 6.62354 li
526.681 222.224 li
33.064 222.224 li
@
.466667 lw
[.5 4 ] 0 dsh
526.681 6.62354 mo
526.681 6.62354 li
33.064 6.62354 mo
526.681 6.62354 li
526.681 60.5234 mo
526.681 60.5234 li
33.064 60.5234 mo
526.681 60.5234 li
526.681 114.423 mo
526.681 114.423 li
33.064 114.423 mo
526.681 114.423 li
526.681 168.323 mo
526.681 168.323 li
33.064 168.323 mo
526.681 168.323 li
526.681 222.224 mo
526.681 222.224 li
33.064 222.224 mo
526.681 222.224 li
526.681 6.62354 mo
526.681 6.62354 li
526.681 222.224 mo
526.681 6.62354 li
456.155 6.62354 mo
456.155 6.62354 li
456.155 222.224 mo
456.155 6.62354 li
385.63 6.62354 mo
385.63 6.62354 li
385.63 222.224 mo
385.63 6.62354 li
315.105 6.62354 mo
315.105 6.62354 li
315.105 222.224 mo
315.105 6.62354 li
244.581 6.62354 mo
244.581 6.62354 li
244.581 222.224 mo
244.581 6.62354 li
174.056 6.62354 mo
174.056 6.62354 li
174.056 222.224 mo
174.056 6.62354 li
103.531 6.62354 mo
103.531 6.62354 li
103.531 222.224 mo
103.531 6.62354 li
33.064 6.62354 mo
33.064 6.62354 li
33.064 222.224 mo
33.064 6.62354 li
0 0 0 rgb
@
.7 lw
[] 0 dsh
33.064 222.224 mo
33.064 217.265 li
33.064 222.224 mo
33.064 6.62354 li
33.064 222.224 mo
526.681 222.224 li
@
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Roman def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 50 /two putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GGPFTL+Times-Roman /Times-Roman findfont ct_VMDictPut/GGPFTL+Times-Roman*1 [50{/.notdef}rp /two 205{/.notdef}rp]GGPFTL+Times-Roman nfGGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf29.5645 236.749 mo(2)sh103.531 222.224 mo
103.531 217.265 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginGGPFTL+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-/five <1C60D8A8C9B7A73D986C0D7DE9D329253DCB6E971CF9F86B9AEBF9128F879E3BA076A7524F8AC6EF0948A0BD36A1BBAD3176809EA5D8C10BC04F27D1FCF8D9BA3577509C082FF1EE49DF22B08F8B21F3A6C3932A3BC82C6C594431B4032E2BEF80E15787B3E427A047FD8FD191291F42BAC74588B21DCB1EB3232C29BA67B72B9A00CCBC571F0227C6EF50964CF91F1B0EC573A04AE3E4DF9447B77BD2A0A959F534BEC79AECEF51C27F8D677FD06B99742B747A695088E88EBCC4A6BCCC7402ABFDFE9926161D96> |-systemdict /gcheck known {setglobal} if end {end} ifendGGPFTL+Times-Roman /Encoding getdup 46 /period putdup 53 /five putpop%ADOEndSubsetFont
/GGPFTL+Times-Roman*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 2{/.notdef}rp /five 202{/.notdef}rp]GGPFTL+Times-Roman nfGGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf94.7793 236.749 mo(2.5)sh174.056 222.224 mo
174.056 217.265 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginGGPFTL+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7A73D960D5C905E34DC81A096980F2B4111B9B099A6DB83E1916FF3E1A9E04B02D3E9232818F77B09A9AACB5832FED542FDDA70002EB05443C3A08AC9203ACF784CB865C5B9F7D872416879897E73175190413158DECCEEC3F81053539EF7A5BA54848FD5EF8191B77C87FC4B2FB70A247D6480306D63973D6D1E40988764838CF4D7C7CFD56B10F551336B687A8CAD70446C673C2BFDC7C6AD86547DB031DFD479DCB051DAF5177334E8CD4B35F8B65FC86BD3BDBBB8D1E2B3149970112D8374721C0AB537409EB4ADF5E62264D22634EE> |-systemdict /gcheck known {setglobal} if end {end} ifendGGPFTL+Times-Roman /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/GGPFTL+Times-Roman*1 [46{/.notdef}rp /period 3{/.notdef}rp /two /three /.notdef /five 202{/.notdef}rp]GGPFTL+Times-Roman nfGGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf170.555 236.749 mo(3)sh244.581 222.224 mo
244.581 217.265 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
GGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf235.83 236.749 mo(3.5)sh315.105 222.224 mo
315.105 217.265 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginGGPFTL+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7A73DB992534E0CF1B84939C969D2AC65F1AE73EE883487A67D0ECB26822C5FF826C828AC8594DE5FF3D9E5AE6F090B> |-systemdict /gcheck known {setglobal} if end {end} ifendGGPFTL+Times-Roman /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/GGPFTL+Times-Roman*1 [46{/.notdef}rp /period 3{/.notdef}rp /two /three /four /five 202{/.notdef}rp]GGPFTL+Times-Roman nfGGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf311.604 236.749 mo(4)sh385.63 222.224 mo
385.63 217.265 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
GGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf376.885 236.749 mo(4.5)sh456.155 222.224 mo
456.155 217.265 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
GGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf452.654 236.749 mo(5)sh526.681 222.224 mo
526.681 217.265 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
GGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf517.93 236.749 mo(5.5)sh33.064 222.224 mo
37.9639 222.224 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginGGPFTL+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-systemdict /gcheck known {setglobal} if end {end} ifendGGPFTL+Times-Roman /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/GGPFTL+Times-Roman*1 [46{/.notdef}rp /period 2{/.notdef}rp /one /two /three /four /five 202{/.notdef}rp]GGPFTL+Times-Roman nfGGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf24.0195 227.239 mo(1)sh33.064 168.323 mo
37.9639 168.323 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
GGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf24.0195 173.339 mo(2)sh33.064 114.423 mo
37.9639 114.423 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
GGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf24.0195 119.444 mo(3)sh33.064 60.5234 mo
37.9639 60.5234 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
GGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf24.0195 65.5391 mo(4)sh33.064 6.62354 mo
37.9639 6.62354 li
0 0 0 rgb
@
.137255 .121569 .12549 rgb
GGPFTL+Times-Roman*1 [14 0 0 -14 0 0 ]msf24.0195 11.6338 mo(5)shgsave
55.522 164.007 mo
67.0142 164.007 li
67.0142 152.515 li
55.522 152.515 li
55.522 164.007 li
cp
clp
2 lw
63.2969 158.159 mo
63.2969 159.319 62.356 160.26 61.1973 160.26 cv
60.0376 160.26 59.0972 159.319 59.0972 158.159 cv
59.0972 157.001 60.0376 156.06 61.1973 156.06 cv
62.356 156.06 63.2969 157.001 63.2969 158.159 cv
0 0 0 rgb
@
grestore
gsave
65.7305 161.849 mo
77.2222 161.849 li
77.2222 150.357 li
65.7305 150.357 li
65.7305 161.849 li
cp
clp
2 lw
73.5449 156.144 mo
73.5449 157.303 72.604 158.243 71.4448 158.243 cv
70.2856 158.243 69.3447 157.303 69.3447 156.144 cv
69.3447 154.984 70.2856 154.044 71.4448 154.044 cv
72.604 154.044 73.5449 154.984 73.5449 156.144 cv
0 0 0 rgb
@
grestore
gsave
76.0557 159.749 mo
87.5474 159.749 li
87.5474 148.257 li
76.0557 148.257 li
76.0557 159.749 li
cp
clp
2 lw
83.793 153.96 mo
83.793 155.119 82.8521 156.06 81.6929 156.06 cv
80.5337 156.06 79.5928 155.119 79.5928 153.96 cv
79.5928 152.8 80.5337 151.86 81.6929 151.86 cv
82.8521 151.86 83.793 152.8 83.793 153.96 cv
0 0 0 rgb
@
grestore
gsave
86.5557 157.591 mo
98.0474 157.591 li
98.0474 146.099 li
86.5557 146.099 li
86.5557 157.591 li
cp
clp
2 lw
94.377 151.776 mo
94.377 152.935 93.436 153.876 92.2769 153.876 cv
91.1177 153.876 90.1768 152.935 90.1768 151.776 cv
90.1768 150.616 91.1177 149.676 92.2769 149.676 cv
93.436 149.676 94.377 150.616 94.377 151.776 cv
0 0 0 rgb
@
grestore
gsave
97.2305 155.433 mo
108.722 155.433 li
108.722 143.94 li
97.2305 143.94 li
97.2305 155.433 li
cp
clp
2 lw
105.129 149.592 mo
105.129 150.751 104.188 151.691 103.029 151.691 cv
101.87 151.691 100.929 150.751 100.929 149.592 cv
100.929 148.433 101.87 147.491 103.029 147.491 cv
104.188 147.491 105.129 148.433 105.129 149.592 cv
0 0 0 rgb
@
grestore
gsave
108.022 153.273 mo
119.514 153.273 li
119.514 141.782 li
108.022 141.782 li
108.022 153.273 li
cp
clp
2 lw
115.881 147.575 mo
115.881 148.735 114.94 149.676 113.781 149.676 cv
112.622 149.676 111.681 148.735 111.681 147.575 cv
111.681 146.417 112.622 145.476 113.781 145.476 cv
114.94 145.476 115.881 146.417 115.881 147.575 cv
0 0 0 rgb
@
grestore
gsave
118.931 151.173 mo
130.422 151.173 li
130.422 139.683 li
118.931 139.683 li
118.931 151.173 li
cp
clp
2 lw
126.801 145.392 mo
126.801 146.551 125.86 147.491 124.701 147.491 cv
123.542 147.491 122.601 146.551 122.601 145.392 cv
122.601 144.232 123.542 143.292 124.701 143.292 cv
125.86 143.292 126.801 144.232 126.801 145.392 cv
0 0 0 rgb
@
grestore
gsave
130.014 149.015 mo
141.506 149.015 li
141.506 137.523 li
130.014 137.523 li
130.014 149.015 li
cp
clp
2 lw
137.889 143.208 mo
137.889 144.366 136.948 145.308 135.789 145.308 cv
134.63 145.308 133.689 144.366 133.689 143.208 cv
133.689 142.048 134.63 141.107 135.789 141.107 cv
136.948 141.107 137.889 142.048 137.889 143.208 cv
0 0 0 rgb
@
grestore
gsave
141.214 146.857 mo
152.706 146.857 li
152.706 135.365 li
141.214 135.365 li
141.214 146.857 li
cp
clp
2 lw
148.977 141.023 mo
148.977 142.183 148.036 143.124 146.877 143.124 cv
145.718 143.124 144.777 142.183 144.777 141.023 cv
144.777 139.864 145.718 138.923 146.877 138.923 cv
148.036 138.923 148.977 139.864 148.977 141.023 cv
0 0 0 rgb
@
grestore
gsave
152.531 144.698 mo
164.022 144.698 li
164.022 133.207 li
152.531 133.207 li
152.531 144.698 li
cp
clp
2 lw
160.401 138.839 mo
160.401 139.999 159.46 140.939 158.301 140.939 cv
157.142 140.939 156.201 139.999 156.201 138.839 cv
156.201 137.681 157.142 136.739 158.301 136.739 cv
159.46 136.739 160.401 137.681 160.401 138.839 cv
0 0 0 rgb
@
grestore
gsave
163.964 142.54 mo
175.456 142.54 li
175.456 131.048 li
163.964 131.048 li
163.964 142.54 li
cp
clp
2 lw
171.825 136.823 mo
171.825 137.983 170.884 138.923 169.725 138.923 cv
168.566 138.923 167.625 137.983 167.625 136.823 cv
167.625 135.664 168.566 134.724 169.725 134.724 cv
170.884 134.724 171.825 135.664 171.825 136.823 cv
0 0 0 rgb
@
grestore
gsave
175.514 140.382 mo
187.006 140.382 li
187.006 128.89 li
175.514 128.89 li
175.514 140.382 li
cp
clp
2 lw
183.249 134.64 mo
183.249 135.799 182.308 136.739 181.149 136.739 cv
179.99 136.739 179.049 135.799 179.049 134.64 cv
179.049 133.48 179.99 132.54 181.149 132.54 cv
182.308 132.54 183.249 133.48 183.249 134.64 cv
0 0 0 rgb
@
grestore
gsave
187.181 138.224 mo
198.672 138.224 li
198.672 126.732 li
187.181 126.732 li
187.181 138.224 li
cp
clp
2 lw
195.009 132.455 mo
195.009 133.614 194.068 134.556 192.909 134.556 cv
191.75 134.556 190.809 133.614 190.809 132.455 cv
190.809 131.296 191.75 130.355 192.909 130.355 cv
194.068 130.355 195.009 131.296 195.009 132.455 cv
0 0 0 rgb
@
grestore
gsave
198.906 136.065 mo
210.397 136.065 li
210.397 124.573 li
198.906 124.573 li
198.906 136.065 li
cp
clp
2 lw
206.769 130.272 mo
206.769 131.431 205.828 132.372 204.669 132.372 cv
203.51 132.372 202.569 131.431 202.569 130.272 cv
202.569 129.112 203.51 128.172 204.669 128.172 cv
205.828 128.172 206.769 129.112 206.769 130.272 cv
0 0 0 rgb
@
grestore
gsave
210.747 133.849 mo
222.239 133.849 li
222.239 122.357 li
210.747 122.357 li
210.747 133.849 li
cp
clp
2 lw
218.529 128.088 mo
218.529 129.247 217.588 130.188 216.429 130.188 cv
215.27 130.188 214.329 129.247 214.329 128.088 cv
214.329 126.929 215.27 125.987 216.429 125.987 cv
217.588 125.987 218.529 126.929 218.529 128.088 cv
0 0 0 rgb
@
grestore
gsave
222.647 131.632 mo
234.139 131.632 li
234.139 120.14 li
222.647 120.14 li
222.647 131.632 li
cp
clp
2 lw
230.457 125.903 mo
230.457 127.063 229.516 128.004 228.357 128.004 cv
227.198 128.004 226.257 127.063 226.257 125.903 cv
226.257 124.744 227.198 123.804 228.357 123.804 cv
229.516 123.804 230.457 124.744 230.457 125.903 cv
0 0 0 rgb
@
grestore
gsave
234.605 129.415 mo
246.097 129.415 li
246.097 117.923 li
234.605 117.923 li
234.605 129.415 li
cp
clp
2 lw
242.385 123.72 mo
242.385 124.879 241.444 125.819 240.285 125.819 cv
239.126 125.819 238.185 124.879 238.185 123.72 cv
238.185 122.56 239.126 121.62 240.285 121.62 cv
241.444 121.62 242.385 122.56 242.385 123.72 cv
0 0 0 rgb
@
grestore
gsave
246.564 127.198 mo
258.056 127.198 li
258.056 115.707 li
246.564 115.707 li
246.564 127.198 li
cp
clp
2 lw
254.313 121.367 mo
254.313 122.526 253.372 123.468 252.213 123.468 cv
251.054 123.468 250.113 122.526 250.113 121.367 cv
250.113 120.208 251.054 119.268 252.213 119.268 cv
253.372 119.268 254.313 120.208 254.313 121.367 cv
0 0 0 rgb
@
grestore
gsave
258.581 124.923 mo
270.072 124.923 li
270.072 113.432 li
258.581 113.432 li
258.581 124.923 li
cp
clp
2 lw
266.409 119.183 mo
266.409 120.343 265.468 121.283 264.309 121.283 cv
263.15 121.283 262.209 120.343 262.209 119.183 cv
262.209 118.024 263.15 117.083 264.309 117.083 cv
265.468 117.083 266.409 118.024 266.409 119.183 cv
0 0 0 rgb
@
grestore
gsave
270.539 122.648 mo
282.03 122.648 li
282.03 111.157 li
270.539 111.157 li
270.539 122.648 li
cp
clp
2 lw
278.337 116.831 mo
278.337 117.991 277.396 118.932 276.237 118.932 cv
275.077 118.932 274.137 117.991 274.137 116.831 cv
274.137 115.673 275.077 114.732 276.237 114.732 cv
277.396 114.732 278.337 115.673 278.337 116.831 cv
0 0 0 rgb
@
grestore
gsave
282.497 120.374 mo
293.989 120.374 li
293.989 108.882 li
282.497 108.882 li
282.497 120.374 li
cp
clp
2 lw
290.265 114.647 mo
290.265 115.808 289.324 116.747 288.165 116.747 cv
287.005 116.747 286.065 115.808 286.065 114.647 cv
286.065 113.488 287.005 112.548 288.165 112.548 cv
289.324 112.548 290.265 113.488 290.265 114.647 cv
0 0 0 rgb
@
grestore
gsave
294.397 118.099 mo
305.89 118.099 li
305.89 106.607 li
294.397 106.607 li
294.397 118.099 li
cp
clp
2 lw
302.192 112.295 mo
302.192 113.455 301.253 114.396 300.093 114.396 cv
298.934 114.396 297.993 113.455 297.993 112.295 cv
297.993 111.136 298.934 110.195 300.093 110.195 cv
301.253 110.195 302.192 111.136 302.192 112.295 cv
0 0 0 rgb
@
grestore
gsave
306.239 115.765 mo
317.73 115.765 li
317.73 104.273 li
306.239 104.273 li
306.239 115.765 li
cp
clp
2 lw
314.121 109.943 mo
314.121 111.103 313.181 112.043 312.021 112.043 cv
310.861 112.043 309.921 111.103 309.921 109.943 cv
309.921 108.785 310.861 107.844 312.021 107.844 cv
313.181 107.844 314.121 108.785 314.121 109.943 cv
0 0 0 rgb
@
grestore
gsave
317.964 113.374 mo
329.455 113.374 li
329.455 101.882 li
317.964 101.882 li
317.964 113.374 li
cp
clp
2 lw
325.712 107.592 mo
325.712 108.75 324.772 109.691 323.612 109.691 cv
322.454 109.691 321.513 108.75 321.513 107.592 cv
321.513 106.432 322.454 105.492 323.612 105.492 cv
324.772 105.492 325.712 106.432 325.712 107.592 cv
0 0 0 rgb
@
grestore
gsave
329.63 111.157 mo
341.122 111.157 li
341.122 99.6655 li
329.63 99.6655 li
329.63 111.157 li
cp
clp
2 lw
337.474 105.408 mo
337.474 106.567 336.532 107.507 335.373 107.507 cv
334.214 107.507 333.272 106.567 333.272 105.408 cv
333.272 104.249 334.214 103.308 335.373 103.308 cv
336.532 103.308 337.474 104.249 337.474 105.408 cv
0 0 0 rgb
@
grestore
gsave
341.005 108.765 mo
352.497 108.765 li
352.497 97.2734 li
341.005 97.2734 li
341.005 108.765 li
cp
clp
2 lw
348.896 103.056 mo
348.896 104.215 347.956 105.156 346.797 105.156 cv
345.638 105.156 344.696 104.215 344.696 103.056 cv
344.696 101.896 345.638 100.956 346.797 100.956 cv
347.956 100.956 348.896 101.896 348.896 103.056 cv
0 0 0 rgb
@
grestore
gsave
352.205 106.374 mo
363.697 106.374 li
363.697 94.8818 li
352.205 94.8818 li
352.205 106.374 li
cp
clp
2 lw
359.984 100.536 mo
359.984 101.695 359.044 102.636 357.885 102.636 cv
356.726 102.636 355.784 101.695 355.784 100.536 cv
355.784 99.3765 356.726 98.4355 357.885 98.4355 cv
359.044 98.4355 359.984 99.3765 359.984 100.536 cv
0 0 0 rgb
@
grestore
gsave
363.114 104.041 mo
374.605 104.041 li
374.605 92.5483 li
363.114 92.5483 li
363.114 104.041 li
cp
clp
2 lw
370.905 98.1836 mo
370.905 99.3428 369.964 100.284 368.806 100.284 cv
367.646 100.284 366.705 99.3428 366.705 98.1836 cv
366.705 97.0244 367.646 96.0835 368.806 96.0835 cv
369.964 96.0835 370.905 97.0244 370.905 98.1836 cv
0 0 0 rgb
@
grestore
gsave
373.73 101.648 mo
385.222 101.648 li
385.222 90.1567 li
373.73 90.1567 li
373.73 101.648 li
cp
clp
2 lw
381.489 95.8315 mo
381.489 96.9907 380.548 97.9316 379.39 97.9316 cv
378.229 97.9316 377.289 96.9907 377.289 95.8315 cv
377.289 94.6724 378.229 93.7319 379.39 93.7319 cv
380.548 93.7319 381.489 94.6724 381.489 95.8315 cv
0 0 0 rgb
@
grestore
gsave
383.997 99.2568 mo
395.489 99.2568 li
395.489 87.7651 li
383.997 87.7651 li
383.997 99.2568 li
cp
clp
2 lw
391.737 93.4795 mo
391.737 94.6387 390.796 95.5796 389.637 95.5796 cv
388.478 95.5796 387.536 94.6387 387.536 93.4795 cv
387.536 92.3203 388.478 91.3794 389.637 91.3794 cv
390.796 91.3794 391.737 92.3203 391.737 93.4795 cv
0 0 0 rgb
@
grestore
gsave
393.914 96.8652 mo
405.405 96.8652 li
405.405 85.3735 li
393.914 85.3735 li
393.914 96.8652 li
cp
clp
2 lw
401.649 91.1274 mo
401.649 92.2866 400.708 93.2275 399.549 93.2275 cv
398.39 93.2275 397.448 92.2866 397.448 91.1274 cv
397.448 89.9688 398.39 89.0278 399.549 89.0278 cv
400.708 89.0278 401.649 89.9688 401.649 91.1274 cv
0 0 0 rgb
@
grestore
gsave
403.423 94.4736 mo
414.914 94.4736 li
414.914 82.9819 li
403.423 82.9819 li
403.423 94.4736 li
cp
clp
2 lw
411.225 88.7759 mo
411.225 89.9346 410.284 90.8755 409.124 90.8755 cv
407.966 90.8755 407.024 89.9346 407.024 88.7759 cv
407.024 87.6162 407.966 86.6758 409.124 86.6758 cv
410.284 86.6758 411.225 87.6162 411.225 88.7759 cv
0 0 0 rgb
@
grestore
gsave
412.464 92.082 mo
423.955 92.082 li
423.955 80.5903 li
412.464 80.5903 li
412.464 92.082 li
cp
clp
2 lw
420.297 86.2559 mo
420.297 87.4146 419.356 88.3555 418.196 88.3555 cv
417.038 88.3555 416.097 87.4146 416.097 86.2559 cv
416.097 85.0962 417.038 84.1558 418.196 84.1558 cv
419.356 84.1558 420.297 85.0962 420.297 86.2559 cv
0 0 0 rgb
@
grestore
gsave
421.039 89.7485 mo
432.53 89.7485 li
432.53 78.2568 li
421.039 78.2568 li
421.039 89.7485 li
cp
clp
2 lw
428.864 83.9038 mo
428.864 85.063 427.925 86.0039 426.765 86.0039 cv
425.605 86.0039 424.665 85.063 424.665 83.9038 cv
424.665 82.7441 425.605 81.8037 426.765 81.8037 cv
427.925 81.8037 428.864 82.7441 428.864 83.9038 cv
0 0 0 rgb
@
grestore
gsave
429.147 87.3569 mo
440.64 87.3569 li
440.64 75.8652 li
429.147 75.8652 li
429.147 87.3569 li
cp
clp
2 lw
436.929 81.5513 mo
436.929 82.7109 435.987 83.6514 434.829 83.6514 cv
433.67 83.6514 432.729 82.7109 432.729 81.5513 cv
432.729 80.3926 433.67 79.4517 434.829 79.4517 cv
435.987 79.4517 436.929 80.3926 436.929 81.5513 cv
0 0 0 rgb
@
grestore
gsave
436.673 85.0234 mo
448.164 85.0234 li
448.164 73.5317 li
436.673 73.5317 li
436.673 85.0234 li
cp
clp
2 lw
444.489 79.1997 mo
444.489 80.3589 443.548 81.2998 442.39 81.2998 cv
441.229 81.2998 440.289 80.3589 440.289 79.1997 cv
440.289 78.0405 441.229 77.0996 442.39 77.0996 cv
443.548 77.0996 444.489 78.0405 444.489 79.1997 cv
0 0 0 rgb
@
grestore
gsave
443.673 82.6904 mo
455.164 82.6904 li
455.164 71.1982 li
443.673 71.1982 li
443.673 82.6904 li
cp
clp
2 lw
451.545 76.8477 mo
451.545 78.0068 450.604 78.9478 449.445 78.9478 cv
448.286 78.9478 447.345 78.0068 447.345 76.8477 cv
447.345 75.6885 448.286 74.7476 449.445 74.7476 cv
450.604 74.7476 451.545 75.6885 451.545 76.8477 cv
0 0 0 rgb
@
grestore
gsave
450.147 80.4155 mo
461.64 80.4155 li
461.64 68.9233 li
450.147 68.9233 li
450.147 80.4155 li
cp
clp
2 lw
457.929 74.6636 mo
457.929 75.8228 456.987 76.7637 455.829 76.7637 cv
454.67 76.7637 453.729 75.8228 453.729 74.6636 cv
453.729 73.5044 454.67 72.5635 455.829 72.5635 cv
456.987 72.5635 457.929 73.5044 457.929 74.6636 cv
0 0 0 rgb
@
grestore
gsave
455.98 78.1401 mo
467.472 78.1401 li
467.472 66.6484 li
455.98 66.6484 li
455.98 78.1401 li
cp
clp
2 lw
463.809 72.3115 mo
463.809 73.4707 462.868 74.4116 461.709 74.4116 cv
460.55 74.4116 459.608 73.4707 459.608 72.3115 cv
459.608 71.1523 460.55 70.2119 461.709 70.2119 cv
462.868 70.2119 463.809 71.1523 463.809 72.3115 cv
0 0 0 rgb
@
grestore
gsave
461.23 75.8652 mo
472.722 75.8652 li
472.722 64.3735 li
461.23 64.3735 li
461.23 75.8652 li
cp
clp
2 lw
469.017 70.1274 mo
469.017 71.2866 468.075 72.2275 466.917 72.2275 cv
465.758 72.2275 464.817 71.2866 464.817 70.1274 cv
464.817 68.9688 465.758 68.0278 466.917 68.0278 cv
468.075 68.0278 469.017 68.9688 469.017 70.1274 cv
0 0 0 rgb
@
grestore
gsave
465.955 73.707 mo
477.447 73.707 li
477.447 62.2153 li
465.955 62.2153 li
465.955 73.707 li
cp
clp
2 lw
473.721 67.9434 mo
473.721 69.103 472.78 70.0435 471.621 70.0435 cv
470.462 70.0435 469.521 69.103 469.521 67.9434 cv
469.521 66.7847 470.462 65.8438 471.621 65.8438 cv
472.78 65.8438 473.721 66.7847 473.721 67.9434 cv
0 0 0 rgb
@
grestore
gsave
470.039 71.4902 mo
481.53 71.4902 li
481.53 59.9985 li
470.039 59.9985 li
470.039 71.4902 li
cp
clp
2 lw
477.921 65.7598 mo
477.921 66.9189 476.98 67.8599 475.821 67.8599 cv
474.661 67.8599 473.721 66.9189 473.721 65.7598 cv
473.721 64.6006 474.661 63.6597 475.821 63.6597 cv
476.98 63.6597 477.921 64.6006 477.921 65.7598 cv
0 0 0 rgb
@
grestore
gsave
473.597 69.332 mo
485.089 69.332 li
485.089 57.8403 li
473.597 57.8403 li
473.597 69.332 li
cp
clp
2 lw
481.448 63.5757 mo
481.448 64.7349 480.509 65.6758 479.349 65.6758 cv
478.189 65.6758 477.249 64.7349 477.249 63.5757 cv
477.249 62.4165 478.189 61.4756 479.349 61.4756 cv
480.509 61.4756 481.448 62.4165 481.448 63.5757 cv
0 0 0 rgb
@
grestore
gsave
476.572 67.2319 mo
488.063 67.2319 li
488.063 55.7402 li
476.572 55.7402 li
476.572 67.2319 li
cp
clp
2 lw
484.39 61.3916 mo
484.39 62.5508 483.448 63.4917 482.289 63.4917 cv
481.13 63.4917 480.188 62.5508 480.188 61.3916 cv
480.188 60.2324 481.13 59.2915 482.289 59.2915 cv
483.448 59.2915 484.39 60.2324 484.39 61.3916 cv
0 0 0 rgb
@
grestore
gsave
479.022 65.1318 mo
490.515 65.1318 li
490.515 53.6401 li
479.022 53.6401 li
479.022 65.1318 li
cp
clp
2 lw
486.825 59.3755 mo
486.825 60.5347 485.884 61.4756 484.725 61.4756 cv
483.565 61.4756 482.624 60.5347 482.624 59.3755 cv
482.624 58.2163 483.565 57.2759 484.725 57.2759 cv
485.884 57.2759 486.825 58.2163 486.825 59.3755 cv
0 0 0 rgb
@
grestore
gsave
480.89 63.0903 mo
492.38 63.0903 li
492.38 51.5986 li
480.89 51.5986 li
480.89 63.0903 li
cp
clp
2 lw
488.673 57.3599 mo
488.673 58.519 487.731 59.46 486.573 59.46 cv
485.413 59.46 484.474 58.519 484.474 57.3599 cv
484.474 56.2002 485.413 55.2598 486.573 55.2598 cv
487.731 55.2598 488.673 56.2002 488.673 57.3599 cv
0 0 0 rgb
@
grestore
gsave
482.289 61.1069 mo
493.78 61.1069 li
493.78 49.6152 li
482.289 49.6152 li
482.289 61.1069 li
cp
clp
2 lw
490.185 55.3438 mo
490.185 56.5029 489.244 57.4434 488.085 57.4434 cv
486.926 57.4434 485.984 56.5029 485.984 55.3438 cv
485.984 54.1846 486.926 53.2437 488.085 53.2437 cv
489.244 53.2437 490.185 54.1846 490.185 55.3438 cv
0 0 0 rgb
@
grestore
gsave
483.222 59.1235 mo
494.714 59.1235 li
494.714 47.6318 li
483.222 47.6318 li
483.222 59.1235 li
cp
clp
2 lw
491.024 53.3276 mo
491.024 54.4868 490.084 55.4277 488.925 55.4277 cv
487.767 55.4277 486.825 54.4868 486.825 53.3276 cv
486.825 52.1685 487.767 51.2275 488.925 51.2275 cv
490.084 51.2275 491.024 52.1685 491.024 53.3276 cv
0 0 0 rgb
@
grestore
gsave
483.63 57.1982 mo
495.122 57.1982 li
495.122 45.707 li
483.63 45.707 li
483.63 57.1982 li
cp
clp
2 lw
491.529 51.4795 mo
491.529 52.6387 490.588 53.5796 489.429 53.5796 cv
488.271 53.5796 487.329 52.6387 487.329 51.4795 cv
487.329 50.3203 488.271 49.3794 489.429 49.3794 cv
490.588 49.3794 491.529 50.3203 491.529 51.4795 cv
0 0 0 rgb
@
grestore
gsave
483.572 55.332 mo
495.063 55.332 li
495.063 43.8403 li
483.572 43.8403 li
483.572 55.332 li
cp
clp
2 lw
491.36 49.6318 mo
491.36 50.791 490.421 51.7319 489.261 51.7319 cv
488.102 51.7319 487.161 50.791 487.161 49.6318 cv
487.161 48.4722 488.102 47.5317 489.261 47.5317 cv
490.421 47.5317 491.36 48.4722 491.36 49.6318 cv
0 0 0 rgb
@
grestore
gsave
483.164 53.4653 mo
494.655 53.4653 li
494.655 41.9736 li
483.164 41.9736 li
483.164 53.4653 li
cp
clp
2 lw
491.024 47.6157 mo
491.024 48.7749 490.084 49.7153 488.925 49.7153 cv
487.767 49.7153 486.825 48.7749 486.825 47.6157 cv
486.825 46.4565 487.767 45.5156 488.925 45.5156 cv
490.084 45.5156 491.024 46.4565 491.024 47.6157 cv
0 0 0 rgb
@
grestore
gsave
482.289 51.6567 mo
493.78 51.6567 li
493.78 40.1655 li
482.289 40.1655 li
482.289 51.6567 li
cp
clp
2 lw
490.185 45.9355 mo
490.185 47.0947 489.244 48.0356 488.085 48.0356 cv
486.926 48.0356 485.984 47.0947 485.984 45.9355 cv
485.984 44.7764 486.926 43.8354 488.085 43.8354 cv
489.244 43.8354 490.185 44.7764 490.185 45.9355 cv
0 0 0 rgb
@
grestore
gsave
481.005 49.8486 mo
492.497 49.8486 li
492.497 38.3569 li
481.005 38.3569 li
481.005 49.8486 li
cp
clp
2 lw
488.841 44.0874 mo
488.841 45.2471 487.899 46.1875 486.741 46.1875 cv
485.582 46.1875 484.641 45.2471 484.641 44.0874 cv
484.641 42.9282 485.582 41.9873 486.741 41.9873 cv
487.899 41.9873 488.841 42.9282 488.841 44.0874 cv
0 0 0 rgb
@
grestore
gsave
479.372 48.0986 mo
490.864 48.0986 li
490.864 36.6069 li
479.372 36.6069 li
479.372 48.0986 li
cp
clp
2 lw
487.161 42.2397 mo
487.161 43.3989 486.22 44.3398 485.062 44.3398 cv
483.901 44.3398 482.961 43.3989 482.961 42.2397 cv
482.961 41.0806 483.901 40.1396 485.062 40.1396 cv
486.22 40.1396 487.161 41.0806 487.161 42.2397 cv
0 0 0 rgb
@
grestore
gsave
477.39 46.4067 mo
488.88 46.4067 li
488.88 34.9155 li
477.39 34.9155 li
477.39 46.4067 li
cp
clp
2 lw
485.146 40.5596 mo
485.146 41.7188 484.204 42.6597 483.045 42.6597 cv
481.886 42.6597 480.945 41.7188 480.945 40.5596 cv
480.945 39.4004 481.886 38.46 483.045 38.46 cv
484.204 38.46 485.146 39.4004 485.146 40.5596 cv
0 0 0 rgb
@
grestore
gsave
475.114 44.7153 mo
486.605 44.7153 li
486.605 33.2236 li
475.114 33.2236 li
475.114 44.7153 li
cp
clp
2 lw
482.961 38.8794 mo
482.961 40.0391 482.021 40.9795 480.86 40.9795 cv
479.702 40.9795 478.761 40.0391 478.761 38.8794 cv
478.761 37.7207 479.702 36.7793 480.86 36.7793 cv
482.021 36.7793 482.961 37.7207 482.961 38.8794 cv
0 0 0 rgb
@
grestore
gsave
472.489 43.0234 mo
483.98 43.0234 li
483.98 31.5317 li
472.489 31.5317 li
472.489 43.0234 li
cp
clp
2 lw
480.272 37.1997 mo
480.272 38.3584 479.332 39.2998 478.173 39.2998 cv
477.014 39.2998 476.073 38.3584 476.073 37.1997 cv
476.073 36.0405 477.014 35.0996 478.173 35.0996 cv
479.332 35.0996 480.272 36.0405 480.272 37.1997 cv
0 0 0 rgb
@
grestore
gsave
469.572 41.4482 mo
481.063 41.4482 li
481.063 29.957 li
469.572 29.957 li
469.572 41.4482 li
cp
clp
2 lw
477.417 35.6875 mo
477.417 36.8467 476.476 37.7876 475.317 37.7876 cv
474.157 37.7876 473.218 36.8467 473.218 35.6875 cv
473.218 34.5283 474.157 33.5874 475.317 33.5874 cv
476.476 33.5874 477.417 34.5283 477.417 35.6875 cv
0 0 0 rgb
@
grestore
gsave
466.364 39.8154 mo
477.855 39.8154 li
477.855 28.3232 li
466.364 28.3232 li
466.364 39.8154 li
cp
clp
2 lw
474.225 34.0073 mo
474.225 35.167 473.284 36.1074 472.124 36.1074 cv
470.966 36.1074 470.024 35.167 470.024 34.0073 cv
470.024 32.8486 470.966 31.9077 472.124 31.9077 cv
473.284 31.9077 474.225 32.8486 474.225 34.0073 cv
0 0 0 rgb
@
grestore
gsave
462.923 38.2402 mo
474.414 38.2402 li
474.414 26.7485 li
462.923 26.7485 li
462.923 38.2402 li
cp
clp
2 lw
470.696 32.4956 mo
470.696 33.6548 469.756 34.5952 468.597 34.5952 cv
467.438 34.5952 466.497 33.6548 466.497 32.4956 cv
466.497 31.3364 467.438 30.3955 468.597 30.3955 cv
469.756 30.3955 470.696 31.3364 470.696 32.4956 cv
0 0 0 rgb
@
grestore
gsave
459.247 36.7236 mo
470.739 36.7236 li
470.739 25.2319 li
459.247 25.2319 li
459.247 36.7236 li
cp
clp
2 lw
467.001 30.9839 mo
467.001 32.1426 466.06 33.0835 464.901 33.0835 cv
463.741 33.0835 462.802 32.1426 462.802 30.9839 cv
462.802 29.8242 463.741 28.8838 464.901 28.8838 cv
466.06 28.8838 467.001 29.8242 467.001 30.9839 cv
0 0 0 rgb
@
grestore
gsave
455.28 35.207 mo
466.772 35.207 li
466.772 23.7153 li
455.28 23.7153 li
455.28 35.207 li
cp
clp
2 lw
463.137 29.4717 mo
463.137 30.6309 462.196 31.5718 461.036 31.5718 cv
459.878 31.5718 458.937 30.6309 458.937 29.4717 cv
458.937 28.3125 459.878 27.3716 461.036 27.3716 cv
462.196 27.3716 463.137 28.3125 463.137 29.4717 cv
0 0 0 rgb
@
grestore
gsave
451.14 33.7485 mo
462.63 33.7485 li
462.63 22.2568 li
451.14 22.2568 li
451.14 33.7485 li
cp
clp
2 lw
458.937 27.96 mo
458.937 29.1187 457.996 30.0596 456.837 30.0596 cv
455.677 30.0596 454.737 29.1187 454.737 27.96 cv
454.737 26.8003 455.677 25.8599 456.837 25.8599 cv
457.996 25.8599 458.937 26.8003 458.937 27.96 cv
0 0 0 rgb
@
grestore
gsave
446.822 32.2905 mo
458.313 32.2905 li
458.313 20.7983 li
446.822 20.7983 li
446.822 32.2905 li
cp
clp
2 lw
454.569 26.4478 mo
454.569 27.6069 453.628 28.5479 452.469 28.5479 cv
451.31 28.5479 450.368 27.6069 450.368 26.4478 cv
450.368 25.2881 451.31 24.3477 452.469 24.3477 cv
453.628 24.3477 454.569 25.2881 454.569 26.4478 cv
0 0 0 rgb
@
grestore
gsave
442.272 30.832 mo
453.765 30.832 li
453.765 19.3403 li
442.272 19.3403 li
442.272 30.832 li
cp
clp
2 lw
450.033 25.1035 mo
450.033 26.2627 449.093 27.2036 447.933 27.2036 cv
446.773 27.2036 445.833 26.2627 445.833 25.1035 cv
445.833 23.9443 446.773 23.0039 447.933 23.0039 cv
449.093 23.0039 450.033 23.9443 450.033 25.1035 cv
0 0 0 rgb
@
grestore
gsave
437.548 29.4321 mo
449.039 29.4321 li
449.039 17.9404 li
437.548 17.9404 li
437.548 29.4321 li
cp
clp
2 lw
445.329 23.5918 mo
445.329 24.751 444.388 25.6914 443.229 25.6914 cv
442.069 25.6914 441.13 24.751 441.13 23.5918 cv
441.13 22.4321 442.069 21.4917 443.229 21.4917 cv
444.388 21.4917 445.329 22.4321 445.329 23.5918 cv
0 0 0 rgb
@
grestore
gsave
432.647 28.0903 mo
444.14 28.0903 li
444.14 16.5986 li
432.647 16.5986 li
432.647 28.0903 li
cp
clp
2 lw
440.457 22.2476 mo
440.457 23.4067 439.517 24.3477 438.357 24.3477 cv
437.198 24.3477 436.257 23.4067 436.257 22.2476 cv
436.257 21.0884 437.198 20.1475 438.357 20.1475 cv
439.517 20.1475 440.457 21.0884 440.457 22.2476 cv
0 0 0 rgb
@
grestore
gsave
427.63 26.6904 mo
439.122 26.6904 li
439.122 15.1982 li
427.63 15.1982 li
427.63 26.6904 li
cp
clp
2 lw
435.417 20.9038 mo
435.417 22.063 434.476 23.0039 433.317 23.0039 cv
432.157 23.0039 431.218 22.063 431.218 20.9038 cv
431.218 19.7441 432.157 18.8037 433.317 18.8037 cv
434.476 18.8037 435.417 19.7441 435.417 20.9038 cv
0 0 0 rgb
@
grestore
gsave
55.522 164.007 mo
67.0142 164.007 li
67.0142 152.515 li
55.522 152.515 li
55.522 164.007 li
cp
clp
2 lw
62.6973 156.773 mo
59.7808 159.69 li
59.7808 156.773 mo
62.6973 159.69 li
1 0 0 rgb
@
grestore
gsave
65.7305 161.849 mo
77.2222 161.849 li
77.2222 150.357 li
65.7305 150.357 li
65.7305 161.849 li
cp
clp
2 lw
72.9058 154.615 mo
69.9893 157.532 li
69.9893 154.615 mo
72.9058 157.532 li
1 0 0 rgb
@
grestore
gsave
76.0557 159.69 mo
87.5474 159.69 li
87.5474 148.198 li
76.0557 148.198 li
76.0557 159.69 li
cp
clp
2 lw
83.2305 152.457 mo
80.314 155.374 li
80.314 152.457 mo
83.2305 155.374 li
1 0 0 rgb
@
grestore
gsave
86.5557 157.591 mo
98.0474 157.591 li
98.0474 146.099 li
86.5557 146.099 li
86.5557 157.591 li
cp
clp
2 lw
93.7305 150.357 mo
90.814 153.273 li
90.814 150.357 mo
93.7305 153.273 li
1 0 0 rgb
@
grestore
gsave
97.2305 155.433 mo
108.722 155.433 li
108.722 143.94 li
97.2305 143.94 li
97.2305 155.433 li
cp
clp
2 lw
104.406 148.198 mo
101.489 151.115 li
101.489 148.198 mo
104.406 151.115 li
1 0 0 rgb
@
grestore
gsave
108.022 153.273 mo
119.514 153.273 li
119.514 141.782 li
108.022 141.782 li
108.022 153.273 li
cp
clp
2 lw
115.197 146.04 mo
112.281 148.957 li
112.281 146.04 mo
115.197 148.957 li
1 0 0 rgb
@
grestore
gsave
118.931 151.115 mo
130.422 151.115 li
130.422 139.624 li
118.931 139.624 li
118.931 151.115 li
cp
clp
2 lw
126.105 143.882 mo
123.189 146.798 li
123.189 143.882 mo
126.105 146.798 li
1 0 0 rgb
@
grestore
gsave
130.014 149.015 mo
141.506 149.015 li
141.506 137.523 li
130.014 137.523 li
130.014 149.015 li
cp
clp
2 lw
137.189 141.782 mo
134.272 144.698 li
134.272 141.782 mo
137.189 144.698 li
1 0 0 rgb
@
grestore
gsave
141.214 146.857 mo
152.706 146.857 li
152.706 135.365 li
141.214 135.365 li
141.214 146.857 li
cp
clp
2 lw
148.389 139.624 mo
145.472 142.54 li
145.472 139.624 mo
148.389 142.54 li
1 0 0 rgb
@
grestore
gsave
152.531 144.698 mo
164.022 144.698 li
164.022 133.207 li
152.531 133.207 li
152.531 144.698 li
cp
clp
2 lw
159.706 137.466 mo
156.789 140.382 li
156.789 137.466 mo
159.706 140.382 li
1 0 0 rgb
@
grestore
gsave
163.964 142.54 mo
175.456 142.54 li
175.456 131.048 li
163.964 131.048 li
163.964 142.54 li
cp
clp
2 lw
171.139 135.308 mo
168.222 138.224 li
168.222 135.308 mo
171.139 138.224 li
1 0 0 rgb
@
grestore
gsave
175.514 140.382 mo
187.006 140.382 li
187.006 128.89 li
175.514 128.89 li
175.514 140.382 li
cp
clp
2 lw
182.689 133.148 mo
179.772 136.065 li
179.772 133.148 mo
182.689 136.065 li
1 0 0 rgb
@
grestore
gsave
187.181 138.224 mo
198.672 138.224 li
198.672 126.732 li
187.181 126.732 li
187.181 138.224 li
cp
clp
2 lw
194.355 130.99 mo
191.439 133.907 li
191.439 130.99 mo
194.355 133.907 li
1 0 0 rgb
@
grestore
gsave
198.906 136.007 mo
210.397 136.007 li
210.397 124.515 li
198.906 124.515 li
198.906 136.007 li
cp
clp
2 lw
206.081 128.773 mo
203.164 131.69 li
203.164 128.773 mo
206.081 131.69 li
1 0 0 rgb
@
grestore
gsave
210.747 133.849 mo
222.239 133.849 li
222.239 122.357 li
210.747 122.357 li
210.747 133.849 li
cp
clp
2 lw
217.922 126.615 mo
215.006 129.532 li
215.006 126.615 mo
217.922 129.532 li
1 0 0 rgb
@
grestore
gsave
222.647 131.632 mo
234.139 131.632 li
234.139 120.14 li
222.647 120.14 li
222.647 131.632 li
cp
clp
2 lw
229.822 124.398 mo
226.906 127.315 li
226.906 124.398 mo
229.822 127.315 li
1 0 0 rgb
@
grestore
gsave
234.605 129.415 mo
246.097 129.415 li
246.097 117.923 li
234.605 117.923 li
234.605 129.415 li
cp
clp
2 lw
241.781 122.183 mo
238.864 125.099 li
238.864 122.183 mo
241.781 125.099 li
1 0 0 rgb
@
grestore
gsave
246.564 127.14 mo
258.056 127.14 li
258.056 115.648 li
246.564 115.648 li
246.564 127.14 li
cp
clp
2 lw
253.739 119.907 mo
250.822 122.823 li
250.822 119.907 mo
253.739 122.823 li
1 0 0 rgb
@
grestore
gsave
258.581 124.865 mo
270.072 124.865 li
270.072 113.374 li
258.581 113.374 li
258.581 124.865 li
cp
clp
2 lw
265.756 117.632 mo
262.839 120.548 li
262.839 117.632 mo
265.756 120.548 li
1 0 0 rgb
@
grestore
gsave
270.539 122.591 mo
282.03 122.591 li
282.03 111.099 li
270.539 111.099 li
270.539 122.591 li
cp
clp
2 lw
277.714 115.357 mo
274.798 118.273 li
274.798 115.357 mo
277.714 118.273 li
1 0 0 rgb
@
grestore
gsave
282.497 120.315 mo
293.989 120.315 li
293.989 108.823 li
282.497 108.823 li
282.497 120.315 li
cp
clp
2 lw
289.673 113.082 mo
286.755 115.999 li
286.755 113.082 mo
289.673 115.999 li
1 0 0 rgb
@
grestore
gsave
294.397 117.982 mo
305.89 117.982 li
305.89 106.49 li
294.397 106.49 li
294.397 117.982 li
cp
clp
2 lw
301.572 110.749 mo
298.655 113.666 li
298.655 110.749 mo
301.572 113.666 li
1 0 0 rgb
@
grestore
gsave
306.239 115.591 mo
317.73 115.591 li
317.73 104.099 li
306.239 104.099 li
306.239 115.591 li
cp
clp
2 lw
313.414 108.357 mo
310.497 111.273 li
310.497 108.357 mo
313.414 111.273 li
1 0 0 rgb
@
grestore
gsave
317.73 112.907 mo
329.222 112.907 li
329.222 101.416 li
317.73 101.416 li
317.73 112.907 li
cp
clp
2 lw
324.905 105.673 mo
321.989 108.59 li
321.989 105.673 mo
324.905 108.59 li
1 0 0 rgb
@
grestore
gsave
321.173 110.34 mo
332.664 110.34 li
332.664 98.8486 li
321.173 98.8486 li
321.173 110.34 li
cp
clp
2 lw
328.347 103.107 mo
325.431 106.023 li
325.431 103.107 mo
328.347 106.023 li
1 0 0 rgb
@
grestore
gsave
321.464 108.648 mo
332.955 108.648 li
332.955 97.1567 li
321.464 97.1567 li
321.464 108.648 li
cp
clp
2 lw
328.64 101.416 mo
325.722 104.332 li
325.722 101.416 mo
328.64 104.332 li
1 0 0 rgb
@
grestore
gsave
321.289 107.073 mo
332.78 107.073 li
332.78 95.582 li
321.289 95.582 li
321.289 107.073 li
cp
clp
2 lw
328.464 99.8403 mo
325.548 102.757 li
325.548 99.8403 mo
328.464 102.757 li
1 0 0 rgb
@
grestore
gsave
320.938 105.44 mo
332.431 105.44 li
332.431 93.9482 li
320.938 93.9482 li
320.938 105.44 li
cp
clp
2 lw
328.114 98.207 mo
325.197 101.124 li
325.197 98.207 mo
328.114 101.124 li
1 0 0 rgb
@
grestore
gsave
320.414 103.865 mo
331.905 103.865 li
331.905 92.3735 li
320.414 92.3735 li
320.414 103.865 li
cp
clp
2 lw
327.589 96.6318 mo
324.673 99.5483 li
324.673 96.6318 mo
327.589 99.5483 li
1 0 0 rgb
@
grestore
gsave
319.714 102.232 mo
331.205 102.232 li
331.205 90.7402 li
319.714 90.7402 li
319.714 102.232 li
cp
clp
2 lw
326.89 94.9985 mo
323.972 97.9155 li
323.972 94.9985 mo
326.89 97.9155 li
1 0 0 rgb
@
grestore
gsave
318.955 100.657 mo
330.447 100.657 li
330.447 89.1655 li
318.955 89.1655 li
318.955 100.657 li
cp
clp
2 lw
326.13 93.4233 mo
323.214 96.3403 li
323.214 93.4233 mo
326.13 96.3403 li
1 0 0 rgb
@
grestore
gsave
318.022 99.082 mo
329.515 99.082 li
329.515 87.5903 li
318.022 87.5903 li
318.022 99.082 li
cp
clp
2 lw
325.197 91.8486 mo
322.28 94.7651 li
322.28 91.8486 mo
325.197 94.7651 li
1 0 0 rgb
@
grestore
gsave
316.972 97.5068 mo
328.464 97.5068 li
328.464 86.0151 li
316.972 86.0151 li
316.972 97.5068 li
cp
clp
2 lw
324.147 90.2734 mo
321.23 93.1904 li
321.23 90.2734 mo
324.147 93.1904 li
1 0 0 rgb
@
grestore
gsave
315.806 95.9321 mo
327.298 95.9321 li
327.298 84.4404 li
315.806 84.4404 li
315.806 95.9321 li
cp
clp
2 lw
322.98 88.6982 mo
320.063 91.6152 li
320.063 88.6982 mo
322.98 91.6152 li
1 0 0 rgb
@
grestore
gsave
314.522 94.3569 mo
326.015 94.3569 li
326.015 82.8652 li
314.522 82.8652 li
314.522 94.3569 li
cp
clp
2 lw
321.697 87.1235 mo
318.78 90.0405 li
318.78 87.1235 mo
321.697 90.0405 li
1 0 0 rgb
@
grestore
gsave
313.122 92.7817 mo
324.614 92.7817 li
324.614 81.2905 li
313.122 81.2905 li
313.122 92.7817 li
cp
clp
2 lw
320.298 85.5483 mo
317.38 88.4653 li
317.38 85.5483 mo
320.298 88.4653 li
1 0 0 rgb
@
grestore
gsave
311.605 91.207 mo
323.097 91.207 li
323.097 79.7153 li
311.605 79.7153 li
311.605 91.207 li
cp
clp
2 lw
318.78 83.9736 mo
315.864 86.8901 li
315.864 83.9736 mo
318.78 86.8901 li
1 0 0 rgb
@
grestore
gsave
310.03 89.6318 mo
321.522 89.6318 li
321.522 78.1401 li
310.03 78.1401 li
310.03 89.6318 li
cp
clp
2 lw
317.205 82.3984 mo
314.289 85.3154 li
314.289 82.3984 mo
317.205 85.3154 li
1 0 0 rgb
@
grestore
gsave
308.28 88.0571 mo
319.772 88.0571 li
319.772 76.5654 li
308.28 76.5654 li
308.28 88.0571 li
cp
clp
2 lw
315.455 80.8232 mo
312.539 83.7402 li
312.539 80.8232 mo
315.455 83.7402 li
1 0 0 rgb
@
grestore
gsave
306.414 86.4819 mo
317.905 86.4819 li
317.905 74.9902 li
306.414 74.9902 li
306.414 86.4819 li
cp
clp
2 lw
313.589 79.2485 mo
310.673 82.1655 li
310.673 79.2485 mo
313.589 82.1655 li
1 0 0 rgb
@
grestore
gsave
304.489 84.9653 mo
315.98 84.9653 li
315.98 73.4736 li
304.489 73.4736 li
304.489 84.9653 li
cp
clp
2 lw
311.664 77.7319 mo
308.747 80.6484 li
308.747 77.7319 mo
311.664 80.6484 li
1 0 0 rgb
@
grestore
gsave
302.39 83.3901 mo
313.88 83.3901 li
313.88 71.8984 li
302.39 71.8984 li
302.39 83.3901 li
cp
clp
2 lw
309.563 76.1567 mo
306.647 79.0732 li
306.647 76.1567 mo
309.563 79.0732 li
1 0 0 rgb
@
grestore
gsave
300.23 81.8154 mo
311.722 81.8154 li
311.722 70.3232 li
300.23 70.3232 li
300.23 81.8154 li
cp
clp
2 lw
307.405 74.582 mo
304.489 77.4985 li
304.489 74.582 mo
307.405 77.4985 li
1 0 0 rgb
@
grestore
gsave
297.955 80.2983 mo
309.447 80.2983 li
309.447 68.8071 li
297.955 68.8071 li
297.955 80.2983 li
cp
clp
2 lw
305.13 73.0654 mo
302.214 75.9819 li
302.214 73.0654 mo
305.13 75.9819 li
1 0 0 rgb
@
grestore
gsave
295.622 78.7236 mo
307.114 78.7236 li
307.114 67.2319 li
295.622 67.2319 li
295.622 78.7236 li
cp
clp
2 lw
302.798 71.4902 mo
299.88 74.4067 li
299.88 71.4902 mo
302.798 74.4067 li
1 0 0 rgb
@
grestore
gsave
293.114 77.207 mo
304.605 77.207 li
304.605 65.7153 li
293.114 65.7153 li
293.114 77.207 li
cp
clp
2 lw
300.289 69.9736 mo
297.372 72.8901 li
297.372 69.9736 mo
300.289 72.8901 li
1 0 0 rgb
@
grestore
gsave
290.548 75.6318 mo
302.039 75.6318 li
302.039 64.1401 li
290.548 64.1401 li
290.548 75.6318 li
cp
clp
2 lw
297.722 68.3984 mo
294.806 71.3154 li
294.806 68.3984 mo
297.722 71.3154 li
1 0 0 rgb
@
grestore
gsave
287.864 74.1152 mo
299.355 74.1152 li
299.355 62.6235 li
287.864 62.6235 li
287.864 74.1152 li
cp
clp
2 lw
295.039 66.8818 mo
292.122 69.7983 li
292.122 66.8818 mo
295.039 69.7983 li
1 0 0 rgb
@
grestore
gsave
285.122 72.5986 mo
296.614 72.5986 li
296.614 61.1069 li
285.122 61.1069 li
285.122 72.5986 li
cp
clp
2 lw
292.298 65.3652 mo
289.38 68.2817 li
289.38 65.3652 mo
292.298 68.2817 li
1 0 0 rgb
@
grestore
gsave
282.265 71.082 mo
293.755 71.082 li
293.755 59.5903 li
282.265 59.5903 li
282.265 71.082 li
cp
clp
2 lw
289.438 63.8486 mo
286.522 66.7651 li
286.522 63.8486 mo
289.438 66.7651 li
1 0 0 rgb
@
grestore
gsave
279.289 69.5654 mo
290.78 69.5654 li
290.78 58.0732 li
279.289 58.0732 li
279.289 69.5654 li
cp
clp
2 lw
286.464 62.332 mo
283.548 65.2485 li
283.548 62.332 mo
286.464 65.2485 li
1 0 0 rgb
@
grestore
gsave
276.255 68.0483 mo
287.747 68.0483 li
287.747 56.5571 li
276.255 56.5571 li
276.255 68.0483 li
cp
clp
2 lw
283.431 60.8154 mo
280.515 63.7319 li
280.515 60.8154 mo
283.431 63.7319 li
1 0 0 rgb
@
grestore
gsave
273.164 66.5317 mo
284.655 66.5317 li
284.655 55.0405 li
273.164 55.0405 li
273.164 66.5317 li
cp
clp
2 lw
280.339 59.2983 mo
277.423 62.2153 li
277.423 59.2983 mo
280.339 62.2153 li
1 0 0 rgb
@
grestore
gsave
269.955 65.0151 mo
281.447 65.0151 li
281.447 53.5234 li
269.955 53.5234 li
269.955 65.0151 li
cp
clp
2 lw
277.13 57.7817 mo
274.214 60.6982 li
274.214 57.7817 mo
277.13 60.6982 li
1 0 0 rgb
@
grestore
gsave
266.631 63.4985 mo
278.122 63.4985 li
278.122 52.0068 li
266.631 52.0068 li
266.631 63.4985 li
cp
clp
2 lw
273.806 56.2651 mo
270.89 59.1821 li
270.89 56.2651 mo
273.806 59.1821 li
1 0 0 rgb
@
grestore
gsave
263.247 62.0405 mo
274.739 62.0405 li
274.739 50.5483 li
263.247 50.5483 li
263.247 62.0405 li
cp
clp
2 lw
270.423 54.8071 mo
267.506 57.7236 li
267.506 54.8071 mo
270.423 57.7236 li
1 0 0 rgb
@
grestore
gsave
259.806 60.5234 mo
271.298 60.5234 li
271.298 49.0317 li
259.806 49.0317 li
259.806 60.5234 li
cp
clp
2 lw
266.98 53.2905 mo
264.064 56.207 li
264.064 53.2905 mo
266.98 56.207 li
1 0 0 rgb
@
grestore
gsave
256.247 59.0654 mo
267.739 59.0654 li
267.739 47.5732 li
256.247 47.5732 li
256.247 59.0654 li
cp
clp
2 lw
263.422 51.832 mo
260.506 54.7485 li
260.506 51.832 mo
263.422 54.7485 li
1 0 0 rgb
@
grestore
gsave
252.631 57.6069 mo
264.122 57.6069 li
264.122 46.1152 li
252.631 46.1152 li
252.631 57.6069 li
cp
clp
2 lw
259.806 50.3735 mo
256.889 53.2905 li
256.889 50.3735 mo
259.806 53.2905 li
1 0 0 rgb
@
grestore
gsave
248.956 56.0903 mo
260.447 56.0903 li
260.447 44.5986 li
248.956 44.5986 li
248.956 56.0903 li
cp
clp
2 lw
256.131 48.8569 mo
253.214 51.7734 li
253.214 48.8569 mo
256.131 51.7734 li
1 0 0 rgb
@
grestore
gsave
245.222 54.6318 mo
256.714 54.6318 li
256.714 43.1401 li
245.222 43.1401 li
245.222 54.6318 li
cp
clp
2 lw
252.397 47.3984 mo
249.48 50.3154 li
249.48 47.3984 mo
252.397 50.3154 li
1 0 0 rgb
@
grestore
gsave
241.372 53.1733 mo
252.864 53.1733 li
252.864 41.6821 li
241.372 41.6821 li
241.372 53.1733 li
cp
clp
2 lw
248.547 45.9404 mo
245.631 48.8569 li
245.631 45.9404 mo
248.547 48.8569 li
1 0 0 rgb
@
grestore
gsave
237.522 51.7153 mo
249.014 51.7153 li
249.014 40.2236 li
237.522 40.2236 li
237.522 51.7153 li
cp
clp
2 lw
244.697 44.4819 mo
241.781 47.3984 li
241.781 44.4819 mo
244.697 47.3984 li
1 0 0 rgb
@
grestore
gsave
233.556 50.3154 mo
245.047 50.3154 li
245.047 38.8232 li
233.556 38.8232 li
233.556 50.3154 li
cp
clp
2 lw
240.73 43.082 mo
237.814 45.9985 li
237.814 43.082 mo
240.73 45.9985 li
1 0 0 rgb
@
grestore
gsave
229.531 48.8569 mo
241.022 48.8569 li
241.022 37.3652 li
229.531 37.3652 li
229.531 48.8569 li
cp
clp
2 lw
236.706 41.6235 mo
233.789 44.5405 li
233.789 41.6235 mo
236.706 44.5405 li
1 0 0 rgb
@
grestore
gsave
225.506 47.457 mo
236.997 47.457 li
236.997 35.9653 li
225.506 35.9653 li
225.506 47.457 li
cp
clp
2 lw
232.681 40.2236 mo
229.764 43.1401 li
229.764 40.2236 mo
232.681 43.1401 li
1 0 0 rgb
@
grestore
gsave
221.364 45.9985 mo
232.855 45.9985 li
232.855 34.5068 li
221.364 34.5068 li
221.364 45.9985 li
cp
clp
2 lw
228.539 38.7651 mo
225.622 41.6821 li
225.622 38.7651 mo
228.539 41.6821 li
1 0 0 rgb
@
grestore
gsave
217.164 44.5986 mo
228.656 44.5986 li
228.656 33.1069 li
217.164 33.1069 li
217.164 44.5986 li
cp
clp
2 lw
224.339 37.3652 mo
221.422 40.2817 li
221.422 37.3652 mo
224.339 40.2817 li
1 0 0 rgb
@
grestore
gsave
212.964 43.1982 mo
224.456 43.1982 li
224.456 31.707 li
212.964 31.707 li
212.964 43.1982 li
cp
clp
2 lw
220.139 35.9653 mo
217.222 38.8818 li
217.222 35.9653 mo
220.139 38.8818 li
1 0 0 rgb
@
grestore
gsave
208.706 41.7983 mo
220.197 41.7983 li
220.197 30.3071 li
208.706 30.3071 li
208.706 41.7983 li
cp
clp
2 lw
215.881 34.5654 mo
212.964 37.4819 li
212.964 34.5654 mo
215.881 37.4819 li
1 0 0 rgb
@
grestore
gsave
204.389 40.3984 mo
215.881 40.3984 li
215.881 28.9067 li
204.389 28.9067 li
204.389 40.3984 li
cp
clp
2 lw
211.564 33.1655 mo
208.647 36.082 li
208.647 33.1655 mo
211.564 36.082 li
1 0 0 rgb
@
grestore
gsave
200.014 38.9985 mo
211.506 38.9985 li
211.506 27.5068 li
200.014 27.5068 li
200.014 38.9985 li
cp
clp
2 lw
207.189 31.7651 mo
204.272 34.6821 li
204.272 31.7651 mo
207.189 34.6821 li
1 0 0 rgb
@
grestore
gsave
195.581 37.5986 mo
207.072 37.5986 li
207.072 26.1069 li
195.581 26.1069 li
195.581 37.5986 li
cp
clp
2 lw
202.756 30.3652 mo
199.839 33.2817 li
199.839 30.3652 mo
202.756 33.2817 li
1 0 0 rgb
@
grestore
gsave
191.147 36.2568 mo
202.639 36.2568 li
202.639 24.7651 li
191.147 24.7651 li
191.147 36.2568 li
cp
clp
2 lw
198.322 29.0234 mo
195.406 31.9404 li
195.406 29.0234 mo
198.322 31.9404 li
1 0 0 rgb
@
grestore
gsave
186.656 34.9155 mo
198.147 34.9155 li
198.147 23.4233 li
186.656 23.4233 li
186.656 34.9155 li
cp
clp
2 lw
193.831 27.6821 mo
190.914 30.5986 li
190.914 27.6821 mo
193.831 30.5986 li
1 0 0 rgb
@
grestore
gsave
182.164 33.5732 mo
193.656 33.5732 li
193.656 22.082 li
182.164 22.082 li
182.164 33.5732 li
cp
clp
2 lw
189.339 26.3403 mo
186.422 29.2568 li
186.422 26.3403 mo
189.339 29.2568 li
1 0 0 rgb
@
grestore
gsave
177.614 32.1733 mo
189.105 32.1733 li
189.105 20.6821 li
177.614 20.6821 li
177.614 32.1733 li
cp
clp
2 lw
184.789 24.9404 mo
181.872 27.8569 li
181.872 24.9404 mo
184.789 27.8569 li
1 0 0 rgb
@
grestore
gsave
173.064 30.8901 mo
184.556 30.8901 li
184.556 19.3984 li
173.064 19.3984 li
173.064 30.8901 li
cp
clp
2 lw
180.239 23.6567 mo
177.322 26.5732 li
177.322 23.6567 mo
180.239 26.5732 li
1 0 0 rgb
@
grestore
gsave
168.456 29.5483 mo
179.947 29.5483 li
179.947 18.0571 li
168.456 18.0571 li
168.456 29.5483 li
cp
clp
2 lw
175.631 22.3154 mo
172.714 25.2319 li
172.714 22.3154 mo
175.631 25.2319 li
1 0 0 rgb
@
grestore
gsave
163.847 28.207 mo
175.339 28.207 li
175.339 16.7153 li
163.847 16.7153 li
163.847 28.207 li
cp
clp
2 lw
171.022 20.9736 mo
168.105 23.8901 li
168.105 20.9736 mo
171.022 23.8901 li
1 0 0 rgb
@
grestore
gsave
159.181 26.9233 mo
170.672 26.9233 li
170.672 15.4321 li
159.181 15.4321 li
159.181 26.9233 li
cp
clp
2 lw
166.355 19.6904 mo
163.439 22.6069 li
163.439 19.6904 mo
166.355 22.6069 li
1 0 0 rgb
@
grestore
gsave
55.522 164.065 mo
67.0142 164.065 li
67.0142 152.573 li
55.522 152.573 li
55.522 164.065 li
cp
clp
2 lw
62.6973 156.832 mo
59.7808 159.749 li
59.7808 156.832 mo
62.6973 159.749 li
1 0 0 rgb
@
grestore
gsave
65.7305 161.907 mo
77.2222 161.907 li
77.2222 150.415 li
65.7305 150.415 li
65.7305 161.907 li
cp
clp
2 lw
72.9058 154.673 mo
69.9893 157.591 li
69.9893 154.673 mo
72.9058 157.591 li
1 0 0 rgb
@
grestore
gsave
76.0557 159.749 mo
87.5474 159.749 li
87.5474 148.257 li
76.0557 148.257 li
76.0557 159.749 li
cp
clp
2 lw
83.2305 152.515 mo
80.314 155.433 li
80.314 152.515 mo
83.2305 155.433 li
1 0 0 rgb
@
grestore
gsave
86.5557 157.591 mo
98.0474 157.591 li
98.0474 146.099 li
86.5557 146.099 li
86.5557 157.591 li
cp
clp
2 lw
93.7305 150.357 mo
90.814 153.273 li
90.814 150.357 mo
93.7305 153.273 li
1 0 0 rgb
@
grestore
gsave
97.2305 155.433 mo
108.722 155.433 li
108.722 143.94 li
97.2305 143.94 li
97.2305 155.433 li
cp
clp
2 lw
104.406 148.198 mo
101.489 151.115 li
101.489 148.198 mo
104.406 151.115 li
1 0 0 rgb
@
grestore
gsave
108.022 153.332 mo
119.514 153.332 li
119.514 141.841 li
108.022 141.841 li
108.022 153.332 li
cp
clp
2 lw
115.197 146.099 mo
112.281 149.015 li
112.281 146.099 mo
115.197 149.015 li
1 0 0 rgb
@
grestore
gsave
118.931 151.173 mo
130.422 151.173 li
130.422 139.683 li
118.931 139.683 li
118.931 151.173 li
cp
clp
2 lw
126.105 143.94 mo
123.189 146.857 li
123.189 143.94 mo
126.105 146.857 li
1 0 0 rgb
@
grestore
gsave
130.014 149.015 mo
141.506 149.015 li
141.506 137.523 li
130.014 137.523 li
130.014 149.015 li
cp
clp
2 lw
137.189 141.782 mo
134.272 144.698 li
134.272 141.782 mo
137.189 144.698 li
1 0 0 rgb
@
grestore
gsave
141.214 146.915 mo
152.706 146.915 li
152.706 135.423 li
141.214 135.423 li
141.214 146.915 li
cp
clp
2 lw
148.389 139.683 mo
145.472 142.599 li
145.472 139.683 mo
148.389 142.599 li
1 0 0 rgb
@
grestore
gsave
152.531 144.757 mo
164.022 144.757 li
164.022 133.265 li
152.531 133.265 li
152.531 144.757 li
cp
clp
2 lw
159.706 137.523 mo
156.789 140.44 li
156.789 137.523 mo
159.706 140.44 li
1 0 0 rgb
@
grestore
gsave
163.964 142.599 mo
175.456 142.599 li
175.456 131.107 li
163.964 131.107 li
163.964 142.599 li
cp
clp
2 lw
171.139 135.365 mo
168.222 138.282 li
168.222 135.365 mo
171.139 138.282 li
1 0 0 rgb
@
grestore
gsave
175.514 140.44 mo
187.006 140.44 li
187.006 128.948 li
175.514 128.948 li
175.514 140.44 li
cp
clp
2 lw
182.689 133.207 mo
179.772 136.124 li
179.772 133.207 mo
182.689 136.124 li
1 0 0 rgb
@
grestore
gsave
187.181 138.224 mo
198.672 138.224 li
198.672 126.732 li
187.181 126.732 li
187.181 138.224 li
cp
clp
2 lw
194.355 130.99 mo
191.439 133.907 li
191.439 130.99 mo
194.355 133.907 li
1 0 0 rgb
@
grestore
gsave
198.906 136.065 mo
210.397 136.065 li
210.397 124.573 li
198.906 124.573 li
198.906 136.065 li
cp
clp
2 lw
206.081 128.832 mo
203.164 131.749 li
203.164 128.832 mo
206.081 131.749 li
1 0 0 rgb
@
grestore
gsave
210.747 133.907 mo
222.239 133.907 li
222.239 122.415 li
210.747 122.415 li
210.747 133.907 li
cp
clp
2 lw
217.922 126.673 mo
215.006 129.591 li
215.006 126.673 mo
217.922 129.591 li
1 0 0 rgb
@
grestore
gsave
222.647 131.69 mo
234.139 131.69 li
234.139 120.198 li
222.647 120.198 li
222.647 131.69 li
cp
clp
2 lw
229.822 124.457 mo
226.906 127.374 li
226.906 124.457 mo
229.822 127.374 li
1 0 0 rgb
@
grestore
gsave
234.605 129.474 mo
246.097 129.474 li
246.097 117.982 li
234.605 117.982 li
234.605 129.474 li
cp
clp
2 lw
241.781 122.24 mo
238.864 125.157 li
238.864 122.24 mo
241.781 125.157 li
1 0 0 rgb
@
grestore
gsave
246.564 127.257 mo
258.056 127.257 li
258.056 115.765 li
246.564 115.765 li
246.564 127.257 li
cp
clp
2 lw
253.739 120.023 mo
250.822 122.94 li
250.822 120.023 mo
253.739 122.94 li
1 0 0 rgb
@
grestore
gsave
258.581 124.982 mo
270.072 124.982 li
270.072 113.49 li
258.581 113.49 li
258.581 124.982 li
cp
clp
2 lw
265.756 117.749 mo
262.839 120.665 li
262.839 117.749 mo
265.756 120.665 li
1 0 0 rgb
@
grestore
gsave
270.539 122.707 mo
282.03 122.707 li
282.03 111.215 li
270.539 111.215 li
270.539 122.707 li
cp
clp
2 lw
277.714 115.474 mo
274.798 118.39 li
274.798 115.474 mo
277.714 118.39 li
1 0 0 rgb
@
grestore
gsave
282.497 120.49 mo
293.989 120.49 li
293.989 108.999 li
282.497 108.999 li
282.497 120.49 li
cp
clp
2 lw
289.673 113.257 mo
286.755 116.173 li
286.755 113.257 mo
289.673 116.173 li
1 0 0 rgb
@
grestore
gsave
294.397 118.216 mo
305.89 118.216 li
305.89 106.724 li
294.397 106.724 li
294.397 118.216 li
cp
clp
2 lw
301.572 110.982 mo
298.655 113.898 li
298.655 110.982 mo
301.572 113.898 li
1 0 0 rgb
@
grestore
gsave
306.239 115.999 mo
317.73 115.999 li
317.73 104.507 li
306.239 104.507 li
306.239 115.999 li
cp
clp
2 lw
313.414 108.765 mo
310.497 111.682 li
310.497 108.765 mo
313.414 111.682 li
1 0 0 rgb
@
grestore
gsave
317.73 114.132 mo
329.222 114.132 li
329.222 102.64 li
317.73 102.64 li
317.73 114.132 li
cp
clp
2 lw
324.905 106.898 mo
321.989 109.815 li
321.989 106.898 mo
324.905 109.815 li
1 0 0 rgb
@
grestore
gsave
321.173 115.182 mo
332.664 115.182 li
332.664 103.69 li
321.173 103.69 li
321.173 115.182 li
cp
clp
2 lw
328.347 107.948 mo
325.431 110.865 li
325.431 107.948 mo
328.347 110.865 li
1 0 0 rgb
@
grestore
gsave
321.464 116.698 mo
332.955 116.698 li
332.955 105.207 li
321.464 105.207 li
321.464 116.698 li
cp
clp
2 lw
328.64 109.465 mo
325.722 112.382 li
325.722 109.465 mo
328.64 112.382 li
1 0 0 rgb
@
grestore
gsave
321.289 118.216 mo
332.78 118.216 li
332.78 106.724 li
321.289 106.724 li
321.289 118.216 li
cp
clp
2 lw
328.464 110.982 mo
325.548 113.898 li
325.548 110.982 mo
328.464 113.898 li
1 0 0 rgb
@
grestore
gsave
320.938 119.79 mo
332.431 119.79 li
332.431 108.298 li
320.938 108.298 li
320.938 119.79 li
cp
clp
2 lw
328.114 112.557 mo
325.197 115.474 li
325.197 112.557 mo
328.114 115.474 li
1 0 0 rgb
@
grestore
gsave
320.414 121.365 mo
331.905 121.365 li
331.905 109.874 li
320.414 109.874 li
320.414 121.365 li
cp
clp
2 lw
327.589 114.132 mo
324.673 117.048 li
324.673 114.132 mo
327.589 117.048 li
1 0 0 rgb
@
grestore
gsave
319.714 122.94 mo
331.205 122.94 li
331.205 111.448 li
319.714 111.448 li
319.714 122.94 li
cp
clp
2 lw
326.89 115.707 mo
323.972 118.624 li
323.972 115.707 mo
326.89 118.624 li
1 0 0 rgb
@
grestore
gsave
318.955 124.515 mo
330.447 124.515 li
330.447 113.023 li
318.955 113.023 li
318.955 124.515 li
cp
clp
2 lw
326.13 117.282 mo
323.214 120.198 li
323.214 117.282 mo
326.13 120.198 li
1 0 0 rgb
@
grestore
gsave
318.022 126.091 mo
329.515 126.091 li
329.515 114.599 li
318.022 114.599 li
318.022 126.091 li
cp
clp
2 lw
325.197 118.857 mo
322.28 121.773 li
322.28 118.857 mo
325.197 121.773 li
1 0 0 rgb
@
grestore
gsave
316.972 127.665 mo
328.464 127.665 li
328.464 116.173 li
316.972 116.173 li
316.972 127.665 li
cp
clp
2 lw
324.147 120.433 mo
321.23 123.349 li
321.23 120.433 mo
324.147 123.349 li
1 0 0 rgb
@
grestore
gsave
315.806 129.24 mo
327.298 129.24 li
327.298 117.749 li
315.806 117.749 li
315.806 129.24 li
cp
clp
2 lw
322.98 122.007 mo
320.063 124.923 li
320.063 122.007 mo
322.98 124.923 li
1 0 0 rgb
@
grestore
gsave
314.522 130.815 mo
326.015 130.815 li
326.015 119.323 li
314.522 119.323 li
314.522 130.815 li
cp
clp
2 lw
321.697 123.582 mo
318.78 126.499 li
318.78 123.582 mo
321.697 126.499 li
1 0 0 rgb
@
grestore
gsave
313.122 132.39 mo
324.614 132.39 li
324.614 120.898 li
313.122 120.898 li
313.122 132.39 li
cp
clp
2 lw
320.298 125.157 mo
317.38 128.073 li
317.38 125.157 mo
320.298 128.073 li
1 0 0 rgb
@
grestore
gsave
311.605 133.966 mo
323.097 133.966 li
323.097 122.474 li
311.605 122.474 li
311.605 133.966 li
cp
clp
2 lw
318.78 126.732 mo
315.864 129.648 li
315.864 126.732 mo
318.78 129.648 li
1 0 0 rgb
@
grestore
gsave
310.03 135.482 mo
321.522 135.482 li
321.522 123.99 li
310.03 123.99 li
310.03 135.482 li
cp
clp
2 lw
317.205 128.249 mo
314.289 131.165 li
314.289 128.249 mo
317.205 131.165 li
1 0 0 rgb
@
grestore
gsave
308.28 137.058 mo
319.772 137.058 li
319.772 125.565 li
308.28 125.565 li
308.28 137.058 li
cp
clp
2 lw
315.455 129.823 mo
312.539 132.74 li
312.539 129.823 mo
315.455 132.74 li
1 0 0 rgb
@
grestore
gsave
306.414 138.632 mo
317.905 138.632 li
317.905 127.14 li
306.414 127.14 li
306.414 138.632 li
cp
clp
2 lw
313.589 131.398 mo
310.673 134.315 li
310.673 131.398 mo
313.589 134.315 li
1 0 0 rgb
@
grestore
gsave
304.489 140.207 mo
315.98 140.207 li
315.98 128.716 li
304.489 128.716 li
304.489 140.207 li
cp
clp
2 lw
311.664 132.974 mo
308.747 135.89 li
308.747 132.974 mo
311.664 135.89 li
1 0 0 rgb
@
grestore
gsave
302.39 141.724 mo
313.88 141.724 li
313.88 130.232 li
302.39 130.232 li
302.39 141.724 li
cp
clp
2 lw
309.563 134.49 mo
306.647 137.407 li
306.647 134.49 mo
309.563 137.407 li
1 0 0 rgb
@
grestore
gsave
300.23 143.298 mo
311.722 143.298 li
311.722 131.808 li
300.23 131.808 li
300.23 143.298 li
cp
clp
2 lw
307.405 136.065 mo
304.489 138.982 li
304.489 136.065 mo
307.405 138.982 li
1 0 0 rgb
@
grestore
gsave
297.955 144.815 mo
309.447 144.815 li
309.447 133.323 li
297.955 133.323 li
297.955 144.815 li
cp
clp
2 lw
305.13 137.582 mo
302.214 140.499 li
302.214 137.582 mo
305.13 140.499 li
1 0 0 rgb
@
grestore
gsave
295.622 146.39 mo
307.114 146.39 li
307.114 134.898 li
295.622 134.898 li
295.622 146.39 li
cp
clp
2 lw
302.798 139.157 mo
299.88 142.073 li
299.88 139.157 mo
302.798 142.073 li
1 0 0 rgb
@
grestore
gsave
293.114 147.907 mo
304.605 147.907 li
304.605 136.415 li
293.114 136.415 li
293.114 147.907 li
cp
clp
2 lw
300.289 140.673 mo
297.372 143.591 li
297.372 140.673 mo
300.289 143.591 li
1 0 0 rgb
@
grestore
gsave
290.548 149.482 mo
302.039 149.482 li
302.039 137.99 li
290.548 137.99 li
290.548 149.482 li
cp
clp
2 lw
297.722 142.249 mo
294.806 145.165 li
294.806 142.249 mo
297.722 145.165 li
1 0 0 rgb
@
grestore
gsave
287.864 150.999 mo
299.355 150.999 li
299.355 139.507 li
287.864 139.507 li
287.864 150.999 li
cp
clp
2 lw
295.039 143.765 mo
292.122 146.683 li
292.122 143.765 mo
295.039 146.683 li
1 0 0 rgb
@
grestore
gsave
285.122 152.515 mo
296.614 152.515 li
296.614 141.023 li
285.122 141.023 li
285.122 152.515 li
cp
clp
2 lw
292.298 145.282 mo
289.38 148.198 li
289.38 145.282 mo
292.298 148.198 li
1 0 0 rgb
@
grestore
gsave
282.265 154.032 mo
293.755 154.032 li
293.755 142.54 li
282.265 142.54 li
282.265 154.032 li
cp
clp
2 lw
289.438 146.798 mo
286.522 149.716 li
286.522 146.798 mo
289.438 149.716 li
1 0 0 rgb
@
grestore
gsave
279.289 155.548 mo
290.78 155.548 li
290.78 144.058 li
279.289 144.058 li
279.289 155.548 li
cp
clp
2 lw
286.464 148.315 mo
283.548 151.232 li
283.548 148.315 mo
286.464 151.232 li
1 0 0 rgb
@
grestore
gsave
276.255 157.065 mo
287.747 157.065 li
287.747 145.573 li
276.255 145.573 li
276.255 157.065 li
cp
clp
2 lw
283.431 149.832 mo
280.515 152.749 li
280.515 149.832 mo
283.431 152.749 li
1 0 0 rgb
@
grestore
gsave
273.164 158.582 mo
284.655 158.582 li
284.655 147.091 li
273.164 147.091 li
273.164 158.582 li
cp
clp
2 lw
280.339 151.349 mo
277.423 154.265 li
277.423 151.349 mo
280.339 154.265 li
1 0 0 rgb
@
grestore
gsave
269.955 160.099 mo
281.447 160.099 li
281.447 148.607 li
269.955 148.607 li
269.955 160.099 li
cp
clp
2 lw
277.13 152.865 mo
274.214 155.782 li
274.214 152.865 mo
277.13 155.782 li
1 0 0 rgb
@
grestore
gsave
266.631 161.558 mo
278.122 161.558 li
278.122 150.065 li
266.631 150.065 li
266.631 161.558 li
cp
clp
2 lw
273.806 154.323 mo
270.89 157.24 li
270.89 154.323 mo
273.806 157.24 li
1 0 0 rgb
@
grestore
gsave
263.247 163.073 mo
274.739 163.073 li
274.739 151.582 li
263.247 151.582 li
263.247 163.073 li
cp
clp
2 lw
270.423 155.841 mo
267.506 158.757 li
267.506 155.841 mo
270.423 158.757 li
1 0 0 rgb
@
grestore
gsave
259.806 164.532 mo
271.298 164.532 li
271.298 153.04 li
259.806 153.04 li
259.806 164.532 li
cp
clp
2 lw
266.98 157.298 mo
264.064 160.216 li
264.064 157.298 mo
266.98 160.216 li
1 0 0 rgb
@
grestore
gsave
256.247 166.048 mo
267.739 166.048 li
267.739 154.558 li
256.247 154.558 li
256.247 166.048 li
cp
clp
2 lw
263.422 158.815 mo
260.506 161.732 li
260.506 158.815 mo
263.422 161.732 li
1 0 0 rgb
@
grestore
gsave
252.631 167.507 mo
264.122 167.507 li
264.122 156.015 li
252.631 156.015 li
252.631 167.507 li
cp
clp
2 lw
259.806 160.273 mo
256.889 163.19 li
256.889 160.273 mo
259.806 163.19 li
1 0 0 rgb
@
grestore
gsave
248.956 168.966 mo
260.447 168.966 li
260.447 157.474 li
248.956 157.474 li
248.956 168.966 li
cp
clp
2 lw
256.131 161.732 mo
253.214 164.648 li
253.214 161.732 mo
256.131 164.648 li
1 0 0 rgb
@
grestore
gsave
245.222 170.423 mo
256.714 170.423 li
256.714 158.933 li
245.222 158.933 li
245.222 170.423 li
cp
clp
2 lw
252.397 163.19 mo
249.48 166.107 li
249.48 163.19 mo
252.397 166.107 li
1 0 0 rgb
@
grestore
gsave
241.372 171.882 mo
252.864 171.882 li
252.864 160.39 li
241.372 160.39 li
241.372 171.882 li
cp
clp
2 lw
248.547 164.648 mo
245.631 167.565 li
245.631 164.648 mo
248.547 167.565 li
1 0 0 rgb
@
grestore
gsave
237.522 173.341 mo
249.014 173.341 li
249.014 161.849 li
237.522 161.849 li
237.522 173.341 li
cp
clp
2 lw
244.697 166.107 mo
241.781 169.023 li
241.781 166.107 mo
244.697 169.023 li
1 0 0 rgb
@
grestore
gsave
233.556 174.798 mo
245.047 174.798 li
245.047 163.308 li
233.556 163.308 li
233.556 174.798 li
cp
clp
2 lw
240.73 167.565 mo
237.814 170.482 li
237.814 167.565 mo
240.73 170.482 li
1 0 0 rgb
@
grestore
gsave
229.531 176.257 mo
241.022 176.257 li
241.022 164.765 li
229.531 164.765 li
229.531 176.257 li
cp
clp
2 lw
236.706 169.023 mo
233.789 171.94 li
233.789 169.023 mo
236.706 171.94 li
1 0 0 rgb
@
grestore
gsave
225.506 177.657 mo
236.997 177.657 li
236.997 166.165 li
225.506 166.165 li
225.506 177.657 li
cp
clp
2 lw
232.681 170.423 mo
229.764 173.341 li
229.764 170.423 mo
232.681 173.341 li
1 0 0 rgb
@
grestore
gsave
221.364 179.115 mo
232.855 179.115 li
232.855 167.624 li
221.364 167.624 li
221.364 179.115 li
cp
clp
2 lw
228.539 171.882 mo
225.622 174.798 li
225.622 171.882 mo
228.539 174.798 li
1 0 0 rgb
@
grestore
gsave
217.164 180.515 mo
228.656 180.515 li
228.656 169.023 li
217.164 169.023 li
217.164 180.515 li
cp
clp
2 lw
224.339 173.282 mo
221.422 176.198 li
221.422 173.282 mo
224.339 176.198 li
1 0 0 rgb
@
grestore
gsave
212.964 181.915 mo
224.456 181.915 li
224.456 170.423 li
212.964 170.423 li
212.964 181.915 li
cp
clp
2 lw
220.139 174.683 mo
217.222 177.599 li
217.222 174.683 mo
220.139 177.599 li
1 0 0 rgb
@
grestore
gsave
208.706 183.315 mo
220.197 183.315 li
220.197 171.823 li
208.706 171.823 li
208.706 183.315 li
cp
clp
2 lw
215.881 176.082 mo
212.964 178.999 li
212.964 176.082 mo
215.881 178.999 li
1 0 0 rgb
@
grestore
gsave
204.389 184.716 mo
215.881 184.716 li
215.881 173.224 li
204.389 173.224 li
204.389 184.716 li
cp
clp
2 lw
211.564 177.482 mo
208.647 180.398 li
208.647 177.482 mo
211.564 180.398 li
1 0 0 rgb
@
grestore
gsave
200.014 186.115 mo
211.506 186.115 li
211.506 174.624 li
200.014 174.624 li
200.014 186.115 li
cp
clp
2 lw
207.189 178.882 mo
204.272 181.798 li
204.272 178.882 mo
207.189 181.798 li
1 0 0 rgb
@
grestore
gsave
195.581 187.457 mo
207.072 187.457 li
207.072 175.966 li
195.581 175.966 li
195.581 187.457 li
cp
clp
2 lw
202.756 180.224 mo
199.839 183.14 li
199.839 180.224 mo
202.756 183.14 li
1 0 0 rgb
@
grestore
gsave
191.147 188.857 mo
202.639 188.857 li
202.639 177.365 li
191.147 177.365 li
191.147 188.857 li
cp
clp
2 lw
198.322 181.624 mo
195.406 184.54 li
195.406 181.624 mo
198.322 184.54 li
1 0 0 rgb
@
grestore
gsave
186.656 190.198 mo
198.147 190.198 li
198.147 178.707 li
186.656 178.707 li
186.656 190.198 li
cp
clp
2 lw
193.831 182.966 mo
190.914 185.882 li
190.914 182.966 mo
193.831 185.882 li
1 0 0 rgb
@
grestore
gsave
182.164 191.54 mo
193.656 191.54 li
193.656 180.048 li
182.164 180.048 li
182.164 191.54 li
cp
clp
2 lw
189.339 184.308 mo
186.422 187.224 li
186.422 184.308 mo
189.339 187.224 li
1 0 0 rgb
@
grestore
gsave
177.614 192.882 mo
189.105 192.882 li
189.105 181.39 li
177.614 181.39 li
177.614 192.882 li
cp
clp
2 lw
184.789 185.648 mo
181.872 188.565 li
181.872 185.648 mo
184.789 188.565 li
1 0 0 rgb
@
grestore
gsave
173.064 194.224 mo
184.556 194.224 li
184.556 182.732 li
173.064 182.732 li
173.064 194.224 li
cp
clp
2 lw
180.239 186.99 mo
177.322 189.907 li
177.322 186.99 mo
180.239 189.907 li
1 0 0 rgb
@
grestore
gsave
168.456 195.565 mo
179.947 195.565 li
179.947 184.073 li
168.456 184.073 li
168.456 195.565 li
cp
clp
2 lw
175.631 188.332 mo
172.714 191.249 li
172.714 188.332 mo
175.631 191.249 li
1 0 0 rgb
@
grestore
gsave
163.847 196.849 mo
175.339 196.849 li
175.339 185.357 li
163.847 185.357 li
163.847 196.849 li
cp
clp
2 lw
171.022 189.615 mo
168.105 192.532 li
168.105 189.615 mo
171.022 192.532 li
1 0 0 rgb
@
grestore
gsave
159.181 198.19 mo
170.672 198.19 li
170.672 186.698 li
159.181 186.698 li
159.181 198.19 li
cp
clp
2 lw
166.355 190.957 mo
163.439 193.874 li
163.439 190.957 mo
166.355 193.874 li
1 0 0 rgb
@
grestore
gsave
270.202 254.036 mo
287.213 254.036 li
287.213 237.657 li
270.202 237.657 li
270.202 254.036 li
cp
clp
283.473 240.659 mo
284.58 238.899 285.52 238.831 286.357 238.78 cv
286.643 238.765 286.66 238.378 286.66 238.345 cv
286.66 238.177 286.543 238.075 286.357 238.075 cv
285.771 238.075 285.117 238.144 284.514 238.144 cv
283.758 238.144 282.986 238.075 282.266 238.075 cv
282.131 238.075 281.846 238.075 281.846 238.513 cv
281.846 238.765 282.047 238.78 282.197 238.78 cv
282.818 238.831 283.238 239.05 283.238 239.519 cv
283.238 239.87 282.902 240.358 282.902 240.392 cv
275.956 251.429 li
274.413 239.452 li
274.413 239.083 274.933 238.78 275.974 238.78 cv
276.292 238.78 276.544 238.78 276.544 238.327 cv
276.544 238.126 276.36 238.075 276.226 238.075 cv
275.319 238.075 274.345 238.144 273.423 238.144 cv
273.021 238.144 272.585 238.126 272.183 238.126 cv
271.763 238.126 271.343 238.075 270.958 238.075 cv
270.79 238.075 270.521 238.075 270.521 238.513 cv
270.521 238.78 270.724 238.78 271.093 238.78 cv
272.349 238.78 272.384 238.981 272.45 239.552 cv
274.228 253.509 li
274.312 253.962 274.397 254.028 274.683 254.028 cv
275.05 254.028 275.136 253.911 275.319 253.628 cv
283.473 240.659 li
0 0 0 rgb
f
grestore
gsave
0 119.979 mo
13.8564 119.979 li
13.8564 109.277 li
0 109.277 li
0 119.979 li
cp
clp
10.4844 114.26 mo
10.4844 110.703 8.37109 109.596 6.69434 109.596 cv
3.60742 109.596 .621094 112.834 .621094 116.021 cv
.621094 118.135 1.96289 119.846 4.27832 119.846 cv
5.70313 119.846 7.33203 119.325 9.05957 117.951 cv
9.34375 119.141 10.0977 119.846 11.1055 119.846 cv
12.3125 119.846 13.0176 118.604 13.0176 118.252 cv
13.0176 118.084 12.8838 118.018 12.7334 118.018 cv
12.582 118.018 12.5156 118.084 12.4492 118.252 cv
12.0459 119.359 11.2227 119.359 11.1738 119.359 cv
10.4844 119.359 10.4844 117.582 10.4844 117.045 cv
10.4844 116.574 10.4844 116.523 10.7031 116.256 cv
12.834 113.588 13.3027 110.955 13.3027 110.938 cv
13.3027 110.888 13.2871 110.703 13.0352 110.703 cv
12.8184 110.703 12.8184 110.77 12.6992 111.189 cv
12.2969 112.615 11.543 114.326 10.4844 115.669 cv
10.4844 114.26 li
cp
8.95898 117.363 mo
6.97852 119.107 5.23438 119.359 4.3291 119.359 cv
2.96973 119.359 2.28125 118.336 2.28125 116.893 cv
2.28125 115.787 2.86914 113.337 3.60742 112.18 cv
4.66406 110.535 5.88867 110.098 6.67773 110.098 cv
8.9248 110.098 8.9248 113.068 8.9248 114.83 cv
8.9248 115.669 8.9248 116.977 8.95898 117.363 cv
0 0 0 rgb
f
grestore
gsave
77.6978 32.4541 mo
159.698 32.4541 li
159.698 15.958 li
77.6978 15.958 li
77.6978 32.4541 li
cp
clp
85.3667 22.8813 mo
85.3667 21.6963 85.0474 19.1934 83.2095 19.1934 cv
80.7202 19.1934 77.9507 24.2524 77.9507 28.3667 cv
77.9507 30.0576 78.4702 32.0547 80.1079 32.0547 cv
82.6372 32.0547 85.3667 26.9019 85.3667 22.8813 cv
cp
79.855 25.3311 mo
80.1606 24.186 80.52 22.748 81.2397 21.4702 cv
81.7192 20.5913 82.3843 19.5928 83.1968 19.5928 cv
84.0747 19.5928 84.1821 20.7378 84.1821 21.7632 cv
84.1821 22.6416 84.0356 23.5605 83.6099 25.3311 cv
79.855 25.3311 li
cp
83.4497 25.9033 mo
83.2495 26.7422 82.8774 28.2603 82.1851 29.5518 cv
81.5591 30.7764 80.8794 31.6553 80.1079 31.6553 cv
79.5083 31.6553 79.1362 31.1357 79.1362 29.4717 cv
79.1362 28.7129 79.2427 27.6743 79.7085 25.917 cv
83.4497 25.917 li
0 0 0 rgb
f
103.433 25.9834 mo
103.7 25.9834 104.045 25.9834 104.045 25.624 cv
104.045 25.2646 103.7 25.2646 103.447 25.2646 cv
92.7026 25.2646 li
92.4497 25.2646 92.104 25.2646 92.104 25.624 cv
92.104 25.9834 92.4497 25.9834 92.7153 25.9834 cv
103.433 25.9834 li
cp
103.447 29.4717 mo
103.7 29.4717 104.045 29.4717 104.045 29.1123 cv
104.045 28.7529 103.7 28.7529 103.433 28.7529 cv
92.7153 28.7529 li
92.4497 28.7529 92.104 28.7529 92.104 29.1123 cv
92.104 29.4717 92.4497 29.4717 92.7026 29.4717 cv
103.447 29.4717 li
f
121.886 27.7275 mo
122.193 27.7275 122.512 27.7275 122.512 27.3682 cv
122.512 27.0088 122.193 27.0088 121.886 27.0088 cv
112.167 27.0088 li
111.861 27.0088 111.542 27.0088 111.542 27.3682 cv
111.542 27.7275 111.861 27.7275 112.167 27.7275 cv
121.886 27.7275 li
f
129.276 20.3652 mo
129.276 19.9258 129.276 19.8989 128.863 19.8989 cv
127.745 21.0439 126.173 21.0439 125.601 21.0439 cv
125.601 21.603 li
125.96 21.603 127.012 21.603 127.944 21.1372 cv
127.944 30.4302 li
127.944 31.0825 127.891 31.2954 126.28 31.2954 cv
125.708 31.2954 li
125.708 31.855 li
126.333 31.8018 127.891 31.8018 128.61 31.8018 cv
129.329 31.8018 130.886 31.8018 131.526 31.855 cv
131.526 31.2954 li
130.953 31.2954 li
129.329 31.2954 129.276 31.0957 129.276 30.4302 cv
129.276 20.3652 li
f
141.205 26.103 mo
141.205 24.6655 141.125 23.2407 140.486 21.9097 cv
139.661 20.1787 138.196 19.8989 137.436 19.8989 cv
136.358 19.8989 135.053 20.3652 134.308 22.0293 cv
133.736 23.2676 133.642 24.6655 133.642 26.103 cv
133.642 27.4478 133.722 29.0723 134.455 30.4302 cv
135.227 31.8945 136.544 32.2544 137.423 32.2544 cv
138.382 32.2544 139.753 31.8682 140.54 30.1641 cv
141.125 28.9258 141.205 27.5278 141.205 26.103 cv
cp
137.423 31.855 mo
136.717 31.855 135.667 31.4023 135.333 29.6846 cv
135.133 28.6064 135.133 26.9556 135.133 25.8901 cv
135.133 24.7451 135.133 23.5605 135.28 22.5884 cv
135.625 20.4448 136.971 20.2852 137.423 20.2852 cv
138.009 20.2852 139.194 20.6182 139.541 22.3887 cv
139.713 23.4004 139.713 24.7588 139.713 25.8901 cv
139.713 27.2349 139.713 28.46 139.527 29.605 cv
139.248 31.3091 138.222 31.855 137.423 31.855 cv
f
151.217 21.6167 mo
151.416 21.6167 151.723 21.6167 151.723 21.3237 cv
151.723 21.0039 151.429 21.0039 151.217 21.0039 cv
143.748 21.0039 li
143.547 21.0039 143.253 21.0039 143.253 21.3105 cv
143.253 21.6167 143.536 21.6167 143.748 21.6167 cv
151.217 21.6167 li
f
155.089 17.4629 mo
155.731 17.6226 156.102 17.6226 156.302 17.6226 cv
157.967 17.6226 158.937 16.4907 158.937 16.3042 cv
158.937 16.1714 158.845 16.1313 158.791 16.1313 cv
158.765 16.1313 158.738 16.1313 158.685 16.1714 cv
158.378 16.2778 157.727 16.5308 156.794 16.5308 cv
156.449 16.5308 155.783 16.5039 154.97 16.1978 cv
154.837 16.1313 154.81 16.1313 154.797 16.1313 cv
154.639 16.1313 154.639 16.2646 154.639 16.4775 cv
154.639 20.1655 li
154.639 20.3784 154.639 20.5381 154.837 20.5381 cv
154.957 20.5381 154.97 20.5117 155.089 20.3516 cv
155.623 19.6729 156.394 19.5664 156.833 19.5664 cv
157.58 19.5664 157.925 20.1655 157.981 20.272 cv
158.205 20.6846 158.286 21.1641 158.286 21.8828 cv
158.286 22.2554 158.286 23.001 157.915 23.5469 cv
157.593 23.9995 157.06 24.3057 156.449 24.3057 cv
155.623 24.3057 154.786 23.853 154.478 23.0278 cv
154.957 23.0679 155.198 22.748 155.198 22.4155 cv
155.198 21.8696 154.731 21.7764 154.558 21.7764 cv
154.544 21.7764 153.931 21.7764 153.931 22.4551 cv
153.931 23.5737 154.97 24.7051 156.474 24.7051 cv
158.073 24.7051 159.47 23.5205 159.47 21.936 cv
159.47 20.5249 158.406 19.2202 156.848 19.2202 cv
156.29 19.2202 155.636 19.353 155.089 19.8325 cv
155.089 17.4629 li
f
grestore
72.3184 105.098 mo
72.3184 38.6821 li
155.352 38.6821 li
155.352 105.098 li
72.3184 105.098 li
cp
1 1 1 rgb
ef
72.3184 105.098 mo
72.3184 38.6821 li
155.352 38.6821 li
155.352 105.098 li
72.3184 105.098 li
@
80.6357 38.6821 mo
80.6357 39.4985 li
80.6357 105.098 mo
80.6357 104.265 li
72.3184 105.098 mo
72.3184 38.6821 li
72.3184 105.098 mo
155.352 105.098 li
155.352 105.098 mo
155.352 38.6821 li
72.3184 105.098 mo
72.3184 38.6821 li
72.3184 38.6821 mo
155.352 38.6821 li
72.3184 105.098 mo
155.352 105.098 li
0 0 0 rgb
@
97.2354 38.6821 mo
97.2354 39.4985 li
97.2354 105.098 mo
97.2354 104.265 li
@
113.835 38.6821 mo
113.835 39.4985 li
113.835 105.098 mo
113.835 104.265 li
@
130.436 38.6821 mo
130.436 39.4985 li
130.436 105.098 mo
130.436 104.265 li
@
147.052 38.6821 mo
147.052 39.4985 li
147.052 105.098 mo
147.052 104.265 li
@
155.352 105.098 mo
154.519 105.098 li
72.3184 105.098 mo
73.1514 105.098 li
@
155.352 96.7817 mo
154.519 96.7817 li
72.3184 96.7817 mo
73.1514 96.7817 li
@
155.352 88.4819 mo
154.519 88.4819 li
72.3184 88.4819 mo
73.1514 88.4819 li
@
155.352 80.1821 mo
154.519 80.1821 li
72.3184 80.1821 mo
73.1514 80.1821 li
@
155.352 71.8813 mo
154.519 71.8813 li
72.3184 71.8813 mo
73.1514 71.8813 li
@
155.352 63.5815 mo
154.519 63.5815 li
72.3184 63.5815 mo
73.1514 63.5815 li
@
155.352 55.2817 mo
154.519 55.2817 li
72.3184 55.2817 mo
73.1514 55.2817 li
@
155.352 46.9819 mo
154.519 46.9819 li
72.3184 46.9819 mo
73.1514 46.9819 li
@
155.352 38.6821 mo
154.519 38.6821 li
72.3184 38.6821 mo
73.1514 38.6821 li
@
155.352 105.098 mo
155.352 38.6821 li
72.3184 105.098 mo
72.3184 38.6821 li
72.3184 38.6821 mo
155.352 38.6821 li
72.3184 105.098 mo
155.352 105.098 li
@
2 lw
97.2354 71.8813 mo
97.2188 71.8989 li
97.1855 71.9653 li
97.1357 72.0815 li
97.0518 72.2319 li
96.9521 72.4155 li
96.8184 72.6489 li
96.6514 72.8989 li
96.4521 73.1987 li
96.2021 73.5317 li
95.9189 73.8813 li
95.585 74.2485 li
95.1855 74.6157 li
94.7354 74.9985 li
94.2354 75.3657 li
93.6514 75.7319 li
93.0186 76.0493 li
92.3184 76.3325 li
91.5352 76.5649 li
90.7188 76.7153 li
89.835 76.7993 li
88.9189 76.7651 li
87.9688 76.6323 li
87.002 76.3657 li
86.0518 75.9653 li
85.1182 75.4487 li
84.2354 74.7817 li
83.4355 73.9985 li
82.7188 73.0815 li
82.1016 72.0483 li
81.6182 70.9321 li
81.2686 69.7153 li
81.0518 68.4653 li
81.002 67.1489 li
81.1182 65.8315 li
81.3682 64.4985 li
81.7686 63.1987 li
82.3018 61.9155 li
82.9854 60.6655 li
83.7686 59.4819 li
84.6689 58.3486 li
85.6689 57.2817 li
86.7686 56.2983 li
87.9355 55.3818 li
89.1689 54.5483 li
90.4688 53.7817 li
91.8018 53.0986 li
93.1855 52.4819 li
94.6016 51.9487 li
96.0518 51.4819 li
97.5186 51.0815 li
99.002 50.7485 li
100.502 50.4819 li
102.002 50.2817 li
103.502 50.1489 li
105.002 50.0654 li
106.502 50.0483 li
107.985 50.0815 li
109.452 50.1821 li
110.901 50.3315 li
112.335 50.5483 li
113.735 50.7983 li
115.118 51.1157 li
116.452 51.4985 li
117.769 51.9155 li
119.035 52.3818 li
120.252 52.9155 li
121.419 53.4819 li
122.552 54.0986 li
123.618 54.7485 li
124.618 55.4487 li
125.552 56.1987 li
126.436 56.9653 li
127.235 57.7485 li
127.969 58.5815 li
128.636 59.4155 li
129.219 60.2651 li
129.735 61.1157 li
130.186 61.9653 li
130.552 62.8149 li
130.852 63.6489 li
131.068 64.4487 li
131.252 65.2319 li
131.368 65.9819 li
131.436 66.6987 li
131.452 67.3823 li
131.436 68.0151 li
131.386 68.5981 li
131.302 69.1323 li
131.219 69.6157 li
131.118 70.0649 li
131.002 70.4487 li
130.886 70.7983 li
130.785 71.0825 li
130.686 71.3325 li
130.602 71.5317 li
130.535 71.6821 li
130.485 71.7983 li
130.452 71.8657 li
130.436 71.8823 li
.219608 .32549 .639216 rgb
@
97.2354 71.8813 mo
130.436 71.8813 li
0 0 0 rgb
@
gsave
72.3184 105.115 mo
155.368 105.115 li
155.368 38.6821 li
72.3184 38.6821 li
72.3184 105.115 li
cp
clp
130.436 105.098 mo
130.436 71.8813 li
97.2354 105.098 mo
97.2354 71.8813 li
@
grestore
1 lw
0 lj
4 ml
97.2354 71.6099 mo
85.3857 85.0708 li
.137255 .121569 .12549 rgb
@
gsave
93.7158 71.3999 mo
97.2354 71.3999 li
97.2354 68.6812 li
93.7158 68.6812 li
93.7158 71.3999 li
cp
clp
96.3789 69.9468 mo
96.3789 69.0435 95.8418 68.7622 95.416 68.7622 cv
94.6318 68.7622 93.874 69.5845 93.874 70.394 cv
93.874 70.9312 94.2148 71.3657 94.8027 71.3657 cv
95.165 71.3657 95.5781 71.2329 96.0166 70.8843 cv
96.0889 71.186 96.2803 71.3657 96.5361 71.3657 cv
96.8438 71.3657 97.0225 71.0503 97.0225 70.9604 cv
97.0225 70.9185 96.9883 70.9009 96.9502 70.9009 cv
96.9111 70.9009 96.8945 70.9185 96.877 70.9604 cv
96.7754 71.2417 96.5664 71.2417 96.5537 71.2417 cv
96.3789 71.2417 96.3789 70.7905 96.3789 70.6538 cv
96.3789 70.5347 96.3789 70.522 96.4346 70.4536 cv
96.9756 69.7759 97.0947 69.1079 97.0947 69.103 cv
97.0947 69.0903 97.0898 69.0435 97.0264 69.0435 cv
96.9717 69.0435 96.9717 69.061 96.9414 69.1675 cv
96.8389 69.5298 96.6475 69.9634 96.3789 70.3052 cv
96.3789 69.9468 li
cp
95.9912 70.7349 mo
95.4883 71.1782 95.0449 71.2417 94.8154 71.2417 cv
94.4697 71.2417 94.2959 70.9819 94.2959 70.6157 cv
94.2959 70.3345 94.4443 69.7124 94.6318 69.4185 cv
94.9004 69.0005 95.2119 68.8901 95.4121 68.8901 cv
95.9824 68.8901 95.9824 69.644 95.9824 70.0923 cv
95.9824 70.3052 95.9824 70.6372 95.9912 70.7349 cv
0 0 0 rgb
f
grestore
92.9883 76.4341 mo
92.1035 75.4341 91.5664 74.1187 91.5664 72.6782 cv
91.5664 69.5474 94.1035 67.0083 97.2354 67.0083 cv
100.096 67.0083 102.462 69.1274 102.849 71.8813 cv
@
gsave
104.964 62.7476 mo
109.283 62.7476 li
109.283 58.5874 li
104.964 58.5874 li
104.964 62.7476 li
cp
clp
108.333 59.3501 mo
108.615 58.9028 108.854 58.8853 109.066 58.8726 cv
109.139 58.8687 109.143 58.7705 109.143 58.7622 cv
109.143 58.7192 109.113 58.6938 109.066 58.6938 cv
108.917 58.6938 108.752 58.7104 108.598 58.7104 cv
108.406 58.7104 108.21 58.6938 108.027 58.6938 cv
107.993 58.6938 107.92 58.6938 107.92 58.8042 cv
107.92 58.8687 107.972 58.8726 108.011 58.8726 cv
108.167 58.8853 108.274 58.9409 108.274 59.0601 cv
108.274 59.1499 108.188 59.2729 108.188 59.2817 cv
106.425 62.0845 li
106.032 59.0435 li
106.032 58.9497 106.165 58.8726 106.43 58.8726 cv
106.511 58.8726 106.574 58.8726 106.574 58.7573 cv
106.574 58.7065 106.527 58.6938 106.493 58.6938 cv
106.264 58.6938 106.017 58.7104 105.782 58.7104 cv
105.68 58.7104 105.568 58.7065 105.466 58.7065 cv
105.36 58.7065 105.254 58.6938 105.155 58.6938 cv
105.113 58.6938 105.044 58.6938 105.044 58.8042 cv
105.044 58.8726 105.096 58.8726 105.19 58.8726 cv
105.509 58.8726 105.518 58.9238 105.534 59.0688 cv
105.985 62.6138 li
106.008 62.728 106.028 62.7456 106.102 62.7456 cv
106.195 62.7456 106.216 62.7153 106.264 62.6431 cv
108.333 59.3501 li
0 0 0 rgb
f
grestore
76.5151 51.4429 mo
78.3667 49.5913 li
@
76.6685 51.3481 mo
74.8169 49.4961 li
@
76.6685 40.7876 mo
76.6685 51.3481 li
@
gsave
79.2095 48.0347 mo
82.0903 48.0347 li
82.0903 44.1958 li
79.2095 44.1958 li
79.2095 48.0347 li
cp
clp
81.9497 44.6519 mo
81.9536 44.6177 81.9663 44.5874 81.9663 44.5493 cv
81.9663 44.4517 81.8989 44.3921 81.8003 44.3921 cv
81.7407 44.3921 81.5874 44.4341 81.562 44.6392 cv
81.4595 44.4263 81.2593 44.2769 81.0288 44.2769 cv
80.3726 44.2769 79.6616 45.082 79.6616 45.9087 cv
79.6616 46.4795 80.0112 46.8203 80.4243 46.8203 cv
80.7651 46.8203 81.0337 46.5474 81.0933 46.4839 cv
81.0972 46.4922 li
80.978 47.0034 80.9097 47.2378 80.9097 47.2505 cv
80.8843 47.3018 80.688 47.8682 80.0786 47.8682 cv
79.9731 47.8682 79.7808 47.8638 79.6235 47.813 cv
79.7935 47.7622 79.8569 47.6128 79.8569 47.5146 cv
79.8569 47.4209 79.7935 47.3149 79.6401 47.3149 cv
79.5122 47.3149 79.3286 47.4165 79.3286 47.647 cv
79.3286 47.8813 79.5425 47.9961 80.0913 47.9961 cv
80.812 47.9961 81.2251 47.5483 81.3101 47.2036 cv
81.9497 44.6519 li
cp
81.1997 46.0835 mo
81.1655 46.2319 81.0337 46.3774 80.9097 46.4839 cv
80.7856 46.5903 80.6069 46.6924 80.4409 46.6924 cv
80.1558 46.6924 80.0708 46.394 80.0708 46.1646 cv
80.0708 45.8872 80.2368 45.21 80.3901 44.9155 cv
80.5474 44.6343 80.7944 44.4048 81.0337 44.4048 cv
81.4126 44.4048 81.4937 44.8687 81.4937 44.8989 cv
81.4937 44.9287 81.4849 44.9624 81.4771 44.9839 cv
81.1997 46.0835 li
0 0 0 rgb
f
grestore
gsave
225.806 195.384 mo
293.806 195.384 li
293.806 178.888 li
225.806 178.888 li
225.806 195.384 li
cp
clp
233.274 185.812 mo
233.274 184.626 232.956 182.123 231.118 182.123 cv
228.628 182.123 225.858 187.183 225.858 191.296 cv
225.858 192.987 226.378 194.984 228.017 194.984 cv
230.546 194.984 233.274 189.831 233.274 185.812 cv
cp
227.763 188.261 mo
228.069 187.116 228.429 185.678 229.147 184.399 cv
229.626 183.521 230.292 182.522 231.104 182.522 cv
231.983 182.522 232.091 183.667 232.091 184.692 cv
232.091 185.571 231.944 186.49 231.519 188.261 cv
227.763 188.261 li
cp
231.358 188.833 mo
231.159 189.672 230.786 191.19 230.093 192.481 cv
229.468 193.706 228.788 194.585 228.017 194.585 cv
227.417 194.585 227.044 194.065 227.044 192.401 cv
227.044 191.643 227.151 190.604 227.616 188.847 cv
231.358 188.847 li
0 0 0 rgb
f
251.343 188.913 mo
251.608 188.913 251.954 188.913 251.954 188.554 cv
251.954 188.194 251.608 188.194 251.354 188.194 cv
240.61 188.194 li
240.358 188.194 240.013 188.194 240.013 188.554 cv
240.013 188.913 240.358 188.913 240.624 188.913 cv
251.343 188.913 li
cp
251.354 192.401 mo
251.608 192.401 251.954 192.401 251.954 192.042 cv
251.954 191.683 251.608 191.683 251.343 191.683 cv
240.624 191.683 li
240.358 191.683 240.013 191.683 240.013 192.042 cv
240.013 192.401 240.358 192.401 240.597 192.401 cv
251.354 192.401 li
f
263.19 183.295 mo
263.19 182.855 263.19 182.829 262.778 182.829 cv
261.659 183.974 260.075 183.974 259.503 183.974 cv
259.503 184.532 li
259.862 184.532 260.927 184.532 261.86 184.067 cv
261.86 193.36 li
261.86 194.013 261.806 194.226 260.183 194.226 cv
259.61 194.226 li
259.61 194.784 li
260.235 194.731 261.806 194.731 262.524 194.731 cv
263.245 194.731 264.802 194.731 265.427 194.784 cv
265.427 194.226 li
264.854 194.226 li
263.245 194.226 263.19 194.025 263.19 193.36 cv
263.19 183.295 li
f
275.159 189.032 mo
275.159 187.595 275.081 186.171 274.454 184.839 cv
273.616 183.108 272.151 182.829 271.392 182.829 cv
270.313 182.829 269.009 183.295 268.276 184.959 cv
267.69 186.197 267.61 187.595 267.61 189.032 cv
267.61 190.378 267.679 192.002 268.409 193.36 cv
269.183 194.824 270.501 195.185 271.38 195.185 cv
272.351 195.185 273.71 194.798 274.509 193.094 cv
275.081 191.855 275.159 190.458 275.159 189.032 cv
cp
271.38 194.784 mo
270.673 194.784 269.622 194.332 269.288 192.614 cv
269.103 191.536 269.103 189.886 269.103 188.819 cv
269.103 187.675 269.103 186.49 269.235 185.519 cv
269.581 183.374 270.927 183.215 271.38 183.215 cv
271.964 183.215 273.149 183.548 273.495 185.318 cv
273.669 186.33 273.669 187.688 273.669 188.819 cv
273.669 190.165 273.669 191.39 273.483 192.534 cv
273.204 194.239 272.19 194.784 271.38 194.784 cv
f
285.185 184.546 mo
285.386 184.546 285.677 184.546 285.677 184.253 cv
285.677 183.934 285.397 183.934 285.185 183.934 cv
277.716 183.934 li
277.517 183.934 277.21 183.934 277.21 184.24 cv
277.21 184.546 277.503 184.546 277.716 184.546 cv
285.185 184.546 li
f
288.993 180.393 mo
289.632 180.552 290.019 180.552 290.218 180.552 cv
291.868 180.552 292.839 179.421 292.839 179.233 cv
292.839 179.101 292.759 179.062 292.692 179.062 cv
292.667 179.062 292.642 179.062 292.601 179.101 cv
292.292 179.208 291.63 179.46 290.696 179.46 cv
290.351 179.46 289.685 179.434 288.872 179.128 cv
288.753 179.062 288.726 179.062 288.714 179.062 cv
288.554 179.062 288.554 179.194 288.554 179.407 cv
288.554 183.095 li
288.554 183.308 288.554 183.468 288.753 183.468 cv
288.86 183.468 288.872 183.441 288.993 183.281 cv
289.538 182.603 290.298 182.496 290.737 182.496 cv
291.493 182.496 291.829 183.095 291.896 183.202 cv
292.122 183.614 292.188 184.094 292.188 184.813 cv
292.188 185.185 292.188 185.931 291.813 186.477 cv
291.509 186.929 290.964 187.235 290.351 187.235 cv
289.538 187.235 288.7 186.782 288.38 185.958 cv
288.86 185.997 289.099 185.678 289.099 185.345 cv
289.099 184.8 288.634 184.706 288.474 184.706 cv
288.446 184.706 287.849 184.706 287.849 185.385 cv
287.849 186.503 288.872 187.635 290.378 187.635 cv
291.976 187.635 293.384 186.45 293.384 184.866 cv
293.384 183.454 292.306 182.149 290.751 182.149 cv
290.204 182.149 289.552 182.282 288.993 182.763 cv
288.993 180.393 li
f
grestore
428.523 168.573 mo
428.523 102.157 li
511.557 102.157 li
511.557 168.573 li
428.523 168.573 li
cp
1 1 1 rgb
ef
.7 lw
1 lj
10 ml
428.931 167.569 mo
428.931 101.803 li
511.132 101.803 li
511.132 167.569 li
428.931 167.569 li
@
437.147 101.803 mo
437.147 102.619 li
437.147 167.569 mo
437.147 166.736 li
428.931 167.569 mo
428.931 101.803 li
428.931 167.569 mo
511.132 167.569 li
511.132 167.569 mo
511.132 101.803 li
428.931 167.569 mo
428.931 101.803 li
428.931 101.803 mo
511.132 101.803 li
428.931 167.569 mo
511.132 167.569 li
0 0 0 rgb
@
453.599 101.803 mo
453.599 102.619 li
453.599 167.569 mo
453.599 166.736 li
@
470.032 101.803 mo
470.032 102.619 li
470.032 167.569 mo
470.032 166.736 li
@
486.481 101.803 mo
486.481 102.619 li
486.481 167.569 mo
486.481 166.736 li
@
502.915 101.803 mo
502.915 102.619 li
502.915 167.569 mo
502.915 166.736 li
@
511.132 167.569 mo
510.315 167.569 li
428.931 167.569 mo
429.749 167.569 li
@
511.132 151.119 mo
510.315 151.119 li
428.931 151.119 mo
429.749 151.119 li
@
511.132 134.687 mo
510.315 134.687 li
428.931 134.687 mo
429.749 134.687 li
@
511.132 118.236 mo
510.315 118.236 li
428.931 118.236 mo
429.749 118.236 li
@
511.132 101.803 mo
510.315 101.803 li
428.931 101.803 mo
429.749 101.803 li
@
511.132 167.569 mo
511.132 101.803 li
428.931 167.569 mo
428.931 101.803 li
428.931 101.803 mo
511.132 101.803 li
428.931 167.569 mo
511.132 167.569 li
@
2 lw
453.599 134.687 mo
453.565 134.703 li
453.515 134.786 li
453.431 134.92 li
453.282 135.086 li
453.114 135.319 li
452.882 135.586 li
452.599 135.887 li
452.265 136.22 li
451.849 136.569 li
451.382 136.937 li
450.815 137.286 li
450.181 137.637 li
449.466 137.937 li
448.665 138.187 li
447.782 138.369 li
446.831 138.437 li
445.831 138.402 li
444.782 138.236 li
443.716 137.902 li
442.647 137.42 li
441.614 136.753 li
440.665 135.902 li
439.815 134.902 li
439.099 133.736 li
438.532 132.437 li
438.147 131.02 li
437.966 129.52 li
437.999 127.986 li
438.231 126.42 li
438.665 124.853 li
439.298 123.303 li
440.132 121.819 li
441.114 120.403 li
442.265 119.069 li
443.548 117.803 li
444.966 116.653 li
446.466 115.587 li
448.081 114.62 li
449.765 113.753 li
451.532 112.986 li
453.349 112.303 li
455.198 111.72 li
457.114 111.203 li
459.048 110.77 li
461.015 110.42 li
462.999 110.153 li
464.999 109.937 li
466.999 109.803 li
469.015 109.736 li
471.048 109.736 li
473.065 109.803 li
475.065 109.937 li
477.065 110.153 li
479.048 110.42 li
481.015 110.77 li
482.948 111.203 li
484.864 111.72 li
486.716 112.303 li
488.532 112.986 li
490.298 113.753 li
491.981 114.62 li
493.599 115.587 li
495.099 116.653 li
496.515 117.803 li
497.798 119.069 li
498.948 120.403 li
499.931 121.819 li
500.765 123.303 li
501.397 124.853 li
501.831 126.42 li
502.065 127.986 li
502.099 129.52 li
501.915 131.02 li
501.532 132.437 li
500.966 133.736 li
500.249 134.902 li
499.397 135.902 li
498.448 136.753 li
497.415 137.42 li
496.349 137.902 li
495.282 138.236 li
494.231 138.402 li
493.231 138.437 li
492.282 138.369 li
491.397 138.187 li
490.599 137.937 li
489.882 137.637 li
489.249 137.286 li
488.681 136.937 li
488.216 136.569 li
487.798 136.22 li
487.466 135.887 li
487.181 135.586 li
486.948 135.319 li
486.782 135.086 li
486.632 134.92 li
486.548 134.786 li
486.499 134.703 li
486.481 134.687 li
.219608 .32549 .639216 rgb
@
453.599 134.687 mo
486.481 134.687 li
0 0 0 rgb
@
gsave
428.931 167.586 mo
511.147 167.586 li
511.147 101.803 li
428.931 101.803 li
428.931 167.586 li
cp
clp
453.599 167.569 mo
453.599 134.687 li
486.481 167.569 mo
486.481 134.687 li
@
grestore
1 lw
0 lj
4 ml
453.599 134.366 mo
441.749 147.827 li
.137255 .121569 .12549 rgb
@
gsave
450.079 133.988 mo
453.599 133.988 li
453.599 131.271 li
450.079 131.271 li
450.079 133.988 li
cp
clp
452.741 132.536 mo
452.741 131.633 452.206 131.352 451.778 131.352 cv
450.995 131.352 450.237 132.174 450.237 132.983 cv
450.237 133.521 450.577 133.955 451.165 133.955 cv
451.528 133.955 451.94 133.822 452.38 133.474 cv
452.452 133.775 452.644 133.955 452.899 133.955 cv
453.206 133.955 453.386 133.64 453.386 133.55 cv
453.386 133.508 453.351 133.49 453.313 133.49 cv
453.274 133.49 453.257 133.508 453.241 133.55 cv
453.138 133.831 452.929 133.831 452.917 133.831 cv
452.741 133.831 452.741 133.38 452.741 133.243 cv
452.741 133.124 452.741 133.111 452.798 133.043 cv
453.339 132.365 453.458 131.697 453.458 131.692 cv
453.458 131.68 453.454 131.633 453.39 131.633 cv
453.335 131.633 453.335 131.65 453.304 131.757 cv
453.202 132.118 453.011 132.553 452.741 132.895 cv
452.741 132.536 li
cp
452.354 133.324 mo
451.851 133.768 451.409 133.831 451.179 133.831 cv
450.833 133.831 450.659 133.571 450.659 133.205 cv
450.659 132.924 450.808 132.302 450.995 132.008 cv
451.263 131.59 451.575 131.479 451.774 131.479 cv
452.347 131.479 452.347 132.233 452.347 132.681 cv
452.347 132.895 452.347 133.227 452.354 133.324 cv
0 0 0 rgb
f
grestore
449.692 138.805 mo
448.606 137.771 447.929 136.313 447.929 134.694 cv
447.929 131.563 450.468 129.025 453.599 129.025 cv
456.729 129.025 459.267 131.563 459.267 134.694 cv
@
gsave
468.771 124.086 mo
473.091 124.086 li
473.091 119.927 li
468.771 119.927 li
468.771 124.086 li
cp
clp
472.142 120.688 mo
472.423 120.241 472.661 120.225 472.874 120.212 cv
472.946 120.208 472.95 120.109 472.95 120.101 cv
472.95 120.059 472.921 120.033 472.874 120.033 cv
472.724 120.033 472.558 120.05 472.405 120.05 cv
472.214 120.05 472.017 120.033 471.835 120.033 cv
471.8 120.033 471.728 120.033 471.728 120.144 cv
471.728 120.208 471.778 120.212 471.817 120.212 cv
471.976 120.225 472.081 120.28 472.081 120.399 cv
472.081 120.489 471.995 120.612 471.995 120.621 cv
470.231 123.424 li
469.841 120.382 li
469.841 120.288 469.972 120.212 470.237 120.212 cv
470.317 120.212 470.382 120.212 470.382 120.097 cv
470.382 120.046 470.335 120.033 470.3 120.033 cv
470.069 120.033 469.823 120.05 469.589 120.05 cv
469.487 120.05 469.376 120.046 469.274 120.046 cv
469.167 120.046 469.062 120.033 468.962 120.033 cv
468.921 120.033 468.853 120.033 468.853 120.144 cv
468.853 120.212 468.903 120.212 468.997 120.212 cv
469.315 120.212 469.325 120.263 469.341 120.407 cv
469.794 123.953 li
469.815 124.067 469.837 124.085 469.909 124.085 cv
470.003 124.085 470.022 124.055 470.069 123.982 cv
472.142 120.688 li
0 0 0 rgb
f
grestore
434.896 115.065 mo
436.747 113.214 li
@
435.05 114.971 mo
433.198 113.119 li
@
435.05 104.41 mo
435.05 114.971 li
@
gsave
437.591 111.657 mo
440.47 111.657 li
440.47 107.819 li
437.591 107.819 li
437.591 111.657 li
cp
clp
440.329 108.274 mo
440.333 108.241 440.347 108.211 440.347 108.173 cv
440.347 108.074 440.278 108.015 440.181 108.015 cv
440.12 108.015 439.968 108.058 439.942 108.262 cv
439.839 108.049 439.64 107.899 439.409 107.899 cv
438.753 107.899 438.042 108.705 438.042 109.531 cv
438.042 110.103 438.392 110.443 438.804 110.443 cv
439.146 110.443 439.413 110.171 439.474 110.106 cv
439.478 110.115 li
439.358 110.626 439.29 110.86 439.29 110.874 cv
439.265 110.925 439.067 111.491 438.46 111.491 cv
438.353 111.491 438.161 111.487 438.003 111.437 cv
438.173 111.385 438.237 111.235 438.237 111.138 cv
438.237 111.044 438.173 110.938 438.021 110.938 cv
437.892 110.938 437.71 111.04 437.71 111.27 cv
437.71 111.504 437.923 111.619 438.472 111.619 cv
439.192 111.619 439.604 111.172 439.69 110.827 cv
440.329 108.274 li
cp
439.579 109.706 mo
439.546 109.855 439.413 110 439.29 110.106 cv
439.167 110.213 438.987 110.315 438.821 110.315 cv
438.536 110.315 438.45 110.018 438.45 109.787 cv
438.45 109.511 438.616 108.833 438.771 108.539 cv
438.927 108.258 439.175 108.027 439.413 108.027 cv
439.792 108.027 439.874 108.492 439.874 108.522 cv
439.874 108.552 439.864 108.586 439.856 108.607 cv
439.579 109.706 li
0 0 0 rgb
f
grestore
gsave
449.072 96.9067 mo
490.072 96.9067 li
490.072 83.4067 li
449.072 83.4067 li
449.072 96.9067 li
cp
clp
456.74 87.5278 mo
456.74 86.3423 456.422 83.853 454.584 83.853 cv
452.094 83.853 449.324 88.9126 449.324 93.0259 cv
449.324 94.7173 449.844 96.7007 451.482 96.7007 cv
454.012 96.7007 456.74 91.5483 456.74 87.5278 cv
cp
451.229 89.9907 mo
451.535 88.8325 451.895 87.4077 452.613 86.1294 cv
453.092 85.2505 453.758 84.2388 454.57 84.2388 cv
455.449 84.2388 455.555 85.3843 455.555 86.4087 cv
455.555 87.2876 455.41 88.2065 454.982 89.9907 cv
451.229 89.9907 li
cp
454.822 90.563 mo
454.623 91.3892 454.252 92.9204 453.559 94.2114 cv
452.934 95.4224 452.254 96.3149 451.482 96.3149 cv
450.883 96.3149 450.51 95.7817 450.51 94.1177 cv
450.51 93.3589 450.617 92.3208 451.082 90.563 cv
454.822 90.563 li
0 0 0 rgb
f
474.807 90.6294 mo
475.074 90.6294 475.42 90.6294 475.42 90.27 cv
475.42 89.9106 475.074 89.9106 474.82 89.9106 cv
464.076 89.9106 li
463.824 89.9106 463.477 89.9106 463.477 90.27 cv
463.477 90.6294 463.824 90.6294 464.09 90.6294 cv
474.807 90.6294 li
cp
474.82 94.1177 mo
475.074 94.1177 475.42 94.1177 475.42 93.7583 cv
475.42 93.3989 475.074 93.3989 474.807 93.3989 cv
464.09 93.3989 li
463.824 93.3989 463.477 93.3989 463.477 93.7583 cv
463.477 94.1177 463.824 94.1177 464.076 94.1177 cv
474.82 94.1177 li
f
489.68 90.7622 mo
489.68 89.3247 489.586 87.8872 488.959 86.5552 cv
488.135 84.8384 486.67 84.5454 485.91 84.5454 cv
484.832 84.5454 483.527 85.0112 482.781 86.689 cv
482.209 87.9272 482.117 89.3247 482.117 90.7622 cv
482.117 92.1079 482.197 93.7192 482.93 95.0903 cv
483.701 96.5415 485.02 96.9009 485.898 96.9009 cv
486.855 96.9009 488.227 96.5278 489.014 94.8237 cv
489.586 93.5854 489.68 92.1743 489.68 90.7622 cv
cp
485.898 96.5005 mo
485.191 96.5005 484.127 96.061 483.807 94.3306 cv
483.607 93.2524 483.607 91.6021 483.607 90.5493 cv
483.607 89.3911 483.607 88.2065 483.754 87.2349 cv
484.1 85.104 485.445 84.9448 485.898 84.9448 cv
486.484 84.9448 487.668 85.2642 488.014 87.0483 cv
488.188 88.0474 488.188 89.4185 488.188 90.5493 cv
488.188 91.895 488.188 93.1196 487.988 94.2642 cv
487.721 95.9692 486.697 96.5005 485.898 96.5005 cv
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/GGPFTL+Times-Roman*1 uf/GGPFTL+Times-Roman uf/Times-Roman ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Giacomo) ()%%Title: (nicer_2instab3nd.eps)%%CreationDate: 3/19/15 12:03 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6q0q<_djY.M!;?Ib80D_T!G?&k^*fJJZOe5c$!Xa[1]@;mY5PDaCeH[p0h\-Ok5=)[1gjH9PtIlN<CnKj_ti`!;f?hCo%h&>%Jl3B`(P?I+%B=G0&.\.f0,k!tQ=O#10j?Dsc!Xj(.4IRf$E2(J,YLt6fWC.eNR%%+hlSa?K0m&tm12+,L#:EUn>,m]DlUYN7]Y)<%:GC\+f"S[=j_e]:=g+=^`ZT9SD-&gSbH"LDf4m5/:76,-l:\\@C6Z@/G'+W9Kqs6UU@aTj2-]b&;>[KCh[%Bh$ms.N"K@jk?iu5D%Djl(#WO54g`]9^BW#rD*o`/?0?HDT9`c)3:J@\07l`u]:>IY7ZaFB>mbJm%n0^Mkrc#2\nWn5kkp=e'r2jT_m)+=]IB&mJ`,A2XD%<_-i@ZlE&19N"osBj0T/dI+EB_ZlsLQ:[qg5n#6+OOOtE*`(0V!>.kZ6oLH)CP!05Q)#meR:'3[PEII$ZU,QD,at?J<o^Aqj$+L0%6a^N=fH#?;)P&g&Pe+F)n>c:K5V>o2"G)$M2j^:?UOUa,%Okh,#9#1?d]GH3H4hZ6DH2gDPYNG"U`$>9rK"r0(p;U3+mClb;uIGQ%hf8=5UX(DLlSU`Th-5JN651^'635dEbn>Rn[;8Z1VUOd':s<OITE_Nbd\OT6+Kh+LLrLgE#([shUFtJin2^.<=hjd[ltkmQAmQtc%AtAGn<03puUbTtBpJ3UE;65<K_dT=8[fVr'E5LN=6Ls2p<cJ!Dr7\,.Oa8]0dn2;%W8rN53lUBg$?Z^?FE#"bG;0&DLb($kT.K#8%3fTc#L7a0OOXeQL/^*oiQLV(.e$nEoQDUM,C!6a&9B.D^8uFCF3aF?W0Js=2BH$$\i"&Ir)WoI)b_<h$'6=lqR&a'!P(`tO.24I3%\VtIMj`DD6Qco0<>c)'\`Y;d;&$:u.`KJ5f))r[%0c.8)5;<t_a_3,OLFpA=b_%La:MdL+$!J,!KV/$m/](;:7-R)_@uKgigPt*X%MJ^3k.5bi<Qj_Z&T9uN]`\aH?&9CHR8ju>ur1kWQb:3-!GD[?A*AKMLaN-[I0Gh/.57nOq6/$)MNqO<=@kMSidDM1uZn/Wr5Of%a%8,FAm.H["LT9p#@LS(pi.@3lBde^4<K*Ms/K7AhDU\I]d@kLA4K.aOm'RRcgi^N10OH'763K-2HK<6ph'3g6gBrgK&C`e+80$<)(%5"ZJl(-aMa[Or+L38593P]F,8b2!74)n]X!)e)Q&L%9gM/rVujFJmbgWmc8Ch%4Y&7uXlRgbG-m4,$GQe+`Kq@STE?j_!60PVs4B%RJ]q]AYYf^$&";cb!q[_-cZ%J]+)Jer.h*d%iHU_os-kpedmS!5tNWPW+"V!i+ph8iR3m`.$-[kVG^:@s!3H8@Gg\fV_S*Zht/Q5%<`PU*^?JuO6_E$jrQAg;F#Ig`S^ma\3VnJYe%^:%5-o2((C1h81kgA,^J]nPZZ#[fR"&),A)H5mm8s.#4OJ(\T;3/8[9ODrK"5\M%>:sM[jg$@uhrN,^)g\A0A1VZcch;JS?,h>a>_`EW]O!Nial7NAQmkr"F4im_>a-Q2<g!2_Zoh$dn4OI/3T(bmncQ6mOe`q82>gK$%KT!U-.Td(E`r@`:^5uFf^nt5/:nm'I4=qpln39NF0rMq5+m,1:VW0UdDU_o\kQE+sVh.U9"+4o\NjbFo79fh-f'"uKWr[p_MIO]s%/d(6&c@h+#k6TpjT1G^(2\`T=(@-NTdPO)uQ4U):Pdb%SXXOpb7E*1MEl+_@EPh_W@FD<kNb)'9fO7>YXTtObhCP?t;3Xa\dn"d^%PSp&$!oS[j+%gN51)(h3Rlo.<\DH=FMaEQSVMt;koN?)kJW-ri\VPl)W=I6X:<SmS5FP7.2:\?]jV8Zu`-sPQOMR`sZ3ii>FUK[G%_V[C=+jOU$'QU!&<J0K-Se/-`Fdd)8X'p+3erj#1VHBiZh),7nn-6<Cl8CUHA&T4oG'n*=hCBHXV<t.e2<r`HR<BJ$.dJ,/DT"u=%@k0KtPi/>>K?eNQ9.f\hJG>IRa^jlO_;1b\O`F^[i7NuC;Af/omETYb.:Z`CIlIf"R"p/,RYZ8c6J[=h,aj[*3nDt$jSL]26C9+E%oX[WOWbb':CfOE6&PVhZQ0$c"@pV'(.=m,ZAdiR^N>@.u70E-4To#/7&86D^4bd4`>2*F_Le=PO/r^bB$?AD"6;=f_c1.)WC1B&^%q8RrMVGbr2CI?AQ'L(_M3Goh&Bg:j'TO*Z"gG6[9oSH!lESPG.cJ"^Dj_'5/:dRem3ZApcTsYdU)"W;E5mq%fA'D'?=<Fo.9!U"K%;4e45Vriq^I/=169:#Q$/R`MFAW+sIN8?Tj(7:l7^c9YbQ1CBa5@+,+F,A%O87R=Y'P"R[R#jK5*%2gfq1?8VZ1@7n;!+DC)@^C<%<gs&$5T!9%I#&c[R23dIBX8i)McP;(OrS*Fb:$5%gTVFS17cB%eP,sdf!cX6NU^l0*.#;-+dX]pEXm>QN*sF:827!`NR_n>2!#aJ%oC+u/9N4(;Z\r:ZaOh-#<Kq91X:+=F@.kbWLUmMOq^;P3[c%'9Re7nAII>'8asJ]?VYs?T[)Z^>N!9!SaeT]BNH7o@JUnGs8:V,$%DaGt:nP+ID'm%qSkZjaXE*3]]HCib9"T(<d?>tY]nBYeKM=FT7c8n'u6bY>3!R#2UX[+%Cn4@4\CdXN\,*=<6Df]r%1GinT>u.;l%]jto66t^sY%-O;o;HhR-QQ1^]CU&Oo%8'iM?`0Khh/hrqNBSXnQ4pMNBHN%V*tT?Yg-+OB<Q5WPc^86<Og7MB42iUj$O@D_I$mfe%4;m`Ki(mmW=>6QkE3(N.'!4FQPLCqXl@!()%5M,6[P12Z)*RQC(h7uU1Zi$qL&E:Z3BEjE.N"\+1CDZYq!i2nK;-J%+I*9hekPpj%b`Y@!<qU`sPN$m?r+s=6EF$0kW(rsPbRlc*]hDjUcmXTY6SgPN"VjN`^83t^I]M%K&]hUt_NjAa@9TNR;lU_@d!>?GH:"I`YM1[D%KBA>5eR!Aj>@oOGWtePg^+lgI\PRpUm:7-,(N+PKkIGlZLEq&)aHO?]<2LN"UCu7Ge!skFf590FPJ;Bl6lQsl+;K!g9Y3bCR.DK]%Ou1?N/1ZIc3DsCWPqJp#OAQ8"3n"G$WJhT\_pN*i^4k))/Xoch?mh<s[B/,C"_)o&bRQOQC'0o=PB5bg@JZA=NhR[CF]`om5D<Y3%Pt3dt:GD_JH?nO2A',i[7^Ef56Ubc>2sM8l%F#j8l(`o)0h+Ch>H`P=#kcF'rm-sgXSVbbV.Y?7?J><Ik[jP#ge/S+jAh*o$r1H`%p"*n#=EW\=+cL3hAj;b?/>l^fL97.6V9)DA=t.tQAA$mM\L/C-idcDoN$e+ma@:aRRK'D@?UW+\rtp$unS$6ce:sq*Mi=XqQOJep%1/:FGfAnK3#"AtFY;m8]bkIs>Bj3!spVXcOAoE<OLpTG9*9*0U1bIjJFR4ZRSN<q,d9hTF)])]``bO@U^YA%&d!+Vjo&cr,*;'Ao%!Ei(o)Kggp6*p11C':qdlD%_bX+BSgWEd-ikeilU.bBI-WC!^aDmij"<2j%?%3):q@C&sPUs=p8J^fZ^U.Vak$+*[>f'M!XmIsZA%mo5S6U#i<XGg-6F+=.,h"teQeMDi\Q9a\U+o/+!?9f#S#J.JHe1iJ`Cm;dKaB&5./AONkbB\!d=)G#k3]_1R18#)]V"+lM%WWr)j%%>Kjk$X5?!e8T7boepQm)T,OXg.)MB5#Y:P?1$/!>!SoJ=hk8Uoi/'JqqZ1>Hk')mI^S%J-2\Ir_5o9Bkmm$=pJe;[3ZGH+K?o(9%e8($Jm:L"L1)\ua)kBrTA5<\ojYOW_rVCjC5W(V4r8"LcC82P.(`B?8Y1NYge/2R<leVS_;N8G,X_O@'"R^$UW\#W,Q?mIlTl\9%%p_Z:u2qm(rX78Aa:QuKO<iaokQ4J;l=sK<-SWVBh:&c]>]#Z+e3hV^P[)j+mA0<T-C-5=[jGB_^`-V$Y-8LBK1m@(rk-+N.Q1em*%eF+#Da[e/V-;ObL+SFTE#4(UV25bas:Uc>m6Md.1Za]4m@3S5`+RAO'3uS*W"B%7?78)G)*9E-BM-Pn#k('<NnEbI/AicTQc=j(2%%\D)91Rd?Yk.'BdgsB,Fm&@goRGpifNbDL0IH:-OK4_18aFKpNRZ?Ssl>tJNW:iaK<cp6PES0Y8^/MEhPRC`_aOUXinE"sMC,\&&%Vsol;*$Jdke>[S1F3mDGL"hYufphT#ia8PWCigc=o`G@'1=-";]^Ch!f=uZl^n[84oq<?>1NEgndeG]"[br="C3JHB8.9uh!tE@;%14Ym2<3]s'+WtAc*,dOfLWsS7hL'fK6$q<rO%u_,n('udO9SF03(1:]i3QVPXPNZM"p:TsVI8oRfEmF=-<9G!J\Q=YZtubpBFV".%8Q9edKn8q^NQt$=-n,40D?1-[>lAQTF^$LJqJBrW8kJg[UcjK^_<i@rdiQ6F^7;Z%n>aq*Nd:r$pMM+:X*<G>5T\^Wo+=*3qZ;<a%%7]smp?QJC*&`u1AhWEUW8+EH)aX<5$Bn!?HZJ@[j1X2cZf3gLeG6/mlLm3AAdSs=i/_Wf2];75X4jQHK-]9+I,'CCn%8ua@^'"(%&"qJ3B/&3EWAH;;dRPfMRPl&?<=S]ooRlu=B^cnPmWMe]=R.IN\t2Sn1&jJ5NcS*kF4R#f)Qu`Y@';$2+9(;8J_]ZN^rq3_oKj:i%<hbX3CJGU(]JjW#n"sME,)Mb@2WH/;jW#RXXjsrX%@U,J$Q;nF`,H_6OU)t^D7A?=]q`EEcYBXL?k,EE,j1F!:dqY8MnVTr>:++W%%;nZUrW['Y80)h<]-.^$%;9"E$fjjL<niUA4HR-h[Qsm4Dh[+P5Y.c[9NoTs(;UD3LuAk)X(G?+Oc_M$`>s<"S<6cE&LC:KP8$Sg%[,>4I@-h/5Jp4ugi=LHc6.1779(4,$p`p".OEu+Bo%el.5R#_N+:'dB4+'+4*0b"$?\l'5r#:b6s,BQBs$igGIj<Ca^Cb2QhhZCN%hhZC:hhZCJhh^p>ECNq-NAI=*Dk%EiJ)cKdrjud\7nBbB>/R6E=HfruW7h+SrJt=l[3mc1+GlnZ=un0t+1NO7,@q!4XVborq/2;X%dNE!QJ;(h`Ko%_.H*u0&4#DJQT"k(jefOQS6At:2-SQ;HG$YQHk=mdlg8;-#NWC-W3Ff0:).kV+7"N(HQ6:eTs7Bh%A4q"FY2a98%Q-m"#Q^%"K4G-F(ij>i]IlfhE_:/KrNRYPAIMA/%r#u>DH*D%9O[604Ue)FqcW0EkP;GibE`Kr5[3`5]K5[2(Vh:tl7MX?teU!d`%D1^/]&Bp,gh;DiZIK.RlC"NDNdt0_:AGa2/ZTW&cmPL%NLgU]HS):g-IQ^fN&3(=+H&k7A\UL<BK?!neK2:V*r@2Z,6jO_2M+P:J%hZsu31M1U!/=QZmJel=7AgF('e,7`-IChtDbUTk5*F"URZAGj60840(YNk&gD"^sI0g#L'<MQs/*CAE]oUR'<#98,XSB'Gh[=pr#%cc]t2Y.h:^==\e7&X=Vt&([JrGOD+dC:+J/D]AWU+:)oY!fn^gH?7RGZ4K?e>;r*bX]o]\5_,9ATZN.'PqAqij[%4apD\b)0SjD&%otDgWhp%,9d1DXOJhX@>h[MZN\RZa>rmi#9$A-q5QE5MOI#5TV[:-NdI&j]USXPR2>#f.aQ.&"N]X:3==Gt#,dFoqoV)iEX`Wh:`%p!!?il.3QLoABjr_%O+T_&,4h_+A/+Batq7*]Vm&&h7"d=a-[<+?K5pk3Y,"d4,M>4O-F6*['a-M8V[a@GDamWr5Dbp)>]!emV)g%N'@m^7coOj_DQ4??F+XGV*>5UpA\k1YCUtNV0[2bI;?9[_r"MBil'Ege]u46qU#S?GC)diVX@3>:LQ4BMHq'YJ%&W&Gb"h`lo3fk%6\DeW62d]I/-%l#X7k4_eb]dp',YZXA,*[6pLe$E1O/_rg)k-O;MWTp=4QYaP!3j,f.lBBNlf*-oIm&d>E_Sed0FZALqnXBN)$5]%T6ijt3bo[#96WakDdNl_,ECBtD)62bW;Gao^$+-q?iA]sC"a*X:[H2Qdm2gcbP+iRXT)ia`obf@K427fhj%`%NXn&Q<A[(j\cC.:%QQ?,$\,]e56)a^r0M2T=s7loG`rG./0PE=Zs)qNrWF4o2C""DQC[5U82f\ZX@O(&c<s[i;8;a3S-FN/(c2-qY:UB\Ps4p`'K:aLb%eo*c)qYf;i%6;[J6<jH_-!1*#D)':)[q<9qLS,1u2r9>^4<m(m)DC[mR/Dfj]BYFQ[0AX\m(Ya]_]8@,7\SWT<pQCec&7?8-Q^Hc%s2Y^pELH3S&)J\b1L)'Y^Dd%l3h$B2"_t/O03IP7K(sO$2fj2rPRh9;f'V'.Fiplb#S!Y+]0jbWOnZ#CcEDh4*Z.Gag]>!\Lo^!e%bqEbPF_s/B-Qlm.GuAIkV7sNZa]c0-*^)"afeX4nX0%]$&'+6@58sK8k@4S'_0<6[euEo-URnFCL?&9+JSjWJ_p<:Yku<S"4)aL4%N=m5^S#5'O(P3./Dn&@jaP=pCQdW%@or-C[9)<q:Za`,!e\<"MUXlXU]U#n`0CfJUSM&sZ@'`51ZTDh=?0C4Zk+(!*=V"$q(ag)<%&/=b&E6/WBN,#*gFe#=HWRElR4.RrE?^eTYH_Jj1Lmr[h$eXTV[CBj`Tjsl@mZ5:Q`0G$i1mnKR4+,J,Ap,Q=G[AFabL;>\o,s@,%h),#iL0I5C922;R"G,Mob$h(SP125E4sXq2A/iOYhCCP,X(:]iishpmJu0Ue)7fT`G5a99r(HT%T)bb?n%L_bL9BWC'lLO")DcnT%_:]2SLclZtA*NnGpk*!*=f2hQa>5*h"OVh?o_`O>nl)De8'85#^6.^2I06D'AsP,rL<nK;ooi*4WAKJ%0>91O]DBZ8)@!3Sc9AS7%1>7Do<,_CoTS@aldsZ]f1q`<'ffj9+*%-kpA'k/;<6*U;*+ta"?#Q5m/TD3c<\p;\#&hap]@ul%9(V[l6eNo4Xjr3K]`V3Q&6HLL%hDri[jUKPbouPmk-bFd@/Cb'W6cO>3SY+a;s6/UH9.huXnZWuo&ShOY>Ld'Ndq?D0gi;Y.[(hft8A;JMr^IDI5_fm99g<3^bD+98%g&FW8Fl[km$3M1o&'dXg730p[-7C/RZLtb6,87AG-,d9-J)E3D0dDd];2<OU;*7r9Rj,^>?;=&daN]X"Ztji*DR(!m+.8O)S",h_%g.-$%CFA(LD<#<V.!BBOI.S8pn"!mmhWjdk],e)khLk&3-@nA#qK]Bc+:/Yo/YW_cjg:5VS:C9rICh`g)MqD<%mQcro')<qg[F'g%O)C\2LIfo1bD6t*HAQ/gXMBCBF=4'p[4,nYhd5l:AaBmk)gr6K_`TeJZ,/X"`'87ajTLF\ABT<\,G7)K"KD^aIKtf0k$NqHVhB]n%*IaW=gE^VJBl6jk__UZ#$&P(kXpa-qSHUsm=c[9rmaFc-A+GidH1^>j'O5\gC=QA&J2K'Ra7MeVoiec\*Xk[3e2d[bP!YaKZc-kC%EL&upg^uLh&!9nVAsp@V;4UO\!mK(=Nd1i(2ksBYZf#RUrbAf&7GD#[boY1^S]40bD6e3tV4cah]^rKu'Y%-FA`o(DEVin@@mIMY%I-OSn`+2fd8Z;crB\E+@-9=FSo9@)I?HkjV+;kA)9d^hD,>[(L@g#/=mf?+9or(g\,nNW8C8YS.rNplrE^iODca,WL'=6N1f$10"%M/HKcqqQE487=QOJp)>*Wc2p=<Jq=)'VWNieCRB1p\$0bUgb^Vf^@p!`a=n7Fg3*Z0.tIUjMe"/HTfRhhmLW$rpo/o[J2B0n!J$i%f_/nQ1DK6NPu.DPq&g4Y-*m&A./Ne3`Iq,;?<*1UCAU1el;L'(k_1dR"t+pqnQX[0HejhU=ZMt#8@K\L'!LD7k(bM;fiqnbV,?IN%GH.3+lh9Wrs*A^:Vguauj]Lb;@HfDPT6iQ?mAG.9jm-46DD*m&)F3Q)[]odX?8*lmUY(a,$.5$>+:@lA_L(BW.!PB4I8euP.:5Q^%NsGWt1]VQO@LnU=:os5'-PWNfa\^u3pD2JL&45p5YNo"/J$38/,(.k(pa,p^MsIpG3RWj,D1CZjet>=mBrrecm48uD^[RYSWBms:%m4Ril_dfMhe5u*s4D((8g]#N"p.._'=0uQLCpjtjPP6[R&L\uL=MpgJm&9n^@=9dX+(n*KSP!R\FTe[Cl!@\=ga[a?5J;GN\Q$0=%Wr?2jiE>0kC2'Njl%a>h9)"ZVDlF!)9".-JKB:kbF'GJ;$a',3HYmDjn9F.rBl(,QCq3N6?=(?o3)uM"<ULr^E^"mU[5bR:WVi#e%l,]@W:6c1JpY*>sV5oc"?a<[h[HQ/lKhA1kmnD[1Y8aH[rJ'B5\p!X.XgL+[9$c,?Cjdf-Dc<9]a!rZKag[G@=!.<8`EP[ek]j9\%:WbA:PAm\3[sr(l<9IdiD>I5a>^!0Tepku&GKuJFQI_CPV+2n.Pn'+,q/RVEf%0e*W?XSd=/n[WA"0Ti;o_Lsb#QtmBctXolHr&W%V:,!V=O!kX/sY;.#j(LI[<&10Q0gh]osjO;j4%,'Efn%XD<YdZPl.>BQ@=:L/V@Xa3`t-p&$XK);CSu,X*4N>9u\Y^Rd&KU4[(iR%dOW",6u4I"W6++QF/@#H*]Wu*I?@sgns(7INO$V![B*l7B<B1fCSaPC?bJG"'R5S?p+[n!*WI$<=*c,V+.(0_+id3Y&"3a+Pm5*,%-gBquQaT'nKj3M=F0>-pZ$]i,=l4>&o_*QW^ab%eYuZ2jBtX)n.QnAm,^/c3Q'PlDp9OXK;l.ho&+Ssuf=$,[>p&68.fGbNSuStK%k=SNgRbo(Cdl=<`&@T(@q>'Ht[F/r&2tGp.l&"n53\EHn)@45_]b-V!L)1(iD=.'n'?b]uDfX>cBO]\A8Z%bRQ\H7@9XE+gaTV\q%78:n\f!FbbYNO?i*`T`,\'HlMh>=]gl*n*=X#0bR\F`NGQ1F\/!NS$g7KIKXPYN;N=D_MP'V6Y1RAM[FPIFNf9%$=U,GhoH;Y>+5%*n+[u+=s^4'TT8hYS#X8Sj$V[WUWU0iMGr=rI(X:0P%4@,j!?9oh%.qP,qQCak51JmWRia<%IFo*$8Ak%*ebIm#pU-f??3cCY0+g%)kApS\"hK8>]9B/)0tS^&qrWXUGgoap44)VRP&ME]-qNeQ0;GBQ>I8s@9Y_JP9odK>eiSj$HJLFMVHmUE*PV"41urRs%j8%69hbn%V+\[.mGQF[m>Gp`p`@#ZI>eP8\'#qc@Lhjj_Y)bW`9jZVgk:,&S_n==K`3BadGI",jF-"\-F?M)gBX/Kg=kpa@b:#7Z1)6lb;m6^%'RMqWI\]U?\'jHV_fFn]mHp80FSE$-o(H]cGku`I)\a6@Y6iN6S$Lf'4lI^cU:Ipbl&3[V,F,sM;61ZJ[9)V2V=`NJQsY7o]=klj%O"Q_.>q&h?MPo?0e"q.L.c,XqXZF3sT0(Yo>Jg^/\'j1sZkbeeeL:^29P!&W4r6iZn*SK2<nW6Q^(o@"%_nOk.aaln/a;;I]sU]g%q@q]<CgV4Z$]4OLAK\0]&;djEMq"q?q<m1*9!=fQ?C3On8j=8?-dtbu/Gf<N0arft)OcnYqr1!=rjql$g.F]#:bLgm[6c%/3f65>%X.Cq+?c+J67],iu2)!-g`#PVnc:tM8aNsa_PAFk@Crj4#0m>mm^2KG5pN!:Er>()!\5WN>BB.bkXSYZ=g@fg/0Qt`:3+7f3&oF.<%X+%4,[mFB`8sT98pI^dpoos6g6MWZl@@?lc[Xqt9ei]qC<VkuXBdKHmQ.B#<5p'Uep'2PAJQ\sg,Hu4_H+[ij>%q-\]+j3S<N]A)%V>\fBR'b*7==m$Nj>N>s_3tM]iMUanb5J*;dQlGOi3q]M.Bsmu.n.XTmT+%S=@peTKfT.lcFm-*7pO/oqT'&F'\[#qp0t+)QT*oM%p#MIbk8QVVD3B9_m(;@YINJB<W'nsG4t8.[j#$@M)&=;QFNYo5eCP`L3ql]/o0iVR_Sr0!)tA8ar'lX7+-4(6YPX*$<o*=(ej0k6%SF:=XI'nmrTe:i&a*WfMqEm+[-6Lm25Bm@cioYhr!1tH=Nb+BqW:+\,(OMF:F*Lq!lQ=Y=:>`MUkTKJ,;(Oj>.U7$hhZ]ae;[Vh4%nWPT%%b:@aEQhSd**BEVd.AOa_YM\oUDUu]@)uX4J=r]:bR#^S'8I9_;S3^A+$)Qa^ZIl'M^S<+C7.b;ntEORf]8([3tJm10+^$G%83SY3H][qCB\=bsqX8"&DP0blTaRAt``h"P45#<i^ADh)7d;545+fda!#G=+Hb^0(lc`\GmnLc(N3E!oR;eJ]/hYsU:O+>!1F=t)%bj:Q1Hn]9MPup2-kXfs<7*g:oB;r[_rOD&G4Gkc);8QpE3"RFZ(=<e$-!]\.]DMBM2Ccc:+gRYdkd2R0<sRHEIboh7`4"F!UkXpt%drr^*j6<&Qc!o>8`3KnO$]Xc=l:s"DeT7U-jh,GG'fV%*SmS=rEYbFr-)!'gr\7E**$bs^NcgADSb]p=Zte(?/_sB"0s^"*2A9M*%gh1>p0t^*BSAT>%[;R%9]aal@EraasqI![LhUo>bPCE<JGFkQ>/b,BMmD,JM?Ueh(l^bsgW>'>\MeZC@)Wd$M\hao[3tso$jJ`f>%HmD)VXAcN\2raXhNY7CSb]VdGQA,'"o$O:rB,=<HQrB?=(>l1`CTL1CZ[HaplW<^DX7!b9GFOtIk_uTm.s@n,SX,*)lF29/'sY?U%[QhJ!j=p;B[Ep1.D8/MeTHrV@ZpV=5d_s1e9)#G>];!6T/eIa.KAS2NMT)lFs)Bg)1.e=3UAom9p#UpZ,+Lb#Ycl'K&%p7%pArK!%ThLH4\L*?PhUd54/Vmk:X_pmk]l-:[(.L$J7%4Z>-%9S$_[La<faLq2J+l'm;*3q=r.*,6^6:;8XO'"(d/1=6ZgT?`GQli!=+CL'%0.gj:mc,5.d56T`j(9&n)gQ#dka9c;WqH1`c4jmJV5[\QWUl;Fm7)&1MbPTZN#+_7o]!o+@>I`T*^aLj'_$g4ACE,CU</'sDm9_-%NP+f)H&<O.%+osjb;(>9R`r`FfZ3X%,R@;lTagdE*Inj&QMahBima']#+^jf%c\fug]kjOJ[a>FQj0PKnr*Xc+tXu8_86>jf)ZNb%54*dMp'kMI5"NuD0CDBaFG5SNN%n&`nFc0<MF2AHs&EA.;gh7ra^A:DDMF419b%q7jl\;3r(0tk4GYl>&9g!Y:aQ:LVB"S2@^.):%-'I9j]R>SKL*,D-<qf#NP.\**[,f7pios*L+*uRb'4%o0\T1cINe0hDP0#=ZBU[!O,hi.$"*[FPR_3uoIH&kl@9Q5\<4$#L]RHJ?%W9'=gVb+.])J#I=h>BHfYe-6>=$.I*-2J%!+!cb*ak(/A"YTeC6Vi1@ccL"/ME1%\2>.DrS.BJ:[(L`!G'>8Gn,Ybr1f1`,1lotA%oF&K*%"$ti5nc.4+5*PX:/dU),4$=Q2<!6.bO3Vue=4r$q7Lpi-9l!hRGJkl.XB)rn$tB5Ej@L!"7IZ0$@j?VgBG7eg_XC8':f5.%!nO?r7@-I.==:\:o8lD-`O>87h&=eV]Z)PB_QO$:7I9I1WD$F6a`geo=J)O^\".+ml`-mjIh`$+o=$c+>6A:EIk(MgC@F6'.LmBE%QV@,6<U@,,`#D=a0:_]\Yb>jl"AWbVXbo2+d:Ml*E"^XGH^o$0"tVdT,\gU,N(3K*&W=YSGJ13q"osA+NFeBqGo6CFD@eI^73Aur%4r5LH#q2XI<'N[Cn["TWU4MR'7VrbIdPe\c9/J",akb2c,hhY<C@uZe]H,X8M&,#[R[6FSmEQs(N)A7FI*6SlI9_SPPXJH1rUJ\S%^9Fm>/dNF]11W-uSFDngm?PIYg!"b[l/f5jgGX<?U`0S$B`n8Y2#*)V=O?uo@EMG;0m$&uW1_DADVrqIBmr+[c^q0=]K1!J6iJpK%]3A>[90D^mM:l)\Xkm:'\ur^jYaKZ!=9eAFO4_mN,sI6=K"YdPeDr)f-Go;Rg:K\&[LbFiDLnHWg^Ir`b54RdPP3&-W8qHh#o)#Y%I+<<kX=dL^FM.+L@<Li0f0&oCaeV/R>WB@7LGkH*D\gfc?"ZM)2N<1Sjb$!0oBZ/>if^m/=ff2VZB/2ti:p/U-Y'K5*CL$jDb$@4%]fO%CrQ^/SF!4-mE@EX:CrjqV)j.XI0#UpO,#_YW0&)KqJB6ctBggFTDqR7l[UH]1!e?X$MO0$]\oR)Hq?FsV4MGR29L`F]Nc'T<%e(FBLC[FEmoMdsk#eO8.d$M6@/QEV'Hq-#=GL)P8m;t7Ngc5Ef^59bN2DIf!]DI7u=rQ-U1"i2c3\fH;)/1-Rf:;5V_!KP#&O#O>%.O=+EmC#GkN`1iZ@A[2@6"&.rYp[NYQWC"]0k)1e=ZLEtn\J+2/qa+>i3iA]k6MoipuN$cT<9ZnKY^)ij;pN:54O#fnr"_Sl[;%E%Ai]aiZu2ot`T?rp<7Y+DT$,_Ik9[#3\j1Kp0m)7aFOl8Afjj5TSe6&mP8=fuk>J9#60B"83,K(pG6AqE(7[%4cF$O_6-!\fF2cLO%8'peRK(Hq-Gt65,6jla)6g#IUVsdHQ4,2$B+,L\<5RcK$^pQSW)4&7S0m"0ioiM>;Eq7-c3pVN2O0CRPXY-c'i8#W/ISGldPG]4Y%R^@)3V!BO;b&B)?fRt,$_`ej<g978m^o++)Hu5msjR-f2O%&AhNS3Q,MmBV-MWXRlShmo>K#)j%a0Vl;GlX>@&'J>WM#B(PEmAn+%>Zm9JfB84Y0A^-3N[QnX5#1ZRH(a4811uO+RM7UA:Y%XpCq`9GS\l*BW6Q@lDV)!5KZ>&kK9W6W)nS!;:SF3*?Nj1$\a6G8#Q+b;%=a*2-m2/5d`aH9$4iS?*k3cle=@n^.h;!/P#n%5:=or+p2M:LrksR<16!9p"pdeh#^oUbEG2B$tbtI0Z.\9?]^Ib3"N*[\[?%PbN%9/#^;.&RA+/aGTs`RsnJK9VlEWU"%hXtt":+_nT.X.,o:A1@$O1mEj]=01[%O."6=$I%"alu?FdiPOULSjsIf_#)r#=0XFI3Q:Nj%o1gf[U`-C%0G@E"]*H(0[0Q]tdNM$-^&KGJJbL8,2rS/!WT*\h*m?($J`!#Y^a93:9Yjl@p,.c=J5(j/R>tbEWu!QgbeDtaN^h1_%;9\>#V$B[t2EH9QgN7QCIE\$1]C-cIb7A_\ajG#e+^WFu_ARkmi&F1iP0kjV*8M_65)_YBigX?B%<j1[DF8Vk"0aiNjHbWFFp>g:%UJ]*-Q)R+3B'H"oPn=Ora#1ePic#'1kRg1bjRDPDE$Y^gP1I$B=)rP"0%_;c]0QIeH0)H!5>pk&ULKi"+%%+qT?,,.F\_&,E&<i9%VDK_ec7X7p,GJFBN9U#?Y62NaSl*Tu*s4R+c:oZ)AnTja1cq8Jh)dM1+T>n`9";1BjN';6PW8R%?s8VM(J7_GRQ-4Nd)j$m`bTe0%T:e.SPjE%,C_(C^?P8O/#`h[VOEb<ugSH7#Cd_<OG\$"VT=<Km34DD4g&(0S\NM^p1aV.q]>K+8g2%fJ>I<>IBPrk>L8!;0#<PGO%:5mMgdNdf5kK!A1M;^J/JocH#AACq%A7)qo;WGo?mt`F9Y5?6;.*G,0GHlM7,]6j<BI?.i/FVG+ee[8p3HEq9CX1#8_U,#5DNa&B%QQrDl_ku7cN,a"#>8Ng("Xh=?9tb7aCkjL[e[]TYR3JeoTB"]OKdUdM_;IBK6`Tq/bB-C\Xa2*7fBh8C+`.9:Y_eCK`H>\=K&Yb!%ZO#^I;s,/32tcuV1W@7kmt/Q8\4+HUc+HDdWd$La*NBL+LKdT^i.PBjj!TGi#'%m"&'+-n1(:*pFF<5?0-8D^m\h0=[tln#4s"UY%.00g6LC6(2`%<qic>JQN/aHAR]*jFr`sHWMX*sGn"Aj:#iM'QQfFnS,**76Zh4;9O]CN49jW1CDj*N07A2q%3U*4rdn.I]]j*=gE%Ld";dbe1/p_8b/GG1Zm];5/?.!UR2N)<Vg^@9EB:ZYgk>V4Rp0!nu7,h,`F+,8Ln(,quO>]N^TOISCY>%W]d9C\$2H]f:X&?LY5-%_,n_9,#/4eE$c#]+4_rn1Z'lCT]h#IT!N;?*09<&a4%D#[oqUK*AKA71c2gGg3QpI[*\6Y,&%]#G+*)@)\K("V+^O_#+l%rZ,haN%+,c(KrNV07e=XJk&s4Xr,o.,U$?-anOc",?QbNf;&J:uZ^#nc#BRBB?_nJ;S+<H<8:;+aT_uoCTlS*_NcTM\RTl?$4CuM(,!=)hU%nY'nsrNc2p\=*;]<f0V-,4]YRc4^Q*SO%A\3Rc7g$9.*Ip`lJONrCb_g[8JKoFO]^'B/o6aS5B;'%<EXDpcVFNY\5^5W&];CW2?)%d>%fAJIVP\SGAqIm?$;+(Dg113X2kb=MjShSJO_?b%]!SCRH0tCh59s%5+56:hd[(9b0p/c]aPU*9uSQ6'#9RAFOL+Wt=Jfa*:VZ%95+9;;[gX'QTkO[]Fk)l'S!)hLXrYMC&E+63=DP!d>KKMm_1LRFL9m&k#"$!:=`g^Lf4:U+KWU3SYlU^b*KQD_:hMJ^HC$blkXkN%\bpW-3fF"0MQg;75:9\d-.cnD<17.%KLLkjfKFQb]7j5Y9(>erZVl-$(5Y(^?8u/n>Nj0R"RKUdP,m(Jm"SS9gFBVda1(eQ^#p.4%G4-14p*$qH.[6S!]cug[hl5?h[n<\BPu`PI>G]pJpc]1S>q6B_>Ya1dOZ2^YdXtQS4hU_>*3]a$!;U3Eif36;nsq?kSFR8qJgKU.%flkFA`;\u^43UEif]FnWe/5]kQ?^>+TmHNp-Z?Q'Bs?d$D/pQ!AYZooUH3I0:X>nDb]E%#T(c+,p,uLF856alA`>la@_FDd-93H<%`m7VPls91r8T#G"h"f[P@\P$f1dB7!^582tH0jjdJtFAq,3RZDLO7o*>rL]OIJ1"sAgdGnHUcSgB;s.)J"6Q/,.o!J5CLq9pNl\M%JBlWm4&[ul/:NuNUZn<8!:#8BA2Kk'o3pd?VK;;7g;_;;U?S1Wl"5m%oSBAco#3]Y[%Ak;N['HBAt@3hRkL5U$'aTZ+YuR9br-eB%)boM&:8?.#$]Ls(o)3Y'rdpm/S7:`1mHp;kRa0%,Y2@%__EbFqdlI(R\Qa$Hd<+fWU5Ou-F,Hf85&Gb?BKA4I@j`3K,b!"M3Haob%c504<e:6L;9[+MNB*FR-c23EVVK:<?(EH65RppG-doet.Mkl_&+2t+<VK5p1EPK&/en@)l!-C`L,,=Cm@d3)?V+!l&3N\TL25N`0%dnR,S(DBO+]eZmlBY$e,b@741S;:TgisUdBF!:gto"Lc13i?(@\,5s_2ZPc@bQ-_m(L'R`R+!@H[_"PI#!VjJ(5=cg7D"rI^,e>J%T%_0-pXQfh(]NVTnRbueSQt0mT*Co$-?-^N?jfeMN-]Y;b)4WccunYLH`u2cX:%t5T`jrp+>q\gp-Ql4,DDV?nXrg,HBDpuQXh3b%Y@ufBX$q,D[tr&5=\nP2)7O1&??G?hB$GJ5"?YehT1V<%20WrIb?6I/S$?\oe24X*/mj0O$TL<HcuXiXFP#=D\7NZ99Zc0LGEY.H%jJ'7(,80>a`<d@:q:LDB;;:&u3thEKiM&D@MaoHS/A&@DpGl;F$]MFU*A(r_&i=G+YrkOjp0nm:kn[F:E=qcHpM^1`6BB<R4Ri=O%l$Vms%>6)s(j^#Xn/l!s3@`;2-8MAl`YU$"]O<<GDCB!?T%?BnE&Ns(H4RULB+=4eG=)D*aoq1;hq_*sk?l_V-kcDA2ie!QV\sk7%gPmodAH>FI!6=CbE8(1QiV:(?eHlT;fnFD-*J"pIGU0mgV"!GIFpcH#?nIRPSq4:VNQ>40m8mf7>*@,Nk&Djn!qW5r:#6J44SI<-%pEe%n\]^8&<uiYd::TcCEt@s2pl[8,3UEF4ZGbSm:lju`R4U2UAoTaHhCS4%_]/&0#/=[J[QE#.eaAQ\Z+8Bk!l]4^k;7/?5:(is%RJ4.)H7>EPT#<'2iirrSaajlLXRLi02*MElD/pbO*tS;I2r)gU9(tF8VB1JP2r)Z&DtT>Rgj):Oc8,mRpqjOIbM7&a`"VsY.<"'f%,3,Q5\VHmA%<pC5,TlP"1Ym$5Fl+_+EG#f`osrJeAl(QZ5:n.bb:@18b.q2#a\OI(^gCKO\2;ehkq)D1iI1Ke^W8p3_fDV8kDI'C%`LCF',N?a1!c*;<2EJD'@[#c\T*o9B@a]PG4hc>\F3Ts$jdA3BbV5pabr$=hFlPW9q=/7bB6="[A""C#F6=7U`+C`2@8)tV^.iS'%0i322\;)f@D1DE7/i^[`f1.+eqt;`oI9aX3k@D3NBNMq?V[?mRp:um('0Ts]knHJtOZH2RdmV1ED(r+0^(!W_^`m5mo69ki>K?0*%ofD2oFM@M&0iGUJ@rI!R*DM5%>?HjMgVEJqWi:-.6IO[Ql0=d\]j(!Fs4Ksrj7Aj:H'>"p-c`^u8eX19m=k.hEFfL)NdB,nXAA;;%j$CF5%9N05]gM0.A,ED`NplRT0,1H5%l(;l5be.=o!,W4G2B5.4oL]n1p&tR_gQu]>!g\'_CS7tR`e-D9<55cE;e1"dQIjh[O$?,%=Ce`)*]EcIop#=YYA<R?7+Y%>m$HU*Y?]eM?="?W?YXJDf"LK[b?nD"(Y4DP_=D5k#s`k(hp/Ej[b4P_4C$B!#VQ_n!cQi^SE%NV%1r171a'-&pfp85cK(-9h6`Q2M,N8obH_m#&l`Fs!CQ1mIe#?6XpMDFFoErJt??<6U5IfAQ\Q0X&HV.Q741h0>L1VPnId%jb/NhP;%QJQi-pH327>k>5qb4P8.kL/2>7#:-+c?K+AM'4W=F#KlDnAn#OAEpPi\1<X:mK1M#k^79;jApp.>KhJ2SFgrtf(iM&k$je;+n<&W%cXCUS.nYAs#?"K;X`=qg.M!;:1J?-]&es1-lbeqY=S1HRjk=kNRotVIDQWI8!*cqcqf@DlHLK3;W"ea=:\I5\WS;((N'IaumRd-l%FZ7$-b;ru-'7Hn:D!S5O*?e>KIcBTg&j:-Wd.&"2)f$0i%YnIVQY_DpXEUP+VE0ag:$99P&%si&^WnDro/>[mKL6jIetn)%o%YVJ%\((3HO-LK#$oGs(\h$u[ENV0U!h@N/amU7h.)6,oG#$o-;OSq=Cm*=Ho%^)'b<KUp1a7s`mCZ$*-LnW2#u`E/b!piDQi*BYlm!"S%\ocq\fG3iBR!a=QPuq'O^E8f5Q!uYTb'1:,^K/AB@.^@X3*P;V-dBp.!)48#B"uZ$Nbd=RNoqD+(h<4sbrH"k9%Nh">B<$l^kXgc%6&Bf0dadX96NO=[hCXtUgSO$E$979Bj%92^Y.T6sq\''SHo".Ia'EEYJPEdGB.UXF$eQ_/AK$G#N90Te8DD;KHk`&pT?]8-o*@l+%$Q"!9%OoA/N<8_k"6f=r'%[+<J#9.@mW:ZjJ::u.mJc22U&b#5?86uc$&:<)!W%cV`."+;$BSa4:CGX_%sHYT5ef%(cnBH.!W%cV%%/;$%cXU?ff*HI;H,_6tB9^DG!4hdF)s:6Ri_htT2mU\P.3E?KT=gE7mT'$<Qh#FZaL8$?q(QDkJqC:Y9DJYJENO3MQh&hCE.@"J%51f[o(O@O&O8CHj\s/9M.NhUufC?IC8MhkQf]-#I\^-#Yn+E//P0;arIX]RsRf?\Yf!GUN%HVo>hc0K;B"lmCf&mE#)p7DO5B!`e%UEr+A]m`^>jF&r9/GK!8k2\tdlfYr;`:.$VH`s&S,Zf5R:W]ekmsV6D+?YWNfDT#?n"s7VYFPPt5G#lQ\,jPD?9dl_NUK]7m9[Qt%DW5U-Rm"L6kN*e'B0jjcYFkR2?b4fIpUu#^'A_IZf!:*YrOgt'e!r\bFg%FHWU$o!HBrpV`hGIE\,+?l+()tT&>!h_TC7.*]PmII%d!^:]D^YY$E;X(2i38k`Mb'E7?GCJ[PJ>Y/]:EB5Hi:Tqp#FBbRQ<Rmg8?V4#PbiFNdL`;DtPnHg":7,j1Tou)m3=3l?r@&RIOLA%D76$W2>b(9h?64f>K"4(hRE>5k!$LNX2BDTj.#KO%sB&Pr,E88\,&f8c/F,TTD&u'o5<=In+H:d]S5^_>/7h#/p"OOX5EhPBbLQC%#m'^a`(AoX'CYVc?>m:-`AtuPIMQ[Z*O.`eI=+t2dVum\DskMbpfm^Z^5pU,/Nr(bL@KWhVRhY'/0]5^Hi<_V!TUZc&YIJQme&A&%V4;JsRlW$9-8ii+a(Dj5cQ+[GWolLPah65DhRHX:p\O]tO)Nm%rOd(AS+8bW)5D/QdW4\\^H$o)q-3gA>3<KLD`m0=^X^ZtPd>)m%p%.%sAY$eP^XpeYUQa4i3r?U>:9eKVD"g%.c;2ZJI]qYQIS231-J[qMhl`L4?9_A-3Ss$[lg@(9]ma9-_;,)HkIl?$MBT62(N?RM%T,DqRHi5LT*4sbIY)ghRYFkQ<@)Foen%F2L-oUP-I]Oof(3&'(CT"erc[0^%LuMZI5V/>t)e1CX,gBUbe)uFi*?V_2V;?,K;T,hU%SL\V:4GL3:`d:qBU4o(_3fgPr)sEg`!ZUhKQWL9+c]BDG^^Pdo/p.L^4Uk56Z'Ro\j2H0oRsV-nemV=trj\-BG*\"2'?3u<a0*ah%rD<9%Cc-m+T[;Earb!XirKW:XmekLB>FUuRZ0UOr="'?J;F9UuYp#?m/rE!+gH66$(Ks-b4udrk$$4mNrt*IZNDJNu7+R%WKBB:T%1\c>6DM;Ll\:*3T#sT'3&`Fm^',@+qQHk0HkIYrsj\d-,YO^M<n9P_XkkFtN<.FDD]@e9_S_O/-,o[`'AQDYO\/\s^Uu>LO=l2Hu%5LnWbDP%t66L1]2]CV<SAh+re^T&9VIX['=QF,.UA@Y\J+"5k.g"Y+aEGOBdZj_rR4lu=$F9rD'bE]97_no$@%Vb*3+t^iHLu'd1%^2u'EE73cC,(He8=$Z'F#]A^/Lp`oV0h/p2f<+3a[cK=XF)<Es1u?3[jL%.ES3P.(jnIK&:cUUS&!ij:D]$#'dd,Z`<JkX+:EP9i%q'C\KM&/MC2Y06fq*TN/X:_q$-gU8)[4kd[c2=\Ke(F$)dp]a)MJet7JT*$">._b@gL=imQq`:odCh\:3t0(\Q;01$p(Um#L(ZMW%*f?TFm>'8B/ON13^TomrQU`I9V&7A"'lgo0DAJ\kP_cGfg"SV!ouVG=n!6Vp8JZb\ou-XG`t&$YrC+qV+n`O5,c0T;XZ[AO82<UT%;(+p+?XJe8.'Xkjf6+g2rJKQD9RkiR,Y0Na#sI6Ld6W9s(m\po^GI+1*XK<"pNVc]qXNSPUqfgU&`(PsfaGLt452LX7<PH2*=*Uf%$46Dub!4\J)D;RulilTZ+$&B#R:s<ZL(4U#KN)N0SY`T[Z1fc&3;3dGf&9R<P!JL23_X*L@fU.%.Qn6T7e#D8,`hNa9aDfdpDE65%U*;p-3K@7n6-!m(NEB$hKisM7a&rsEB@+'LB.<I(a2u7-O#I4.3piHeq4jH@\b_VclnslSH#";T`h7oo>=dQl1U=[!>$do_dgq:E%Wk,ULn^1LO.;tK902?%UJQfUri!ic*H8T<lA'GRQA+0QY)'KnrPsC9LAhUN-V7a:g\1SiPorBO8<HfYG?IG-T.9;C_8*.hk_1<;;%]e&L9F^J.mVH8':H94bBM;geM9EuVW;EERIh$N)qnNdk<4c35%9t`\_W*LB6cs(Egg%\QK#RJ+Z^Foo3"I['anLgZ)rdGQ??dF\c%hI-=FhU/V(Y05lp+A?-*LZFfm9D%aFH9M'=->g$5Zitp''Y'GF1Stk*'/Lb>:s`=`bSL1=`/e1RCZ<*TB?ju+IS4To'cS4A9c'0&%N--k:QKr)"_k_ah:5D>,':tDJGDN7#!?pq2-rii[;7IlKA44L]T"#hlgSjkuFU96EV5.S[0a;Z.43i-o,n-^uOBP2L)K\JdG5-mY%g:1<]3P/ZarYQ'#SeT)5!g5j+TW%q/3YL+R&nZbQ,9iGFl]20[0n(*plI@+/jZncBVi$76>lc^IPJ#Dm^0CEa;Pu&m<Xq<M&;FYl%;:7HmpBZGkb4/A-Ddd31LAcIN,9d5bFq<;..4;'5=kg[gje!cPOU];Bj#c[PURR`LC&:^dr4YkIX.cXO[*Nd`l>?DMAmFYJ18`rL%DMbPUZ*l_Bagiu4N"7?EZ^;U,hUiDYhZq*`^G23ldqY;'nNbC5rn*Q0>Pj3&gj<2LooFu..?r^;mA%M^N]U4N]sFn,Sh<pcb&^F]%X^ojhr$55E3#?5=UM'I1JbhRU>kAU5@Vhl6ke"@.(<+F;o"cD.g<\d5o@^9c=P3cs<D(AB76JX!NOKkSPo03CRmV0[.6s^g*sKD%%li7[W?''f-l!q*)ZGLsa]G1]F0D1Dg7;_[]=(Q4jQsm0@mdFJ"!e3CO!F@:%h6#m-:[?jY.B:PLqH@2b.^!E8U09S-N0j9lUI++b%-TrR4g^gLeL/%-(&HbhYR=ZEqiVE#P=A'1q;pgf8Ob#lh(F:eBW#+t8V[T8t#<d4)JkTpZ*@9`#UAOeS]g5ALmAj,jW/!IRIXetA%;(KHol1_ZIW9]+IQ3u5^$L9p>L0&_o(][m[<kfr4(qlL?!nB4kU0"h-5"LIaL`gE*mJF>p5YH_KbMag.QRMUk492cn[eQ(XWdO<W%5[7.t\u>rl+X3+F_<%"@.GE'[E7Ti\=SiYKVMXSPeR.Wgg@nJRk)VG9GcZ"6[u\D6c:rG':;U%m?GY4">WH*o\IpFAo3kJm,ql!T%h8^:D\<:X-kt*V!m7VU)HPB7'd?`G`k(r6LfNBXmLQXj2$[#AoC+AoJpQ(&o6uSIm$&XpE!Go]MoqYW71G#6P.)_(.O>;&c2=-Li%*PPX!\8C'3if]I4:M(jXK\++GTiZjP8r=4sG2k_K23&<C34L_8n<569kjckB_4C8[(*i[tRgATA73nT@Tt5S_+T]+mM&L7r3Vs5s%KTH0c5#3BhMMD;)qt&2[P6h%]aec0[++,4"?4R5'(Ws[aZYuB?dR`GU:cgaYj+B4ZWn5ms6dCVn!2udU%"dM/0+b8dk]RYd#19Lp%aAP&hI]r9,qdg0=3=L"iB(-38!8L&?-OA`,p"9`T+:tu6!4e;`V]#,9+"Ktr5E()h,()C6=)p*;K]gNm7lLUeEMWg=TpRJEN%\h/%0G0m0Gn>FO,JnN`2unBn>HtDb@!q4q)nR'H*<X*gNMRgE_X9TB#?+'=E$_m1'*R>g%oR^JH+^Kup5<!jk*]NrCX+><5,!@p^Ml72%MrsWO@ihb0niSf^ALW[/h0@04:l-qKF(,]Ea1RjLPC6@c8CYdl1GsgTQn+e)i3B4"O86f3f8L\Q/,m3.5tHW@.u8>_P)l)pn*D/j%^75c?l\mq6-.[@ESB);&1\/+9?VVAAla+pY`*(L_C8>t?"ReO@36P`Qqt/EbW$K-l09(7cP[`,6:!&,GlEIDfhT@KKl3sjK*>0M0%1U?L&(j*P=@(\lkmc)1@9:(cs>F[;okpT'4KdhDm9P0deapbF=k\7.i4?(2KB37a:'2;(q:Kd\bKt)b6#(#J@K.KoBGAe-fCuRFq%X2FOo7cimnm47):/n_HJbK+PN;#I/=%3Mt_+Q/Y)#`%!*LSl-2kh<i+@t?U%;kMkk4jQK/$kN&>SA-?-Z$g.eK&c3"\oH)!0LM1t%@^ZFk%ro;PpjfNP#@k$ai>b\Lj%fu;VRL!IOf"\G0,c?&[*ACOH(U=_o2uqZQ8u)8DU[$DI\56@<-)3q'e?tWN6P-a&-^56%?U-F%.+8ILQ)l+AFt7(1D!!Bh:P],$p.F)S+5t5G>SLk\[k$n8#mtZ@!l)+'V.ej=7G4)Ph=B-3W`_@-agpE%LqUElC;0A$8U(j;>i#B7%N.0dN^=NWE[RuDUPmCN`dJ\lF_X_q+2;qSMQL5gTW[5IM/@?EA0]qPK\F65,]"S9R_t.'-PQ^A(lq&k*bH.4L^)ur!O6<^Z<!mK-%aZ'LqSfY^mZ'2qAVFdtbr"6Nh[`,`9C.Z^91`;iKa/N[`:]u75r1Mh^=ReUA18`VRPg-9cb+aRB;'L*!;WcJSYW'!]CjG!Jm!'7K%.ccn3bAqdp-mt+$=eo<)kt>g&/@"f@`c+*0l2p/:>@2fZjF=#*P71t20^e`uhIZhq5`Br1.<FY?*rE*M9Zl859$W@CL6t7?p(ut!%l=OZi$pBGKGScE"\E,kk4n#G&&Ko[sDHM^ojhY!aB!ZEY$[)-1X`q*Dc2\?V'JkBgl<RC5qH.q)]ZTh$>(pCp[SM'-#k&^LL$[J)%CCcJ+?EP,SAmD_2YAnD^-PDt&=rO7/r"]QZocKu->$mlW^;&Ytr;"c(l(%9p,fR#(27Z2OdO%$uFmgJBoW![pR^<F.Mt'tgZN7o`%M=FY9$*)m=V,"1JMH"ss*"ulc%u<i/r99iAYpEpZb`^?JhUiSo0.Rd.q7^W"%+isVI@lZsH>PjR?OkbD"U%<H<S0p.c>AkVRBO$s%*QLcr,@*E/a'(%p>H`j&D+Gn9jH\!<TtD;t4Tb-rmRY`&I@D#`;A9qf@[\"Eb\rGuLR0/-INWGQ5Eek]oYJ?j'YHEUS_P"VK\YBA%QC=);NNt8;c4_O9f?)]ur5sks8?m)(EE6Gli\3W(C]@KW-M@u%@B+(jidm_/F!2J)/Xd'r>>Q[DdTiNqCG)L@&fk2]K!DR]8N#&h%%e/De@U2kS??4:^'gWl%FBmD\6AY&\B<R?fI2T\<+Q*_=a]&_DPd4hL-U15Eii]kqNtSa\btt*A]MOaE*0K9,1gUJ655i+^.UD6p%<i1/u9>!r7\ProVYR*XW+G[![2U/)H(uhj%@$*,Y.NY1>gG&0!/+=`["uu:-:>U!`Kp9P650))<+k>@./',8M#kXnPG$`r7-]E,Z%<&%kKTYXnf2Y+#e+>Ltg`n*DL\t@lH>i?HZXNPWpq.I<\)cf^l(JLF,a_u"Q3)^<G4bM$Qp'qK(;$r$N?Y+R)7bAr''07G&J%LJk%?D(anIMmcmm`dQ_GCs61S0[o>]HdPe9Ok.JqNd**0.LDkh4(5d1$4HI/n[a62UXP=)hm(ll=O[I;n-*V%4Al>[ImR-/O#EfY@F#a%*/IDB><cs=duQN@2\<q!;<apJ<`*R^.B7P=ipPo[BiJ>>`D#.DoPL\BK/-k#(43th^2NPr3V[__7\/)_,n-W;a0N9%Y;T0,0\u/g%rHfh!?ot9>.4//n./?HBGMfk0qoq)VE>Z5.h]%+R9''G^3"f^NBKasYNj?4Ih4bSmYFI<*_DWZ)/\!)-$F]P(nT#p'4Uo:jdX"G7%"73>s.S7[jmp\r8V\4ugCa3O0d?s[=D51kogPFstnCW>0,A%h@?-n)@2I_saM+d[Y[aEd'_CQp(Ys2_;1!:sVp1#&(%CpSu6G?c:%,CZEeY^::<GF!f%YdR,ajfh;!nI7EBb.B7a]hmN0@q[@4Mp:X`f<T)1Mp:P(=mQYY?C\Yk<.4RNF1bWL:!#(SPV',!1_kEgB,8X=%@CXWbM=0^8-@N*i-a8b7f4EH5$3d^*Tr?Ib;^pMhOZcif\CN0\kXd0JfKuN,0(8IMGD#?AhO5]OmS's)7m2an1H^UW3\#Oq8.M,7%a?2$91Z'[[O#WLHr(\!_kb*f.V5;?HkTMEC8j@B-8TW]!1GI*gQHD[]D4q'?=$`Td3a]jc>R>gC%.[ub@fgl39K=a)kd5/^,J)I1%;gG*\-#S,V3X+0C3dRG^&gNEQac4u^]B1^QO2[lHckQt]mJVK`BD\g@)nW[6mRHIPip%X08J1?=Kr5bnR_X^t&hX9`6ksRHPF*1'%n&dK>,^Q\k=[TVNh"3Li_8b#W315_ELFNc<6QjKolBp"F.`VqEPYgp@3,(Ce)/m31QMPtFF5kqEm,$Mtn)-dJbrQ1OX!BI.MtNhb%mOaE%LHsWM"Gk\W!Q"^g-\S]OR1R5TF`19=B_9b;Rroq)U*nO(Z"NlmlH,?DA_0PNQi26c>3R'Xa,9!oiK'!\.T]:-P$#9j.O&H5%`/8eBd4$SuSHG,4P+q3#8&Ok+QVJYT5nUj4X8BFZU3sOD2<3[3)GM?amP>`[Gd(5;hXP&r],51\bj9Ql>;pT.3s^m!eE>iPE?ShA%U$G0C*Z',tmfM+#UsNj.HXp><,53?8FPY#PeL2"&o"HAll&7c9)=cnaS;(Yo80t8bmG,`D]X/[Aml4".lWYaR;.6+kn'uQD6q"Xh%W)qTmVi.GR0@m2ijO;'efS*(Pq-:r5=r5mH%W:"AX.LM*G/"A2A^`'1p8-bT84)S5dm6#DidN4R^fipJAKmb>2qC:EpI#`:^S"[d%T8rQJ`b?GH2W55RcgH%']6&2.N9N$G`:7;X]*/+lj2L/(TdttXF1gkS=t%C.QhqGV(Rs05SCHifGaVu;g2O]4/Jbf'Y$(8lXU9i%%gNtVAL5PR^?>OKqWa.12nR?ROQlc%A3aO@TQeN"Ag>qODOcRjL,48%MrGopCGYpb9=3FM6;*/f=]MRjW#d<F1pdQ:c=EWk>PBXZU%V2nO!qr`C4Q7b;Ek]j@H/!E*/DN:'Q:q2]\H$`m8UZoCareU<&q-M]V2e-VOF*h8]mj/NOYkKI0Zn>'K$(0-;'(bh20].fV\T78T%^q:94T?[7rYUplh]jKKs!0\3WonCrL\%T:hH3o9)SG.a5?C1thMX,Q#0+o*m"4:^'&bCg;r=aJ#aX]q#(`Sl;iGeRgU-'j"Rcg#K%'J=)Kg6N*tOpdP<MH%4s$)Snf.+T$uD5k&BJLC//CuU;EC^$e[$A.R`0O$,02s4L5@N=UddlYGS&f\^aHK?5LAB_HW5H;e$DpO#:%OA=\LM@<dqqD0Wm9TcU$jDjJ'B3/V!IEVOD+VO<pXe]qeagNt<F`a'e`\Y5:CWfp1)9`nW/(6+^;=\XrJpR%^I#(BfG(F[f$',Ca%?8oFcI?UZo<`B$+.u>7.oT-JEUuh$q_kO7YHJHnq<`3CMiIYKdQCqJ"0+Lk%F)QU)moi;@h#Ls@rpiE@[:r=Ya@B=2k0@sD.ZPQ/%/R.R>14"n#?m+iKh6tu7K_@Q[\oapBO:?A$)qVROJ`M=;!mu+0j!:W'S"AKCLU[<VoZlXaPtBd)5L@lk4e1'O91"-1T&00:Z1@Ft%,JD7qZiAQaI-<8<E69A0XJ\=&_Bl>dQRKIDF>*#6>cblA]6Ecj$5>,_j#5OZc0h]4I).q^`M]!^.U:+T$)da6ru;>$s8LjS>7tO\%<*?GYn_2+N=2O<`AsP+ik<lk7Gsk.g76%@gn,L-H@E>JK4;)8(nt+d%1Yf\)%Z$`?4;(CG&+Y1FVmO*ToEnK<jgcY?Cks%C]sPM#%!Yl,Dg`O"<[s7+c(s>c4`(K#o3AQ+e.15P'a1d0VkPrtZ(j=O?F%QMgmpueEZI@pfH"LN.V>W1]VWWN4D;VDF:%em'?cgWFFj.#Y%UDLDb6`\dJQIE4^iEC7"Z&hXW4ZR3l9JJak(_s`sE=/!Ei=>7m"1$SL=PVSWV<<gij2E'$3:D^ZoPL1JAiV/1H5\s8))%#\UB12U%.iV?#qf+Jpp0uh!Hs!_#AlkhQNk]of=49OjZ#Mg/j\-d\DuCrpb)Jg_'(KVRJ]K-Mn*)n3q*Dk/W2"LkcO["q8U<WDos^N"$5bQN%_FGUgmjM9TnJuqW,-Z;IWh2:qIh8LsJ[f2"/LFsM]\.Oi^)&u^jYL2n120@V[inC]G;9/gb7lnR4e_@#GoY+hi*aF9(-XNE^"db5%o7NXiQ[`7iVOS"UB[\s&lrl:bl':%dCA-cDEL]+`O'9_FQc+-/_jE#Fl*'C#/Np:uSKp^Y&D;")9XAk,Id*Eup7]nt<sd\Rs1V(!%0GD]"ObC8\/AWFgpg'/p"8]M0,elPX_k$@kl>='FQ35Vu@J'm#?@O-=:=FhREEelWd,r,?G`q^G')h6%U&bi,YFc"('7gFq_[[^*%k"(1][fRSjGht@8reU3*Xr7P4_6A)EV0QE%pQ)FsQR>Ud2r+4_HJPXLX%2LPO`uLu:Ic;B3Utng.`Tb"8l4E*E1/m]&r?g5N6&AN%Y94\&jOqi:[.n_7p793JrTKZ>gN0Be\6%p3UicPXpO@>fRB.__Z`9l+ZY<9/.Z,\\;jX7[UOUj5IPa.&G[N=harQ;t9rHi"pD]+X%`o"[C[l.t[3lBlF0U97"*#rM>@\_MV2hH$q=D#R;feFL1II,$mWZbB*MXOa1H[kj3]39RumW\#$AlRXE`q'ssr-7qp<[`:jTS;Bt%9mH@-Sd`S-)cq:X@PO)Y:*dD+ic\cM*L[N'p;9qj[G9%)OG18?s!%acDnkDn^!jm4,AjZKh;A'k/9`2#gJ\(7K0[(FjmCiHN<m/d%j.25gG>4G]B`4n=SW#(=GG4g!Es[s.E>OKXW_;ITPFHfkj>jSnof3_'[WXuocG`RAelG.<Rt\nbH;BP*/)g-qk9`^)1nd^+Ir998%KXj,4O%kZ,GgU0<mQWBcZE:a6ofkAqo%V&FVDV#fi7L1`';rr;G]noB-VQn<F.4p$1L]PL_6-`!@O=cIm;eUMfobYVVZY\%Gie2;%.7DP8`=*$uLji7qB]C(Dc$h&^h7[tC1FmW'j05SS.M:_<b,`9rrjhKmk9GROa@YCV0Ge!FaBXS9MjV6XJqr$"k@<Cnl10A3[MO8<%HQOP-S=HTG3[`Ij)^ae`gl-0iLkS0c0i"'\OjtYQ\*;$S(`N6shG,E?9,N)YmVKoPP`Oi#<.6'$>E1sFAo@>NYMZn%jW*Yt_48h?%c9a6EP*!3e\!#r,N3Y5o%;3[9Sr%R9UM"2.resDg@Bnf`^K>n'B&K7l2pIrCnW_g>7CUt6LK!'`cF5&(ZONWkLj67:!td&bm$;,I%+O5dd0A?ur>[#k7XV_:_G1URYGm;-<V/eT?5R<>q2.Zl0GB]W75r9f%^CRP$>q<hl/,e6saK(ekBN5l/W%$,p-.!?\<)a<j2"bSP%,*R<"?ibB"EKp3?EhW@RF),B?oTM6,qZ=4&R!JZUT"+R6%`,MXdGT<RAg$I+&5:mI43./XA?1OHnSir<Bo6mUGjNUl"prAMUcJe`%iFq2DrbN-3%neX5OQj@i_'$Sj$:f^(_QPT,Yq/f>'+t9mcZU/*ds6YMLCH9c1mNqmI2Ju<"ORKF76J8J*1\k)8tI0"2@r%PfFDF<%k7(,l_?qFJ1`f3&p`0sopl%2:X]<ce]Zj!Y%Vsl7T%o:S4?*no*u3pL.a]18h3-\&+s-D3]"Q+,Hp&%4(W?4a-6@@3iKkeKPbiJZ%\Uq'D?jDhdd@K@"?m:f*:(**.`Dd+nZ'9N-o!BN-+/EElK8b4?#g!(/?=q)jYZ*V4=Rr<>=h^/]]Qp[C/%6g?^6gPpo4h:JO44Jh%4[C@UjRZ?6j0@9,I*+C#Qom826C>5"SC@juB5<5Y'b5o;lr_>m8)(b`I0+"D_4eW=aqau??0\X3fe4Ws+/abGENm^/d_&7"-(R#)%Ce"-`%EXZOj)i@&Ruo#5043FPcr[;LpBK+p9$AhMm.c?R]gat;NV!%;2*/=lp?k".!_V/&=E6P4Q;-YrZ^AAXo\3<c^,E5`*7D3[%2<L(Q%9qil<VI-unS->m[bmOdZF0A*gUkdY+/UQV8(6U1[^_;)iA^@.S1eq.f$,"&rl)qO]D4eO?J'.(TaN!Qp0KUTA%[ZqS?/,3%')[[E#'T"*l!$7bBUm:qqA;<aPV0+pDpRAl]6`ce7PhaN7-*EeKW-]0cj0YC9@>B!F91?*#Xk@&C\qc*;$U<PGSCT_=ZL*N!bM-Y%0qQuBN$XWRC0cNdE@q$'lp;]$V5`p*lu#bN*5>5d(>ltO$;RiIJT,qu7QJ_)T'?p!!$-Kt$5lo-4Ydi'.q:4@M"ikHre"\qWOT^&%A,ceqDQ3DM+;u1@MR>7rJR!$I8G]O;j"jsn01DopqCh(8cS,&Z0<gOE*qg0)6]u7MOBu,2!\O:)\tlR,fBD$<lhq(f\uOB,qNlcs%K490*hTWDjORij-poBdk.e!]A<Qn[$$b:c0?c=Z7s#GR/bk+q53Tedt2>BBtJ^$Fs(Qi#rSN=N9'F9I;jf1$Toe;$pP&G_)43,n/%NIF,$df0IF%mMjR:mA7O8QF_8`RNqW5_S2-MUC?:(a:W4>^ojleqVFeVqV.kgq]_tPN/-b@W3P_o=dKHc!U[Y&RHS=]Sb^KeI,d[%&eKXTpilHSpc&?Y4p$=r!$qPuLI:k,"\J_#.`%>,j-(%U6ajVM5[$in1MT`%jeSnjl!W7:;'deCC0Dt:$E0tn<&?>iQtDY#NPT?5%hP'4-W2Kdt^4J[,!sj]Ln-!b0drf"$ejiP4,p4Iu2#Le<O$Z_J$BXEIWVpQ_brM+=91`7uZTL'#brI-Vd5e*M8BEEWc+u6cS9&^)%?#jQ<Uo]De$VVei3@>?d0rM+o8P$3bdS+`-ah`)EWJF/E;$;l6Br3oRjC#R[bUQ19SX(i]NATgg4A<ecj.+bFjObu<<4ACXI-JT<%'C*$e1a&YO_#8X-P$j"*Sk"R180Ta=VX^(u1^gCA3=Uc^2(<6Cern?MZU11HF*t@?gDfH;7#V]!p#mSY]W(<l^5V6<`GAFPZY9LL%ZBkTi+IF.%?j_*7i6DOo!m"<Jh)OWJ)h6?"X'rL;gN_Q`"?>?^+EIT@,8c7AmsYfK/W:'N:Pi]"bs,[c+qX>[M_cP(/d*m^ffCWm%$R(q9KUrpbL!\%BcHhC$6MTGZ[[7X_D%VRu&Gn7,Q<aW&%[&B6b[_F4.MhtmQ!#A5qRgF7A56q>nOYAF+)YsQ:pNcSrio?;M%uLe%9s"-SeN[*W!jUa-D]L@O'^?bjGq,nE=n%R_X>D@T$=M?)R7oB,<^]32-)Hg*+DX8;9SteM!V+[HX9LO*.0s(E-.E"LCbi',82ZU:%RA;0?,mK#KkS6B,1C6ZHOrS"/Zt(L8B=OE&KNc/Z`lMUuWrj5T;%9JH'*dNh/0djP&2C:pMcD1*8h?s\P-Qe)#t+t8ji15$Z-U4H%5UULO_U4S4,#%O48fO5E:p\8;!hgtJ.V'6WMPu\]W*'.;E'[$Hfr_LnTSAaH1dV[88]rGLOI6Lc9@0_k6:OjR8E)q35ncjk"HLuB%XstZm(,58eR<4As0Oq5j;dNCc.W#elf,99U@7!"(aKib4>$P5HAqICI_pp='OMjcf-,1iSdt0oTP"e:S[^dY#Z3#!).#Pf(ZH,""%'EuY%*&ib,#"k].nY7LCPDUJq3Ck\iY7AaDBl[+5A0o;>6&Lto1p0"e"j368Z!7Lm"sA9Qm(FMKMQU='fG$)u7%0a&Y0/:GXi7-Q%5ZQ9d^KF^;1fi1G7n@YubT[ddUnFN'!b"Zn"_Y/,:e=8O8k('8dZb.o*m?3&2P[Mk,`J&=Uhke/"knTpc1$fsMI%<h1Xf`H&29:S%.%M&\_VhKD;kOspb04GTXi%D&D6+[E2(;J0AWr9..AZLuA<qCkT%;oLZG9o^*?f#tV_hH*D`>bQ9JB\7ek!);:gn&foI:,I1mhZ?%=%STD:sL0e=A7;O/-RFH$d!KkaDe[tHHXB5L4dEBo_OZDAm,Bq#9b,K+D$`b%_1e;67p"3AE5Jm2Sn#b2qAX-@=\b%JX4.7"+O5e%Uo1W11mis%=XgEG%P@"2`le/F#t7F_2,PUcOVH;N\>0Pp6P6DjN6:a`,(W@DVC]c]$A`J#9(TRr?*@jjbS45"(,M.2OAK=+0L.<2%b=X,!<G/+83?9K5a[FkdA8Bq%5KLY)A;19_MFJNqh+Hj=4fu]"BfNIfdPH3knJ#$LD\ms"OV[W@.C)LS_+]L$8/V_iWBt)MU;@aC%"g^H.1H]`Y3$6:J(7[Z:Ob[DA(j0791JJ!-$S[)>32#!(@"*';)(A\35`"MW)e&lS2f5W(PY<j-Lii9d<Im[B'sNs7Kr)2e1_%!R%%M,nI;]71P[i\F0('KIN-k/!u<*1%M8Hg_>X2&nI9Nn6LTR;82#1K1eZ4rs+>1S[PQ4&Me6(q)#4]m4]!)I6,Qr7(4-(,?2qqu5:%;m;@?Mj_aVf7[[Qe6!6[=[Vc`%RrSpR[o!q-)NPcf&G+CS^VEo<n8^ZQ1`l6TN#O/=hTsIP2apNA/[O4KNUO?AFq3_)Xoa(!GS)#%N!,eJ#*_!%:D6$0;ou,`!1>9^F]cp_;j/+JU`?$a=:`2DX>W3B9:72rR7sss3;0e?FT`7XO;'1I1fQK/oq5Qgd"a0S`R5GsRMD9%%'Qlt+9)@oZPSPIc9l*O)+_-\3TqMNKQ\[sc6RF!Ra$:`%PY=uNUKpXrb%.dQ7$sIS?rEl-`.VZukk3>DH5[V2$39!,Jb9$.$!/-A%^euLS7NN4['9'VEA,QE"V1)T)r?V#^LqlDXgs_LRRA'sHXO<9g0;P+:)Ct'Y'-ue`[%'UOdYNt8I*>EX":TN_Ca,\bSqAr$Ea#hh%-=d?cNR*gn8Y"r%(^WSneXqqc5itDrkPu=$`WYp#RC/D2=A$WQ9Jc2r!Eg<t7WT\"odmr;Pd7S_R]Id22"JACem`>#r#c'D`QC6<%EFo(]*m>KF/^X3J=d_7D=W//X8e>)1QqnAi:6WJ`daB*g8mlXM"X2(NaO$#A#)&i:<FIU<%@7HAjkBb<p)@k,?C1HrV$qHJ*eps$%B<5P8?9mf@M@LK:$;ntmd.4MBm-A@;Q3L5$<*_MdpC&M:PfB!]gC%E6A:`9%KB.-?0Eb#N@gH[:$&g'ieI$#QPg09`Ja&C"Q=VL1%)[YY7SR6(XYdi+*+eT=#-0UU;7EmZZ!5Q<YE6og0(*$DDSq<5q.%.V>XA(tR[Z,D4&6L/L0oS;+0gs/0Pq:=5158$G9ESQ$`gr4A%4,9&C9&n(jm0HjkNZN"uWX:^9EG<e9)G!k"#5&+JOX;NW#lFp.OHO2$5T3o-P(YBY#Gbj!ds*iaMI%6f1XeUU&[B(fU^SYs^fP,b%qD4Em0f&?f=IX9rD&_dH+E0eDdm9L$1UQg/K*Y^[b=kfA(_S!1Q5`WYMYZW@ctR&oUWq!'.N+O'/Y,is+BH<,7gD$8]X/*sO;&FO%At;.X$BPF-+sAIoHnH;%B9@s[VWd\]3AV,?Of#'C%[%#P$)fggI<l6d1U/]VR@'J*m-PbX#,&0"B'C/`*I/9b/V5In/?QmfM6c*J%@qD4Z=BWD0JVH]V9:HC1-(19+=r&u9goZ5V@tp-X`]=NS'ss6JQ6cNJe22K@Z[=+HHI<[j#@s^qeR:H_%@Bf0JCJ4n:r\E^b,R61%YaBtTb@KPU!81R8eeMjMW`5G'KL9trN#,2',aR$@dR;TNAYXH?;26DtdVh?\?kUpfg-SYu<O,qIV?ogg;1P;WoIH\S+JNLU#51\'%hm:7!J26?t9N`5s'?jl'b'F^49@9fX@V-NP]',&`J3Zg@A<F&i:Ous`-R0GFgAj(]]!6]L'+n<=ES)`BSKPaL+U]9%>)Q#e1K4Hm%EFk]h=BWCEOTjD\.AT*6cB)lq#o]UjVBBFre2\rUA5rfq"4^M(J]L`N1a"'l8qtNS!UE1;ZQ(6VU0!-3bVYSg\JulVC+@lk>^^o*%P[dg`\I?Cc5k`3WFTe(a19UVmOA-C(5siI**MZ)%Mb=*t6DV&@=jS>6/EjPN5f&V>.KU&&`bh2@"'$Ts!&;:oPAhfO)ZsPM!p*N0%3Y$QBJq08`V$2k?5bdc[oOkiQ>!en;Q-hhuE=bBgJVM.qU8MBJ',*0gM6.*+hPN$U':5beVSc@Uc6EY>P:Wu_N3j@e#20q/&4qp"%AY%7O=e?]WK*W9Y$uNGM8N7^#1pjYU%>LQ&$"Vfl4-5FR0FJ8]_6K4C'U*P45iQiV\AXKj!1=.>D-5"Q6[hAJ(B]<u$CWAaeJTf<%c9R9K1@Sn;m&_5m$IENu<M6WobRd:M$rkHf1J;M'BbKWBkqj7tAm)#g<n;1jJEAJ7L.*"+AlOYFR0FiV*HJ[A6UW<"6=-?k$KTbn%7%EQl5TF7tW#D:$!<k]inrV'0]fmu[V?(n_\?EdM"NnK47OkIa8ASa>;Cn/k\,j\-3dXrL0U^)cRFT^MdKh@t=X"Er85F#@BbFf?%XYX#/.?0VcgD-Bm6OaB:&(j(A.p/6nediTD1/Ka.O;98X3\)K610gn;;h-^'5:]?pc\;?e7H+<P'YQOYB;P]NO\@)E&FgCEqH.ld%$5>:91,:SkFZ<lJ)s[dr6m54$=gD^qX]NjkRpg"_/kn[i<;QW5n(i/'8[>GE0A-:90-pXN`9m!4H)cmZ(=JL6`'NAlQ/WL#>$=c4%eQ!ak*ZO_=bC*qkG-:&iTc^RTa&mDORn^MabrMk%jf%S^k.71eLq3eGOqX*n+1,blf_U':)0&BVFj)g/`l2#u<I8J@^biQ<cS\7Y%22JGj),bKC^'?g=`Xg8JX64_"CE50LX6/:QAEeBB9ZhCY.@nV*Wf4@;j/i@YD;3a%YOdaf@CLchqNZsYf=f%+pTp.4E"J+>Lg=p`%"#b+2\VuD-QaL=tY"8;UV<-7u96"J[Vr:IIV'raRAUYLO,sujhO:9e&l-E:39u!>2r-O;d:NPVqQ?,^`^3lj$W91JknhG<!?e^dP%U/$a)!erd:)3.Db$?P%L<lS=]k8arL<M3@\=MQqOcI_![f[n!AP3LRF$KHBqCWE_m1.RXMHBD]^QWdTFY!boS&cEdC$sW+7^aI#t%.[_rOr-O;d:NPVq<Z4Wq^3lj$=@T12-C]HmJVcb,_j'Li=\Z"-XWZ3._HciAQ%;Sk%1D)oTRjG\O,0VSqBdg>lUPilCJip/$`q5N%bE-;*!Ctdj7&e^[[o$U,L<0+^B@ps+)(.>6&fa]eLu/jKHBp(FZCG,kpZ4J:`\Oj$'*a1+Co6-!,*T<?[t(SX<JMjK]u"%KZ^%f!%nTq>q86nU==rL=N34>8c(13WGE>]GcMQX'VVld!Db;O^bSO&<7CQ+W?0(sr,Oj?>>YdGp^S\8;SV6s@]a,&Ud"F?Lc'=*!i6MI<<%<<Y:>M$BbiK,!ab2d/IB)l*nCRghocH\K#uB<))HL0+SO5eXB0\mq9iB=QubOV('OI*'jr]kGKm%;pD/QDQ:bE1rY.8qtF]TP)p&%)mk]i]$gBJ"G*0+b+pTOQI:3W:6gBIAT$:Ia.=`YB[\16`GP^W=@(P1'r8EBR-T4,19`biZu01RU4p]Z`-1Lo)BGKQO`43\BGZFu%IAUSI,4FE.o!d/O7B&/+ihAZ5A;GUDHA\iDdFt>>(Je`sKkMFghbsZ(ROaT-S6JU`o%d@OmS.5O<->O&"+tHmXW>"WX>ZUU>k\SH%h9T++/nJ]d>B.nf-nC>:U'jVB>iok4YZfj;=$!%m,_b'[,0Mr]=e5;pOpb/.c:'ajA;GUDHA5knaLpJuPV@6E4ap0<kZP&fb&a^7%S]Z/VN.c''cFoQ,,[l8(<S5i;d]pCL9]3K`R-T4019e]I.qg6T/)#7RXN8JrL;0%a$*M+8Q_fD=4;D#-=jrWn?BJD!)0icHKFF!h%6-ldC&SRGR&s?.Z&`:>N#kTrP.cgEVKMJ@*<Q/-iNnh/5C@Nfmh\<X*BW]*^*cT@SbZ$f2&$,YHE/\*TD@Hr*RY511]i3=l2k!uQ%H2-I!i:n3t<+HlD?th3P<2:FMEb\:i&G[C>%,8lg2'b$35;7J&WY]*bPY-5@-)"9%:A(hl=)6\KWS<`]d7<[B,\nlQ$eX1td&GMH%k[%]#qrt,J*$'QZZn>?e(n@m?_"Ec<WN_"nNN$a$$<:Wi#5540jEE$mmZ.rY1.8h]4iLI^)KZ'l.CI*0A,i,Ed*l71Pigb"\hDs?%17$0udNr\4d01;!=T6b>8?c=6)Qj\DU^C#U/'N-#>8_:[/k4kfc8;LU**Yks(`uu&/`]YqU2)c:^!W7;,0Mr]P:I"MP?LTi3mdJ_%%$C!Ec`k91DP#;Q#MmT!pCr1Mk/sMOkEaPEq9G811/#ZfQ!EKdmF'*HWAo&/=>RF5f=f%+pTp+cmmXf>DR^(IB&O<(%.a7BLU.tt%^XYBn^]<34HS7CbCpWi]F\bj?k;69LGs[8TfA=7GW;Wq)p[qZ^B2.RlM_Y7!+AfBqR?V:;'"TUJW?.?3f9"k!j!#laV-hu/[LL8p%!GbW3%o^/l>k>;0J.UI0>(+_=N>aMGYgbObO"AID3nhEDk=@A/.^CT-QUA/89D'aW<(k=Fq;2"XJ.5hCLQp@"+i>DH^F'<$B=TcH%bIOHk?bTH=FPL^J):R7&FEPqPk)ehPY[=G@X-Mb6B]3^;=.&<&[PHdTO,7_=B75YiAec4(nl<`k@iQ1rmA(>;\F\+2+Y_.Zc6npR%0%Drf/#6^3I.$s&@t"4t_*,_8l:ETLm!FUT:NL)FRW2!a^2U!-(g.<W3c2u<&VrL-M@f+i0_e&b/ZGdW5d'qIC?X)m417OD?ssn"%"OK""VW5HqZ8C?T_W@:X$UNVuZTP%N:mOu!'/Ds>#;sD")b4"k-+&E&%*oLbRNbSW4Lp^<gCh(Nh74_Q*FVuI`kl/L*tJ32&.*Lf%=N<iV`SS2o($<*"XU=W&T0*`b"N![Id/U@<?CUaS-F_Bk0I4R)55Yl=XIX9bO-[oSCTt`&l01/O?\=qYLj-Z6fMeO.L>lR(^R(8L%aCHjRRa.mKVi'+]eKgRJiMV4Sj#e,&RprjW@3h,O\*74-Y5@I@=JJ>,4PAuMcESi\ZB^Q[mEJl]g9o2U,4k4&CpTqr5Tb[11lF0*%OH:X1[W[[Rfo^PP6[!>?\R@Q]c]\Z<^+H&Ud[dB>Ohl--+g^UW\$bR*RE]_hG%aTO\rAMj/'LsW=V#AE@%0HYOc-l&FhW="I*h*f%(*^8_CBt?A$Sk.Y)2\ciNn(]3V2hAdOJ*J+!LnK8(/gTK72NZsocc'Mb+pTOP1$mgkF/?T:KZG=r+9=;m.tGObN_a\fNJ@'@JqeA%?=C#6l,r41UP\Y9Vo=j0*Oj2!X<KOhM//O1f<V>ln4f`ZW?<l)p'!HH.5Q[SUkjKg4]FUG89qU+:MEOSWL"[?V[2oO="\'\Z'=\"%GHQm1f)M:.e!C)SHq7HHJSkK,'_9(G5W,`!;uLN,UeQkt#0"]-abX>\Vqke/20+o@odUIm0!oKY3RA=>B#qpW;I)EJ4XEJVHgfhn%<Y0ceqcQOVK+u5tW^\au>cEtN>Z3\Kn%L-q%VT`Kf3Qi9Fc04D%Q<YhYdL^)4)Ls&pBkut:KL#J[5oqc31r!6KgQGVb$H>3:)\^$%2DM5e2o@V=/e^rogGo>e;f\[KP[V?Ga!-8&3qo$24[GC*kK9SOkF0huI-8Xc588,t>@!SM4BMS6ED/9Jh#b##a1+II"k="%2*Y@]%9u:j=kO[ktLc%AmD@$Q:p!<b[`er;mBW(@A,bHEM6DSKl0dT3JHdFQbn9K4K#oAl%`pX384j0*^=jAUqqsp;Y!\SPJHZNhTjd%7Q%;MJ\jJ>l?./a-MLY5@J+(pYG*fVTJ1MIC"3<9p!biJLepn(8!B'MulVfA[&T-g-qm<0<)f:WX1DhYXd4:$dXB4J@15-5HQN,4FDO%;_DW!f7`QbGHQfPISQps&"Mdao#$B&9)fr[_WTQHH0]!ae\/h)pX<,ni;r=_Q)A(?ne&*WVQcab\.uj&IMI]+:oM:Wm_Co,Vc!:3%KrQ[\4X!8dF'O?LXh@'Sa,?jKh;=UU5Gu<o2p[Zq=]m;LqpM%8_M>kJ2m90;/B]igD?0j+!Q>\^l367;T<<u!f*&-6Fg`pY;m<XK%r*H?fqrH=0B&hI_VkJu=)]b\D.30Ek+[b=3mpS=`>O:53rXr,/]L*"_X1FA^9UV"(gCh(Nh74`8>`fN+0eek:3>C'/fI^KH5FQ]8%;V`kIF['(F)65S6Q%<P'Y>PI'p]?]"ab`Bo4nBsKm(d$oMS.EB[dC%_W@e3>Srt6sY;QL6p]<:JeG57aI';j9C<2Z4H-S:D;u*RG%K0>QUqXVPlm.<-a-/YD1Nr,u)KoM_hc&\AA:b/1q&nDZ[L)S?:':Dna@!k6fV6OI)h%@*Z>.sSWe^j-rqZBX9&G[CA$Gk;8Z?l:=%8878)cL<t_\0`J&.ci\BPYU>PWX2l5l"UuBPIalEeZ<3KkE(t0l!@f$qt!<+\pnP:&SeO;]ak=<n&*"u+in)F1+=/h/0RCAF,(?B%1?FOo"T"=!o^G"4_?f6iQ>]F[^3!FT"Wt5A3$oSCWe0XV%(cZO:Wr;TWU!l!Y5@g'm?R".%OM:497X^0=aS18^kgI<!--S5+e+NE%+[b=3ERmV799geOVaSdHm/B!KiiMN6RVu!c^3#EKD,;7XVe2<i"cK_\>RcJ%10sV]F5<InQL3`eZ*I0mmNZ0[8!:_%,Ah85[;+b[%cE]f\KPam>##pq`#iQ@o1.8jsCK\J/[<#+LbmhLdr]*EW(NQBXatg++h3[PE/^&U.TV^S&<30<W-W@9S^uj"E3S1s]>k_mtnT^k$%ig]lY1&,]h*`oeUEAOGYEB4CC\N@ZT]KtLo/d:s^6UD.$f6E(kd-;Sc#=kAEKR/B6$,V*eZ=Hk!D+j--E9E\B-&-?I-jtuKHkF(s%UkE7,+t?jl$JU&JPQ_CSaWV:jCP_$KLtM!&>A[o./]j[,-Z@1WHg;0Se)=<!1odJcFusg5AdLIATB#MU_:Cq$dfRZi)S/kscOJc,%>+UIe-RIZ9d!b0(<RKo9";G*ta!Yu*.G#o"h&O<]n`1'$e%NVMm\d*PRj@!\GV*^X)R+G>+)A(e\7oX(\4u+m15&Gd<mbuQ)J`/A%HUu6jq&CJ$$FUl&-Ke?kdTf.gRIPWUE6V%Y<6?u!$/HEc>S0E;><t?WnXPU&/TNXEm,f.U+u:m*l!@dapX<d9;dp^.XptX:_Z5LP%&is<pNnE$-!-LNj3'e-?Z_jMW+9bdhS5jf+L?s6F+0`k)!L=@%)n?I2pC-#\Vd'BSbIOHk?bUSm,]Q*M.?3ic@t:B(GK"H[+hQ`-%@(KEAd/=gu(-1u':r5Wt@1]_/8+0uW][InVc@0s32S&#j_Uf95:ao7Vm6!\!'iG[_50%u$V,\Y"&Sk#68&eeLh_TqdSoPRAZn.Ni%?/_q=.qE-d.En5bU?is=\iE/qUsiAi1p8T7rH'V*2-Jp1s!(ug\AeMDQ6K*qEfP'C0_Ui4K^\E_X&:[`7)=c;;@85-O72Q@bIl]9%Pc1q+Qc$OMLt!Me'r6^G!(uK\^2m"*`3/Y^[0HD3)C#!0)g6:]##d:g.%Ys^p$"!oaalXsDom*6'JS="mG+gJ-aP)_."a0B']:M(%>j4FNAK%cK68F;:a54Q7XKKNCkNP>HC)l:Q^=G+T2Isq*/DHK=IGrIoJ>I,A<@I9,\ImsTX+2O@%g(-<-dI:CH%ifoVlKi\d?t7-%_EO@l'ddIfWHW16`n5P?"G^)f)Y-X`+gfl4;X&t.BM>Xp%$AkmZNap48`FT;,Qo_Mg-OKV"CXM!acoA2^,;InU7E;e`9j/YH?gh<%2+N4oMVT8ii]qC39_Sl%\t?-[`9uG0c0Fqk'uO'*S$FWu[%XU6d<N!Ti!2X%B;Y,R$6ePXoT5.Zni<Wd[b=R3pgB:!g1@2F?PA*n%:\(mi*`;L1$(X\4j_McS@i.,WXT8#aHOdr2!D?R^6K)VF!d!0nqk"$R#[R5A?=U$`L9t-+@fHK\a0BdR?th=US[)+:WBu^s*)R>H%11VecGJI6PU0q;'BsN@Xptet/L6*pLZCG,kpZ4J`TYW472?VXfPd)I0B;lTW"Ut-\if\,h=.&<&\h_k3\SpIi0IT+E@(V)4i-_.d%`50(q\8fUVGVbT?!G@HBD`pW#ph%bj&opB(a3Ks/Tr/\fg!Z+([lWU<LVK_m3t^cW6%h)PT$VoMc;fG%a2/Jrq)35&>_?I+lkV;A%l>pOW5LmHa>kc^]b':'T2JtpqpCXV=nH\,j0pp2d2J)nL7-;o<KHflLNOIFSV;P-P@mU7\f:\rOhU^?TI1K'W;,^'a#5D\cYW"1I%aec'eQI:3?c8C`/Vh&9!nsMIE!oh-lZ!5!V_DsVi_K;t8fDTec<5,4QG6qk8#ZtQeFZ='1\[2#;E>.9)QMe<'@B]3,)^S."n^R&m%*6H>O&?s$a"!OKj%Vl!VWZEH0=!hK=\!6=(GP2sDm!DJ@$?SJ1R`U!"YZnn.h8=@%Y'Yl5m\^.9KX6XB][;JP&dXe7fACdY#Pr,\%#Hpk^OO:=jSg?u8fj%(i&Gb2[[t*#:oW%7u,UkU@]C#-8Jj@Y&AQ"h89Bj0<kK4n_3Sl*=@f`T9LA[aj!KQ-%MN@I9pBkut:KL$I%:$Ba57Mm"B,V05HfsI*Ri;g$9[,VUJ7c.``lr'>>SNS8dWWa5"eg2lg;]690jPLml@-"jR.F#@KFB>tn=A.7+HC>4+ET38EfI^KV%;h'3o]msAZ>Rg_m0<5<VRVN#^Fs,:=j]r8bAHVj/0RhCA^\me-?i)H/$Oe#`dFerLlhM!_Y$XUHs#U'cZE>6Zs2BIO)!)k6q&apj%ocI_%\MG6?GR?4r]]')9jt%NpQV4/rd,[kVLtrs-=*TSbQSf16Ns!7:14ScjAkhu32M;?o>=SD,V(I6@HtS_^9/b4*%PQj5Rl\3@%_k#iW0[;iBRa5dmGc@S':_=fA/<*Vh4aZ]7;3s-$+F%gb?fd!1?XSs>9F4l-r/+52h>pM-Ym6_Rs5:2[m]pAd^HS+J=*ZF\(RV$3%OWZkp1769+DmAfTC<V@Qh'&FWd^4YfI7sCVI_"PV%OR/cAMU/ESke7r6[*@'M6U@k')NtIkG-tK/`MsAK*Ui>JdSugir^cp`hVPr%.ef=05.,6XfP5X%dh=7jFbD^LgOE4KQae^KYO[4c0/15r>S'?==e/n[anft7]N=S<d3*/W61WkX^VWnn^T`LO/;`8n!BJ3Y2b/&5%Ys0<Qh8FdLd[!4]^,O8#p=gY'TUF$?9-I7;Oh6%g3uc,<*I.M>*'HiMp-J9+)SaFq)ujl@i$AehkX$RLm1:>QBTZ6n9qWmZC'U_"%;uA[P?i72nK*Ni]+0&4[jTdQ^NJhK;;n)`=IW/FeG0,)pr$mb(r'HS]FY4q#XNBog<2J0G`sl>L,tM5Ip#25)n<eiElJf,]Z9*uj%6HBr1n1_dD(0$p[D/.HV4(ZHeB,O143pX4c$_YZXDse.EG/)>_%)9RtXa(X\Ie++h,LEDH8CQ9NI,45*6to@=8me[TItboUIXte9%ZH&bM*:dV"!tLF0afan\U+Y]a61Vahr$maCquW')[YZNLd4kA^:BiXi`G>qf9ZGW*V&:K%^Uu7CGV_VMqs\8!L[ZB,%Ch$qo;OX`%m<G2GrN;-I!q.ipX>8r^q\&0Hr_&?]'S>sWG<,0]e#N(3kKi0UAFl.<q?*5e#rC+Eg'-j>IG:0a:FLV+V9`""X,Yg^LSI^E[A2f2%4,G6XEZT6DeX&(O"0'$,]`Y85$$4q#RKVKu]eKu&:jmoCT#1UABojk6<ud3_WZ<DS9QD8NDsTK++Ld]r30;l.8#u78+9-GBV]$b;%@lNVmjo-0WnjT%M:aNkFe0SB^8DY:0P/6U0@qts-/l1+?\NIp^+1UG$+kM+A6.VQD'ZSi1C)1`_>XN.De0SD453sg*6?_`IOl0M,%9-ea@#6$mWI_o@aW?u>K[*SlC!N+pr7<ic;>0.RVDZPi\S$d1$]JkZ`5P),me#[V@TOPB\Xi;Of4i'f.R-Qrf,\s$/ZR;Kfk,?d]%LTJi-cre9Aoduh6;RN:\aWsg?MK@g9E0-X>?"\3E(9l50&aHr/R-Qrj,jeDcC_Gl9>-1eVg"mnk,Y^?khOA%5,plSr9hCsp=iG#O%'ZFqj/%]f<S*h$R]$E9k0Io)BmphPlI2$(!Vk:GS#"d8ROr#J(^o339fYemP;T6^/+N,$h[WT869JrHUks^`u'V3m_flaF(Y5HjN%j+)F()h&+AQ9p\IkW/gkWV#i#T!b+[Ntq!sYR99R-G>(40-JkoDC[0A_H<"W/4<A-6B7J7!t,_9>==+>Ba;`fKCDio1BW)=W,F^r%-WtLO</XVnS)tGtWmA(C(.L\SZ''C+JUOUTP"X$D><nsZC.HC04a'ukQD1H.-p<dN.s;;&D*i7%WY^b452.3-cjaUS3H]:KNgS?2%A2JcDBTuK`.![Shck3Tu]OnuC$lre,Fplrk?mR_[Fg!LNIBH0&"Y_c+3Q^fb!V^V.&cNQn+DKOqnmY2-oI6GcQA%Od9F9u!`GP^W%]<6'WpBkutB<T`AV5orP7b#,uX_.';l&s!3+DKOqnmmo\I1*6uoQm%R"M4gGUq7R1"(JiCR-Qqab#pU;EAMaY4US3]6^ha)?4`ZH%lj&_sFdG7ZV>=C/4+#UgW(s^8<pUU+oc9TT9_Sm8h5@]G3cmNh/!C5'?_.I9qT?`\6s\6KKB1-""oC0K7WiXVHK*3j-##'<A)&E1%oW!3<\`RrBdY5\2(PEkea`1nNc!Lt[Ig]qS<:))Z1.W$-N`?k[BJO_rCEJ5c!i?@b>L:(#>kbcUWD:gR1GSj%h9a3q,`5&_eW,e?%PAJB7?@@*cPSCjsmA4<pCWqCr?=C#6>a#jJIkH&]Nk4BW!qheO-Nf)-8^lPa:?(<U^b3Z;[JL#De&L;<0\nI]7s3W<b]TOnOsJ(i%r#/_?nd&FBZ8R#e+Np.0bFHd1FFKNe":rHKS=<usJC1ZUO4-es$?P$9T,@rfF6C$VprnQGlE09MkUiM]l.SGoiljsEiKG-/\addf%?*IPKqF:4W\"J$J\`RrB1?;mQk;BQZ7e^GFm&$9>[tqVkCBqtF6&[FEQ&<[id+!_+=Kl#F^n&]f0!9PT\aFN5db%J;m8DiE_m5%5%(O.^/aYBi)6-aRHmUQf;SOY)&8^[a0cp4j?^cDPYq7+@bY;"RVXuWQj&t_C]QsH>R_32Cp\[/#-dOHb<T$En);AWCDh*lAu-KM0m%\;p5OOh.]?!aP'UlVp!p9&$`'-HZ"7Moj_a2YDb?=fL+.;-HnSdO1f3J%L@lXkX>1;lA8"@"%NLFpkl_R-Qrl1jR\2X44h:haO'P%Oks<HN;[5&Xri<mL8itR0muZE/,C8.5UgjaQrBNdmM4lqcb6jQ6N5E&/\A;P:P!;->G*tp,Y^?b?D(kXGn-DLZ9TpdO0.%d@%\[/%`L,mr@BTK4P8)\/XnJa;Y2$F+f<@M]1e='YICqg<qC3L,Mi\*GfoukjZNZe+,M?PMFK[CMI=CqDA?,]RDKZja@3s6*iuOurpb+qe%;@(\udr\aaj7Jm\q=6/`>QW^_7)<_fSnOQoR&N:Drc_F!=8![5T[q4h]0?#XLg,b2/nhgnn73!)?:;#\]VpgJ(EPVp#&lTbKVYbt%Kt6WX0>r-+1!DK^"XT06ik2`&2++.7C.HC($ZUW7"n*)G7#q$M\k,ui(9l3RnB?!X0\:`U8bCCOE19Y8q<*qn3#2s/U,X&:9fko&%Rfp)]RrlP!e+agojR%M9)]6K^/2&SH9_44QhK-A$N/G4"EXG+1FFc4.O\RfiTe>T`61SOr`+Cpq=[Pqc^`Q.;!QApW)jC#^\"J)%%\aFN5dcImMd;:Ul?n-1?nqS1@+rV_$4%Pr:U/%;9/Y.9,Pa&p\Z!5$;9i'kUpBkutBDWV;,'<0pc39@CVO)-8)A0b-BZf^>$jD$Y%jC+",c]LH5X%4;Yf^*G-0_"r0*P:WD@BTKL?f,Sihr6>IZ=[6WJH!'Uj>4%?@aZER+FQ!S3H3.L"EGO&No%m_>JTrA%`"rgKt6XC%:"),PV<XQ!>Zg5-].TYn%GH8fd[ELe5+*`*h9>/"ngH:t)nSHeFplsZoJY6BY;"RVXt+"ZgLjtd?n)Q6L-1)DFnPYJcmU?c;=NEb%qlYp[EE@ZV2I5W*m2h;H0eOM#>k\SHh5;.o1r.mAMGd'>S.mA@X[/l;J@_Ol#K`0$Rau3)4Z+.E[#qL')309(Qj^*dB>jJ7hK="Q%rFU4hH1a=":"H?HkrSf:OL>jToZ8XU7fd%I@ETVA\?M)VL'UA2UG14+a>KUE:@tuA[EZf0:O1!_\C-G=;dM_AUhL(UP>="U,4k+.%_Vp"L-8X"J*X9YsdNuNk?=C#6>h<qg2l?o?,VD>+igFgn_iY@L3S/*Y2oY9;kP25DR4%[aoG)me_#oGN4ZV@!]C$Er\khcWGS!B7%k0>SGW!J8d[h`DCa+"EDQ9pZsR:]BThTVSQCjVlR($l\i;!.?Hm^cJelTVe[BY;8WHHhOAO\9)!(E?SOBTuK`.!^]Ok]AFI9\rJ<%$M..8X'rJfJ]:CC[oE#%Em<c:RWJmf-N[6'ZKAQ6B%PIZl>p?O!KE8:*!K-ha;jtn*K1HAF)/*Wk86\tR+gAgqj2Pa,Q5oPm$1@[%:q@tc\JWK=%j7N2d^4Yf]ch?X:N<FD3:<!J>J5e01j=fPFi=a0'qZG3[=d<`Zq]VHr)Q<-aPJ-+P-,fN:ZeUe@bI$E"1I#E=_8B1%)fQ2tH$jJj\lY9b51_'+gl68ZfsJ+0=1peJBrIL!&u7+5+FP--[L&(rp+*R8;mL^V1Q6"'AP8f0='3gtY%]dsO@fUD=c47)TNUIj%@R+5GFPF^>`a#"I?'4c\&JhNThKmP&L18(^.]YJX]u#BhF/(k0cM:DBDDN8$.'Sf#_BgNmTL%#5KB1-"8RfE]a2jGPf&b7tJSkr0%O#-6h9_/U4e`YZ(5+2$W0Z/ZW->j41,5;j886Y/-j=0YBpoqF$q:#1InVgH6jqpWK)di-'mM-LZT5'NEW!AtqP"Pq`]5d<_N^B`K%#UgPO7.h[H1.Pca$?Re(lFOs(/ma.C]7uH8mM-LZT5+r!(."G>iNb.Q[>gDRSklcO<@-I\VD1&Xf/6U<OgK!eH#sus'a"W9Ngctp%Ka$;1RK458(a+Z1\nM_g0MLX`Oud?0Y+$MoUq')?-:h0J,V;`B3#0%c7ZUZmW2[@0=O;K!5q5ej&OS1CiZL]T.;c'R.(r&+8=F^`%4E2n@]?`n3gk@rmdG6Q-$ZE.U`.Z5k5cT,2"jNt!,Cr^MB!\%44\CR%;Ng2E/25jVQZVU;H,2?]PGl.nJPUA?W':Ps:_JPe>L:%"%>kPW3BtSm[UQcn,N;H99$!f(?/YYPZ["IG]+IfPWGc!o?Z`Z*/U,<($O?=r'hA)oV:Z(p,N>\h.l1#D>ab(O?,<"%k\*pe5U9pd/%V,&?gSZd0mc<^/B?j#=79T&67%9o^\4hg/e@BTKLdqi<E#]PF&k?/!<$IQD:BZ%N"*07D*n$4=IE)7;>pp-)%9[)t;.<Z(93.PQi%<n.T!24r(NPPDYFfN`!'^<*'ETX''*BTP(<+F0\=)S,q9l:qg!T[AGc>d#(T9BO%T\lY9b5*tN5CNHWC8d%ne?/B<O:End1Zlan$%l)-VPUH9Yc/@=0WmhL]F&ZdN.eBiOOa3rK/+4n3C>kbd`U%+!]"Vl(%.=k:eNcC4j,+q5"FG&A*$u@U@&SA)7j18W)IeQO@>JT`[%-qB<-mM4lqcSUE@c0fl]'=hke+d<;t^f>0UOfR&D03UqTR?dZ<aB'nD/s3?'7]!n$Hhc>qSisAK^=oq`X-\1M>)q8P`jj)n/(+[V%=r%#khV*(KX\EHZ>,IuRYh%YsVYJZd&d`?-"YgY@$IPc1+pYtgOUd&P-@@\.7%.7n89^l;d^Td_[Be(<Yh#C"fDR)Ng4,j!r<Lg&%rXp-l"*H26<KGY;9\CbFb(79-V'CDj9)f0FXa%8pk\GmP+jegVn/"nG1B,u`jI/k]/hL&IJ\9Rd5i7U?[3h<&69dqEgLUMKbdE,[%;qG&f1^E="Hd$X4M7`Hh\SIW/mDrS6)uLq)X\)(Ng':+K8%)R_Lc]Y/nn`X5Y%9f,,C/Ys(3H0`P/plY5!K;7g7i4F#M*(B%'6ku%_.h;JBm/OsU.AK=1a\?o[P_q]Ogk$*$`[Q'>g(0@8)DrL]9u2oX)a?1[U(#Y*_Bu*2"<h7/#S4/db;W5`WsrG4"TTE)/65>\W!o(%:O*d"OOi^2bXlSElGlG2M]SYsdTU?]#LZeQ?TE)VhEaI!T."J>7p5`4l"[hUeO@&QgSY338-Z*Jj,WO.<NZ,T"fbaK^C+#KEjusB%C6(n^H[>RF<40#+4*&lk:#1B)etaO#m=S^#O^^5>)/I]hYZ@,_%tq@bR&PNP?`c@@7(uiO?0&e$CQa7Lp<brI#A.+&5<8;a13L^$%VcGEs"&8.pEP89ZP/pVG:R<,YC,,"cP?HhD("l,XX0Ot0<*T-fmD)[O!R:qI=s6X'0\)aKfDRJ%>.oc5B%e6mX<M#R9"K1pHtO1=%B(aG!ZI\<3<Fi5fGf^P#C[WFur%ci,3M\X=eu#nQC"\'Fet`C`X\&O,CTT:1*b]>s#t3WRVVOA]f%rcsq.6q@d]a7h[?V'bmq?K2%1=4U@jH%^>-Ac]$['elnEhKP":n7]*m0RjiVh]=_l<7oX#O5LG:J*<4UouZ?5[S<T5=T"\ER]QQ<nUT7][guu",#tEAu]4V@U$C;%4sF?N;HADPMlfX`G*)VV(>DjF*;LOUC^I^`Z.56387R"`>kcEdCrId_^gh.T+U9&mQ&Ii6O5*6qG?/F>56CAT;^3B/Cm?1qo%9Nf%fDQU/gUqSjImb>^H^-bbfLF!-S,2h,52:Er'0M&;^rL\9"Zu5+(3\n*R-=Znh65eB?$3n<J#LiK<oMqn/@Iji<*eoHL[E)iCEJ\V%G109r^gW^T.2FmZ0/2#V$BA$H#0<A"]KQC,D(`m'IDRX'g/9=0htM-Yfeet0c=gts3\]6)cA,t)[MP=1IYD&eTK.t$7e@Ke::6#X%&u7+5*uS^NKJndq7UR1T=f8h'1"?SH0<d)JB8p7R(QLTV#fO-^*oT:nBTP(<+Sh,E2Tb@B8"d"b/CN4S:9$E/VL+$-mai$(`^*G#%CY+/KkfX<n7S2-jOq.k9;cR!*A$6Uq'&$q#)rHe0?=B`-22&D_$:B[<RP,\ESshYX,um$!4s[McD:(irYP##\A+3/+H=KsgJ6_\]%#]3WX\#LI"_ng2:c5WAEK?K^pb?f"/S:jpM0_u%X[f3:h@sI!!ia,@R$?P%,+gk$Mhnnsc,)(ikJ-JToIN5u`,d\N0)X@0PW>QD.%UperC!*o7*F5=#C[Dfk2De>QS(@QX3WhZVg6.3,mj?lgLG_3@e+6GH",,q^5RU#RoF5?#"/h/)_.f,m+'A(*PEnb\X2:NpX4%MO\%[)L%20/@ut*4S7rc;ouM,'E8fAu]4UB$7P+=Xp"q'8^m#T5lYC8=F^dI)op33MD9af.%QhCdCng&rCC"J89QBPH>fAIK[gID&CBf%@6mRE?0i_im8j!QjWj9F.Mb$\nbTid$(C8sk.4p;@B9,JL\gG$Keg":P;M\+R"`sJBAnckc[.][X^[F1(9XdV3,,s*R-T21L[D,'%2JgR^CP&[oP9cX9cld&V61Q1Sm=lqSVL)rip4>^CgGPHM/ZGaV5d'o?%(;W<(Gf4]<\>5*7E/<L:GUQ<U6fS"L0e>i2(UN8&m`a&%>O;S0FMERH(9Ym(=KGc8E+O31@maPM[F:1U)[kg[DCCc2:YBIlM[[&n8t>M'?=6(nCH-.>m(Cod<f;mTBueQ>@2gIlq]P]j_\W"!%9!G7A[>%*[gXR+(Shhi"l3.rF^P9WAdBc0X.<Mt2QrWRcS\mA,M/&9%`*l<!8OC7mI'n\t%U0&]cL&\SH[u@V0B',E(Y6T,$YLZo%'R>W#N9%.9*@)_HfTqrWQE4)#KQOk;=QH^*"af76`E6n/Yb:kuP6_CF3=\&P0C@]=>Jh4dNWr)(DN>TDauE$h6*_>+[T^QmK.S(#%?6WD:4V4ulHRl@:g[2Sp;Kc6Rn/12l@4(-*jj@O2q.8O4WJ`LmVDTpqeKVk((1,!TH[u@V0B&s#h22Gj1"-otC_@87J-JToc4>=L%N*d>A_!ER[e?fPd[T`;lnV_A2/'Lu-KWGqhXQqC5V-WuMYS)"68=K8GGU96JZ>d(uQ'`35)A^D/0pBbcb>^,;f6j_eKOhMF[p#,-%8oCR'cFsH=8ud'!Hpgg>[p-PM;F4R)!_I6;DE30V<->AufDQ>J>1BjJI468?HF^@J'Qc?6%<@LhC-uZgn^/6j3,11/l<0M=?=C#6%,oj=kj%UjfAYV\pP\&3G7"_:L#K]IU[0XKL9.mdJVV?-F!^eP"@d\X=DOOXoWI>.>/VU,O,HGbtU.NKg8.JPrQQU,o"R2t^<$dl"%6j#T2r8FHYL'=;T9W>VD1#4A(Fh`U2('-2>)0n#"h%t9%%&ch1G'W;SB]QITIF0pC'%7a7aD0*_q,5Nqc\Un8#uN;>\I)uU;UV:Z%MSo*k7"_:L#K]J([0?!jqG+>XdM`mWC>n6VVp2)cKt6W<&Chs?7@lnH8m4'o9mjMSk]3QcEfXmKb@hf5A!F?T"e&Web+.hOE7V_>%>kbd8BL4CGF\IK'(0WQ:VC*MkMNk.FWCO>&"[NlD(8;MML':aaoL.`n<8B(KFh`m$[Z&>E9-6nmM\^$qYo[Rm&(6c\GkcTcdE%W9%jn2Y#TG8_Kd\96(7rZ-l9JrG\']t[W]&lT7k\&9o]2#AB'Dj(HCB?fs&MYlsEAPqVb!E()TVY)\*'DuejqVL.?c#E.Pq7Ldb!1gH%\`oV&:mZ:k+SghY[e.\ni?-?1CKOu@7G!c1iOW*Xl[B^-/LjpFQjbha*gf&DdiP;:Ku_M:)OG:)p)Kp6cl*[eC!f'ieBE'=Yl<\/%;>sI2>-%*&B;%`r[9Ek+o^uRC[&&lPmNh3_I?da>oWIp$`^afHi2B't2+MZ:]u"%K9/p[g^-@R:Q5XLQ7ul:OB=^t0&P$^&NT9Ci%S<)7*^ep"$n!ugi?2"\Ih<,]PCAU^$e@Dj2U4(2'^fs(!AG)7)P)m+e$_I<s6JF"Q["\a%>4bTN)04O`b]U[RS(?m#_c^[#/nH!u%(==7=g-P912f7ds*(X(gc>fkA"`@N'7ps(5;n[]doD.o&9JL>Ur8C>VBUM<8Q"coa?\5X3&;2-FeAB$qG14H$CKTMn7H\K7i9\$V%R-T2->HLouL\&rgEE_-'NO/UWOL>kkRF1H58;1an5"$<(+r%Eh3GU4XW(*&>jqZI]L)s'WBB(,5%(2do^.$Nt>rtS@iiRn>;<hF\%:DC2D"kHk!:cZ73bq%";^P&sPNds_r)]ImD7"_:L#K`/mKNo;L1AiVfn^8m$W+s^9`Q-:^Y:roR&uJj^0V9R.-S:d_Sg-95jA\"X%4lWGpS"lK4)CMXqJYtC7eZO7Q\aGgRe=qPK(r-u&d3>,Ud*O2?g/7DQ:G$s+KL3IVBakGD[;i0T\lY9bIL0"+W`a&]Pp@*(En=O-%J-JTo%[)mOC>mR<A84_0CKR70/OD_%C3P0=``E`$P,"g@dKp^A>,0R-)sD=>g)cI=/"nL6LD"sM#E'ol^ig,L;*r8spBkutY99bi%+*SSD$]JH1(eR'g>ug1Md8L?_a^s;19N+9c2an-Amurm^1p8T3r=X9W<31iH.hOA%TfB3f7FWVh4%MQpVhO#iL.s07X^QdQ(7e71%HDZ%CeK8FXs$]<__D7%,VOI:!2Hhq-\L^T5"oBT:>7*[m!Db<&LVtFk3,&g04LOC7nlgQYSe9TO&sc^#[;O9TO-W,&N;q\[+DKP,%ne"MH]TIpJ>Sq/iEK430mLh]Pe%<Ijo1LKH;7j2&pi%ulnrM6Y]c<#pWZ<B-;:LaVhd3T*>Y8#(;)s@j$oqBFh(-]lT5,(5R&/^e%g!VAc/UUQHo5A<,<:)+0LnGO/<&u3R)6I=uTXO?)QhbAqpBkutkAo#W\L]bF1WbMpd%Xeqbt7tAc;`Oc3YnEPKl<k!a@\d7=<OK[%nk,<O<:p<5bqC6;70O&JRo.P,8N,U<EAU4TG*%)>9FJlr4Xs8@>/LCr/]AW9BQ23Pid+ru8rMXhDp%(X;dtkfs!&h,PVcqfr@pWB%\<Y1:[miPs=<OD.LTK<VRooClF58JlUdZ<m]M:0G=`V,UHBj!b8^RufNsKIYkLu3A<len_$\Yl$EBnT#X'S&oGrE\9nfQG4J)D:C%]o8:OGo([k_VDT0#+<$'+Zt>,Fm[*QR<_pRlkk.h$Q20F[Cj/9:IK&r1PA+46H8:=5\e8gG!O'q(Ho``L&'Y4Z6feV(krPC!s#1J%hq%W[aK.O.hBeFA#9i`dVBPD-gt#Pt#:Xn]N;,.&RIkLofZ(B*/d"VK+EIP6+&0*N'74Qnn;8-D^4g]VZsm5)Jm"kJ6/"@-+_.2E%,>ttM,nk)(bRH?D8sW'qUin2U,AWSEo(oJ='!73pfq@c([Cpsc>LKoSj9AEb8!QS\<%Rl(:sG?cV*S"+*O.HUWk#57&_(X/r4C7G%6q*e5#Krp*64LcIA'H!uL59tcM_aCLe68s;/b?YrC^uh:<pPW@Bj%.MYL>Hc*-nFidl&C>=/`7fp3jNqmk\Jd8Dg@I\Ob,/T)`Rn%#7M@Mcq5uIJ@We"e`n8=T!;n3Dkg+D4W9*MGk7e2VZXL*qS4Vn@[,D<EAP$aQsQ/X[C1M"`Pp]mN3ioC7OC>Nb^G:,+qlEr:3q7o%Zbf"Cf$;@*4k#<jgA9YE3t(Uu)NVU^qfcS)/ZkimV7)F1mQk&HI4FqR@$?X2^B`;'#H"EK^-A&=A<=`^f+`qZXs]#sS=SZdkX)'f%7WaVk!,@;T!fln$9O7_kc_X$'CFXrBe')7qF[mB+?qk*Aj%_0;#a>Z9<n?35K8BtolQ)!Mli.W\U#7AP2>Af#U6H4)28A0V(rmP9%&?n&S=A:@.2$b,i:.6]c5RtR1K'r+BTFR(p8ne0:B*ome)UUuBYh\QE8TLE?A(`P;`m28ZVhRK^Wu=Y#[:@oHe)%0C/67Eg[#H=6%=J*(.$^BUdSN4o=mPG[d!"P5F&*csuXff8\L18&nb43f!i(H%%RFQl]V)?r%RY)$i9oE!?`4a&lUMcX%^IG)?$j!Do/%k<g,c3Oh%*$LHdX/5<Z$Hh!6TEX\-kChHQD*J#;%Haa&cmf?*d&M']oZGEJ+d>3u>,qb$Zp`A/VW9oNWT:dY_j<',&RUh\iehn^7VL?Afr79s%h<Qu?#U$qj&K#"2#Gq4u#;LnHEFKCJ4g#FQm]?5RMUW4cP;1E_;d$a#Z868c#?b76FrHVj1bnAK@%2N6Q3cg-SfQ`"@>^(##&LEG%_:'_F=)1ec<=<9:b$7@h?'.lYk=AoGm7a_HNq3/'J(+'INo(IJ5jagXRmJ5n+3gMJ%`.JE[YaNNoG"j,;Yl6d&018A>mu%IA0uah%!K3#Q28V8IQEZ<6pVIj]/+3k]YgJZIVNK6ZJX*M1)aR\6%1?_=I;Y;lN*DK7>'m!3p1_=jU,TAi#r6;8>6b6NHc:Mc81&IW1CU09%lPiBNC5\]9g*\%\bsYgFXeQMhjTUAV$'P3maP)>UQ1dMjWlRKpEV)"AQ"EbIr$p$IgHLjHmAP5Ta(&t,`<`S^r'F+a"XDdLFGP,m%nlkFnOF;-:DTFp$CDh@:V.aC/8o'0a&ZM_%,^P&n)/7cY;QB@U%#VWN8Kb&S:+tJi\\r0?r2@E2L+uf$QH:3\>Q:?1jZ4?k?%$:)%RI\oKH)J+Wf$^r/.D2n8`Ma7/b`6L!qX7r&`u9:nUUJeHc>WW>^A$9C"G&/_UdQl(W0Cj5i]5PUF7ESI(ZH^LADVuD48U.:fk<>L%A.>%$!A[]TOVc'hU2?t9&Q/s,Xu/5Fl32f-Nd<Y$Us5ndB'n*N!7*r]31HL55ZYK'aQnNlW.T=qED40Lf3TT96D72rC1hX#*DM1#%Jt8.('G8WE,%;J5X^][7VQ%PK!]1-o)U5.K-6Q1sK"PD,+cP?YD7k-Z;qkp%(nSN)ZBaYkOHN7cJCN/K;b(ZEdf#8j+Q7[#X:/,L%^="\efT!,C+cMjH=69,Ud6'gUEuIt4`4ea_l\-@XrIEC7a/aha?QD6oqntH9OdXgsR2Ru(ATn9sJN%6%_.\c6WJY7Z4X(W1&jp!?%*O)%mU7ZB!3Ank./orVZA;h8!o9't^kE]cmG.1Rth',n)UE6MHiI_MPGr91Z:?S:)E4/s(]49_C[WYfEI)hqMW]js];`gj0aH1sZ%O`rR%_B([-9s#R-3qrpUo^Ao03>V1>D/^AQh2^_m.CC(&M0u7([Fa`T7A-&V&FPqc:mmag]YOTo_nA%<p6'2q,S-DBOb'<3H+[?s%5cfhVH)+DG,g\DO5ZZY.CE<c&A67E^8#Jjmr>6*:<4fZ3dc4;\[`Oc7,#?dTZ0"R;I-d7KnQ%%a/Y=6U<9??eU-YT@FgfHD=jniF%1`YP&[8`Ua3g!9>b10ZDc^01?=TJ)26Xoj"6YHP_dua)e=_h:A?5`YTinCFIdA*HiWb\]f;\uV::c%k=V]/'N_Z<h;oEm"XejmN[%8nq<IPF(\c':fF2ag:RPE\eF^H0*RZ>MB91-_/5((b-p]9B\'SF?4c-6O_c&H7d\X!MhR6n\nY@@c>Nu=i``#!3%rE$Q3#6MoU-q%+mcs$P%neeN#19TaT(&l#.L?:c%'VtpHe1[)20/'Ua+3<SI'igkT3?U;BTSSX>_)HO*GpFHbJrsBK!mm!]1U<?1#:?3S3,'R/@N_%6QHl9k!j81!m@!tR">?QV</"RSWa8ZM!`h4:eGlB6gT/QX8unRiu!O,#V3P_<R$Z:?X+g-dBUOhj.%;>?<%6K^.691KcOjtgC*UE%XYG6H/q+uL;2%ujSV\0`XN$eTd]f2mNkdWFpXDKdNuRV`heH6[!3H2kacR&=5fYdCOK$;jUPg7rejdtUWE/clLsS_sV9O=%A_oBO%3(ZK?Bio/Xhks-lbb[0ehWYc?gu]ZS&:.KTE*Vq6:XV^_TCcSU*0sGJ>HSa);n>?).)UB%/oQh,KGT[].@!soN\u8gqf]pCg4[*Y%OM#)4kkPpGo.^%)7k#nGlLG7fZT"MrKAJ[I+1bdU`tCZ@5h=]Rc.Fm-1sC*S%#p!\q]Q0R+GJtpHL]Dp11eUCFAdcAQ!q8oj@[LX%r]n@l5`!.KWh*\%Nu=eF/g0>oT?EJmRT`4bP0LS["MC%1g_ogJGe@m-oU!p0"?DjgUt1=sHO-(qfYDd1nK%7UXWFMDkG-O;M+2Fp%S,J.B&6A>q%%FaYU[Q=_`Fg;!q!Kpu_Ool9gniSGCX/7P'%jb&(m[1<41(;2%B\O@/8.S/YW;HklqqMa%5l"mEL%LSpiR+u1Me?u%0tZn[OJ4<i2P.P)+pr9R:7JUFQGHSui,aFKF^Rpic:tq$EKoOJR>uLqIYaK[-kA*SYjVV1iG`]pcu<:0DAVQ.&'/]JQ>ebUnmDA0%]fDME1_<1#E%^tm)#0Ar]GlagX5'm5e\,7aG?aYeY-QO"hp=gbK(Z-iqo?jq)kRH9c1T+0&p_+1_T-4'hEG4q[u2p<X>GDNT0N-o%4R\7kXb3EXM.>(sP+h6&FhXgjk5]=5kgdS"b_'C[AOAi-Nh'+gTl<.5bb1?+Jg"9LcDcEh[J"+9Nl?)L%1,+>:3ip\]]Z&L*K)?c%)H(bFSFV;YSitsgp$5W_pO[\BG"sIo7FWJl_<t3E8P_?;hPXT`_HY/+A]9ZY#>%QK9&?K$RaTB+b).3<%[*,uPe9e[j#uNJA]9ZY%#>%QK9&?I.KQn]<XOo8h+DE8panq=sNT7Z\b).3<%[*,uPWYeT/"(`T=g5N&?.)X]P4pEG0h,*U*];tKX=6Z]+6b6S(QS%<>iK?+%=-?3uX_$*r"O::7/ma1n=&'FS#of7'l<OAHb?V(^G^eb@rtWQ"cjkW/,n4?D#f'k((*fC)-@,:j7\b8_r%9F.4::bUn(.X\*Ub:t%=WK9K[ATg/hl,=/Er9feh)-Bh5.8Gd@hO_eG_+DQ<*r2ESs.5e]bAmbjc:0/"N#`CbqNX)8d<r?fbn1e@V]JkE`k3-0rH@jYjX[g%9YO\C9Eph@k@+10UGMR02lfOgI\V+R)]?3^F7X,/=f4u;mJo)B>X3Q+a/d[!W$8a?pd&Jm7Hp;)?gQaN,1ph+`DE0_;]1C*OYJ;#%dNOu1!issFD1Z$q2i;F:NLS3=K,@&@0NRugoUoP(Cm>QPh9(V%!cBE=?bd3]`TYJTdO&oga2q&!p>b3HG%#1(V_]@L/IiZW[%5R$%*hP]:XgC01JjXNJj0L0eY3:&".ps.f'o\gpi%QQ&]8gs:]')k:,_9]c9Xi#/H,Kf-#f@ei?&c5F!S-/#c00DAKQ<!AN'*=61-'*R%(pYE"GTDHr^9Clm0l(@<[8#boNh=jKk?nCEbsD40NXlt)9b=oCUdZlgUpO`+0e&eu8Yqi>2M]`"hS:BQTNJ!R^"Wsa$::mOb>kNS%3"hlGm*,r?Zh.:_5YPLl<RZ$Fh"n&])_d()&Nkq<e[9aFW'bqRG'e9V+[QT*Z=*)40a^i)6u@Tm.(4B+g1jcZrgq?H6u#G`G<(>S%OtL(;PIA%<'AV\MqpOodFDN#1Vl.5#q2H41ZFV+5``HCg:j3()L5[+.`9$XH:^c;!2LJb:,DP9_YgXq/>uqb%?=RL`ZmJ@F2N3YM%*llMAJ[i<9S@KOb,7M519iZpo4QOQcS')6NrK["ekE."4^'tp%*X&?9e!4XKgM#J\3,.`10#aJ\Vg/a1e;HNLbm_G=Zh(t%QWT2H%SkuErp:toLX>W/VU/c;Xqq:2s^(M3qO`dOkc*AlI&F*1(HMX,s\bdd,CWQPGdi5F,iq,aM3-U;0K7EW(V$#=@=hdf+.s;;&fT'<U%gJ@()4hTIs^!D8!-euSIbl9(Q%(O-mX#6u+;AhG/?2qtP^0UL=ejOJ/G<6p\XAnlZTLQ/3s%4#]/oPqT65XpUbfsk>A^L`kH,?Uu%,t5::`&l*.@<FsB<`a$r][NgNa_NY(V%#%j?(O@i8E0p!HA7Q_,Gg''3gsm6`^jBf&0Z0@D_PR/Q&r45B1S^6MA0?N;+WN*k7i4)%Fk26'?Bd3u.Q&?LPMN9j2ITBOTgZU#pU7HP0fYfmPKUHH^-Qa4#"7\L-4>^5C\C7RJ4hJ[:`2Yq2D/GkA3N@!O503]!erR,:1Vd)%2m+-(ED`QqJ"7e]\^`<2PZgHS/uta*aZBYGTS&_hgo(5tY&q#nEj*?;Qakj7+\^K4+$YPP`k!7gpmi.Y=Tb"`&YUKQlPVV.5%qp<%D0Y3noQ^n<Z6QG0EmAl,S$[<2$(#LQT52(22/2=mH,i(rf8Oq;,$*ekar1JtMg%EaTCo-QDSl?#<As,GR!pLEq!dWR]Y3p:F^&o6%8^4C-N&&u6IYZ"`joHuAoXSgo`X7ojlA0m"ADC&)Oe0*,cqm.%*5)9Ig8f=LN%RO<.3`"eLM:fN92,<QoqGYZQQ:%1Af6#3VMMb"%+A(5[LgefYFPcAqK&&'-4.e+&Qf%f:-Oo8.5tCn#m]p<;Gb`572epRV42hK3[hI>[fFdL-G\u.MQhW%66oZoEOqJ$QSo)o[+UO:k%&.l1,+OGaR1gH)9$=r`q7bs*/=s+h/%5uVJe$QHdF_'K_f/VQUZ/WY4qa"''[.H[9'<]"[(.J*l+Cup.VecHKHtumi^LtP'apS@H%2-==*%DD%Wn44Ik,TidE3rt_T_q,$"[?:3Y;!Xj0"WS80SAu@QXdmD%'\n%%3d=M:^\c[#2L%te.9PmKf_FUX&2QhC:8gXWFE?/s%B'aL23gc?U;ZZ5Hmd_Pga!"\A_tnn!$.?Y$57f%$4!KsL=0U)p'Rm8ekQB;bl?*9RKYmCX_oM/#m/o_n6?l,ndU;:n`j%?CdZ5\"%A8gQB)9bDtHAX#1o+?#A(IAV>_KrT*#uWf9HBls5G<%Pi=`tm_$L^P;#8L=<dh10+5c]Oef'A8TJ<*GYa*a1O,KJfH>m&fT'J[cG%)$M"r?"n&o3WP#aglG?e_B4S1:97E0b?X54<b`RR:H79]5F](`MQ+CODW8YO8=;$:[Z$b]#45V/Oa?!RS4R-V7+No:PS<<l?In38%EZ1P%:K@s^3&1+./T?B=`ZWq.L^e7`hkR>^[u9n(;p&I=1nVS`.!I[Hf\&n$cLp[mY'Xf"p@!+S$U4dd<['krZX0a-&J+sRK1o-E%Dr6$8?iTe;s7GKhrnI03s6\_BnTTKZh_5"A62umK^K:+,o9Xt*p?+[=m2uAto$@=#YC?BJrg/]GoQPfa*CTr'bJ.;6s3LQ1gL%h\%-<<CMD/de;H/F2U3B.c**UiIA+a8%O8t@Zi]$kX=iZs%Ro)E2!-:UVd5-[iU+ompC\V&X#$m+?V0,k!9:bdJf)^[NXJe27L(H#B@%+->@3D)#K5:'HHkW%]iq1k841I;Ql"F`)SW_jMc_V`GJ,4WJnO-Q<%">NM\]KHh6f#\[HMJK,V#D)+<q&94P)fT&d,8ng3/-A;g?%JtOtf@*@/[HMO^jTS-8CNH7TWf8!b!F-j/u-=gMY"G1N36jE*5,$%/G]u6`uM1[a59#VC!hIs-@PU]Ujb)7VSF"(S[Rad"+:V];<%E*rtLnc@*W<)T'&6b("]/s[;&\2@m,.5=1MK!pcnm5&4J(65F=B,VoI-LI#7VA,.n4F01`=mP6.*ehS_iiW6GHOU7e(m@mVM6P+?%2cgj56be1NBrcI!i7X&UJhVNQ,NiS/,co?)ktW:WeGSP>;\1SPfJ-]%.3bm)"MQQD9<!<,[O(W96(#iM0J[%,e[S9?CUka"6OFB%%ROAJA2_8`R.`@oMheMA)MQe"Em2r.F2k![^'HE7B<_/r4f\j_&V:;_Ph8,sK388ML$5Q$')'Na;Lb#==@Fh)U"?=7u+qgJQqVSQE%`@V[lp(>;s7)r%bFE@Vj@3M>spOGs@bDf-^2QEh1m3978r:Q[8rcK("1CcURcR%#5\M4cQA9TYPS?X6/SB``W-FsCj8cU@d`DY16%Or1=YM5`55N"?k"8kU.gH>EDFLt!RaK^TQXgZXY_%oK<Q'Pb#7!C0]g%cB16<^dKuX;V;bd/>Qk<[[q^l..tML^@#/lWnd+k7AV(%;OBMYa=+tqa=4!$:q@)3!1"+NHjAn17GrS5r:hd57qsYk"GHW(3f0BA1>U7k,&/PGik/^Ve=%WNPc_@YX?ijb.puhhKIoqaP"pW1%gLuJ?KQ)5BRL?@G!2+*I/)';XEA^&l%&C8(TJp[#?2b';d<5V+->#S0DM^#.laaMKn'%\3Ae\F.LM`*!8s!RC63.SO)@Xf)=C:)8%C)1kCLg8LPD8o$ja?)95dX%.`I"QqSEHpZpH%9)Td4f#Kq]K^7):^GaUD!g['gh>?n)"1IR?oY('G07i0]\Mo>&/t@bi,#e5neVF%9XT(64:`%aS9dd.U&,lu?8(Y1*Q3",iYijb]M*p2Eh<rJnW4F\!UG$'d5h;j>R2P)6(FWW#OA=cQhq-;4?02uoooM%[3<WWKcOWq%0qL_I/r[jn1POF#YdMUWYs^u,nV!ti$KC7Y61Fimm[WK_oXH.@lIR/.LQkaYGl8C$VA1;Dqk9O('C7#I)NNX)8[2o.W08.Qg9=1e%$Y4%nf(VG@5tEc6W\Gnp_uX<Qk=Or5YjY(u/!AB'#@<'lq/Jr4&A7A^K$:j>5QSd4<8jnIJ?2I-'jAA-1'UGD"jPnmA%,tE>Y;'6%8sD:k,%@b-Mrl-j=@@^,O(;s:pluA9bLA5ME%oUV9h_8bAE2@-G32ct_-oE!#re5-7?BClQ-gd237.2g7fhF'9$,#&Y>KGL9rW2a%_>T.H<'er#ln."]1.M@iknIPE(h$f0.<o'6gudiI-Etd[XYX6_gOpLLj;jJ]MEl"T)ll$ZY*$K$@"pMs\^J73H(DH^BVMWgWm3Z+%T%MIc12$8QQ#Wr^UZau4O"QaZkq7`V_+VuiL$sFdP2<K`_pBO98kT2NP':*5/=W`$[PO`iX_Dlf!0XhHO(3n!JVOhKnA`;5*qA"O%K56Z[ZJPEE%PB)/]?FD(]i$U,&2"u=$.P?BMNE8W1pZ;_?_[TslOMA(G\@)l_.40#E*?4%9c;@"Jd=Y<:H_=D86f:ci!NE25o2^C%16(b=i.ZsB:aroJC&-jiF!9b)33m.+3k:3_mKX><d=&0+Kj8rD,G^<YH)^p8S$,-j9X8OM,^bZ7=*g6iXum-Qa,15+Hq\VIFHV%Y%1hI""#j2i"kU`EXI>X-<$PQqC.R\kd1XcV^H\W]\UK^T'6s'JC*8:MrQaD0bjII>flso0#Q'8N$G2=8]O>TTBKiQ%qNoLJoISbA-%H36JlUA#@Tp$0%#W\*s,,c0p#^WSEg9JYB:)G]/A^B=fGFOL&-gF/)pe!kI7Ea<G5M(RG$hLTD`b.-,Mli'WpDEVO#JC=<8P(h7d%$^V(TGTNXhTp<t*WD%'h&3:>I8/s<-4?Xf$?/rI0J9)k!L`dt^>6n![6M&;5bO\K2B+7,=RE.A9+Nr._9@sY]pJ(@`HZ=^C:Z8*K%$LOg1aia`rCn4'cMHY?;:Ng405qN^De)]@Vj2V1oo/'<S9Eub/f'p3SS'DnEJ[eI8BU!?(kd9qY*X]fK+hb`Vk)2/57A<pi$JaWt%H)1!0)ZUa/,mG_t!\bTS"'Is!gNl,D>0nr3X$iL;380D$IFudHaa5%gYhn*tPpk2Yrp^=uh^e7\`F(16B7".)lqVq,0ZuX#?u+2]%\dRWDKPcqb11C5qf#Di?;!,P=lI/<A<J^m1RTRlGE"D)RJICl3f`n6D($sW[M:^q`@Yj(iL8o#l(h"&D=3c$BpOIh$*.c#bK<A[m%MtDHBfW*p_M1YF+[l8]kOL6hf_OB5g#%e3qmU&5RG<;XS+KN9TBUBMkaE`uAJ14F2:0>Ks(!a)8[m5g>r\YLZl/"&@$Xm(;+1k/+%m32o[QW\S1F915N^@ZKpr/#h#jO`@J_'`,Hd]pp$&-p<Rp4-S(;.Eu9Hrhg-&0YW*@`jSJPT;i`4EnMMN[[%*;cY`Pm+<au%^!q[%CBQ2aChRVkNh'+'K1PFp=EfM=PSH?g0uM;f\?'I"%;b:].NZ")P^C%.(j@EmT/.)3HHM*c;g(`.3D//)>d7I>UI%Z-YX?Q!dS`8"%hPZ=S%lTCr.s=V>,sC?<H(T+j9:#-[O1lPZ39;Ra\-DtO*.OOp!p"bke36"NLXmo1s)*eSH"15d)2`!C3B5*W(Z-[=JK-OdC4I`R%=ScHXk8d[ZGS7doEKf)h]^&:P8#/`.]1ju)+rba7Ks=@<+*^.Q-5E'<+h]YqU^c^Q4m_E)p=1uFcXRdFB^hhcr!bam#U^41\6a:i%qpG4fqd'Ekm">GA[`[jNs":W_;;LLSEUWrYXt-UlhXnI#_sU^i&ps'jIoU;G2LS5H.eOZak9YW,F:gONI;s=%QA-.;,k>4Dh9`*Y%c*ucEGF:TPGiBLX#!(";bN[ZNBOk5R.[Jpp1-p+fT"EXYd^ob=OSmMWTH`NQ>;@nsq3@"l\89r,_!;!c7CET3"(J$j3Zmo*3=%L=%B95n'jdDFrU>*Tm.&3p;,'?Ii$m;+b>LBn,kSn:TVfkPj#2(J=.kc-pa[m$%A+EnL4IAfrRC&MC.0mML[3#hh"A\.,"GYHUA*-t&%hb7Kl3-\%UAoUN!l"l6"Zb[WM?FMs#M`lRAYXVCuoG2Q]r@aOd",&Xg8R=Z;AEAn8'Dn8b6coUBL!f&!"s?g:a!$);Lf8q2Mqk0]%NK`b!DD+?t2=)i,Y4oMD=iWD'o*17l_Rs_Bp_m)&]a_)ki1+l.[at#2Ed4'iH.Vl:g2>)4g5rf6<]3,r$@MplN=hl1!+S*;hZ>/'%fD8mM^^Tien#O7lq_[jfrR^m0Y`3:=)^A/h51/r+"QdlVD]!O6&J3EY@q-2=QZt&&Y$6/]#\./8W(O/HHqZpK).n.hXt+!5l<!Oh%@kl\gbS<$JK--lS*$A`Q0Ih"."443Nc2je(fX3<T.883qcT(Y14j4HtRA6.M6fp\&bCFSZnMuZapta`HZoBfOarF"V2q5<aY%?$#%?'/hcdPYoIHdOJ2@TL70rZ=A8e38]gkXOQ\#oJ;INbb:SB<nnMZ2K^86a<lL\QUMSe,,ltTL7rnq(5Kh)m?jYPPq)#m'(<".o:?$%3n[3mb;^lDh?^-g8jm'[3QHOTm^Od\"YUrBjIK@,E2SX]FM!?^aKmK#SXF=)(qGQ&3XNONi'>KHD[O'p\349I:IOu14DjR?^t:u7%,gd%1P>l+k.Z3pIa(7]r\\O$"%8qop55[PdBh^WY^!)FQ#=NqImu46t2u')SbQZ)3QQIoOphuE"1=P1?P%^T"!4+`'"qtLFeA+Z3%c9l?M@R<@940>cZ@H93GV!L0E.hcra.=Tm+YbB0ubb]9dh@^V<mk[hOEC<>hf;\K'+@-9qlQ]HTn3m`l+TPuPa3S<SJk9O1E*Fcr%[p;BW?Jo3S_b),f\]j6-KG4oTV&LrhjD3O;>\4)_eKL??lR@2i!W7:Xr`#+;mh#[7KHB,Q*e]t/?>HN1V!ZBE*jIolS_cnoXikJ\%+T&%4U\B)]0]3gA)^1Y__#iGRJ$Z?)!NJS">)M](1NT*1qPeoX14V\]!2Rb@>OU)l]5YM%i''L_3,/IWKfh,#;5rTh?M(/R+@39S%;eD]9[/5u8-fXh"<MW(Um&heim@;m37Kh,UT'he]Oda@:O#D5sn4%2/'(/#%%9#?n/fVZk0"EG8X>8$=H8g,p@>RG`"i1Ir]RSsd%H5PM8G'9q\PT6ssSYCTP((.SGW^Jj;caR=/:QN3iCIIfSgTo%!3NT#<+WSK-3kIdt7_f5Rru#URa,tgQ^Ehf=NX0!l*AKMs'*:+;%6K[fR<.5t^TM(AKF1;'1Lmp2O6EN5a=qi"uUc+&=d<%:Dc0u7[mt@8T0nEC!IegH8OE8@m&3<7Y\L?:Hf:rB.7O+:GPC4a=>)n-C%)'6#VKqcZoX0/hS3s6A8YI')FI5\V"0W0Du'3(]mUu[r]i./4e'uJ`PN(NWdC$d44VNNGr/0Q0Y8oogtYaC<>@I.2^H'Dd%e"<=+%hYH(Grg>+<Z<V.Cqb#]pF2lc2N7dh6;TTghI<h0I8!/#L%o[_=$dnPl+b,+HA4-@9TfqH)hFkW]>8km$@q,tXK%)#39Eka.ms<>p%;K.b\b&<h5L[iTG<\n%\P0*2,QllVU/keD.9&^7K#d"_i^ce$Q!\HGJOkP?3EYRN+?m+D$%M]1t[1*Q#kE-$oAX,0%8T\O?O,8-T%e$8?R"3ihpTE\]<DAVPc=elQ_fkbcWZ*EaQ?`O`l"qDXL2OOi$LlcSY$H^!ON>rp;q$8D?+oB_4IJe/2MDe>Qk;`q5>mRC/V]62o%D=.X=oXG@iP2TXJKUt<$,G-M,*,/')%"=4i%MB#]SCD7m\UZu:&L#ubi7Rq71_%O<S2H=SPbKP9k]?AAO!C4ooNBMEJg^T^6no3A%aOqR>[u=")gKF0iV%$PmNUo1)`lOf$*&"N=msK:N0A-IOT#(!UfT%2nY29JC]O7,@W,YG:0dVLFVa2SD6e=?MN5k]*-ON#:Q%`03%6a4_[c<Mj379[J^;Ro.5Y8niWTlP7_2*%3J+WY\$8gbF4E04`Ub6P"4$QLGARinh(N]K0';))cb%&m)ap:2Aj&I:P(aHk_h,@"_t%7L;E[LKt<ZS?*2C`1:[HOX>W9BJ/eUX2H>=3W-P=\l]PY_bCUr74PZmo'IZ4(HlO1>[,,e5SuZ98mS7Yj%*+K=ZT92hqu(6WoSPo%F)9i]fXZFuTYq(5$9)a0Y)pCYhhbq\'1)NuQ?NHgNZb5CS2_k:H%gq0PmWI42u'%pkCZiV90",CDb[rX(qgN$8;SDJU!FJ=H@kY\%#1l/&C7.^MG0.2p%0shQV%>@a1NA"oN:'ch+LHGl7-qFK)PpJM99$:->N5?H/s9apSC>,WFK`3n+c;N&T>i+%h"@&'7A0)]gA0Cq%HdpjL)WNHXcUIUkM"Ld=<MurUZ!2(!p0[IO_(#k=aPn:g@0S'kW4WG/(f=I94Pl?dT%0qA$#Eg+gj#1/!RQ(0$kZZb2FS$+MTA@'%inIaROT3X%.1qhJ5SCDSYb#6A.'7lY;XoY/g7,:11*\kDe>C33]dPY<05s6H;.11r)Ed]\b-B!<:jg4!A0b0E"jT[fI(N!*jM6>j%"LmJ9p7_cn.X>E"BH%H2M-j&?GIm2#8)mh]ZsIG;j<c_d!<6\l:CJ'MUDq[gjc%"k!=t"s]8BGFB^oC^MQ@sc[&X<E3Du[9#X0F:%\+ITQC5C,'DTQUYb(LmG"o(3;86]>4?knPrQGY"p6o)M(qu/0Tn?c^L-DI2LG$tfe[R:BC;%W=qOKr\(%amETc6IdW:Xt;>:>=G,%hd,V$@#YXNdhRtT_.,:`&@IR\9L*p@9WAAahcXVu'Y=t.9@O*-GO/?`&]mAT,bH6VJ.VUf+g2\O5R.V+`RIl\UM0l&@UB+NCsE:7%1hHtP,\)X@5nGr6A6#jdB`nft^-X(Q#E85!8BDFB$:.uON:>ZW%Yf:Urs8N.BR_>WA(3n$^Bo$;@It>(%!Y1V"$i#<>R-mU,^l=!%r.JQi2*n$b#Gc&ZG/-.'eeo#:%Hpq0)ORQf8Afc/*C3DcVE>ea6n4!')"Oa5(Jg0;\^A6NfVQC10R<;+PFkAgb"mDFgg&b$`bS>k%e3GF(5_N#d+JF%7ack6U_$3IPBjas_"E-+(;#o/Sh=fdL>2B@UfuC)S^@LncTTPT7`mp*Rk)Teq,GpHGoPlq$$8a1Jr-W8`s5'o(%QuoXW!?UeK'?3rDVjBNmaK<NF?Yn2<W@jHi!<kAWr:iOP[r1`!H(e%EHBO)^!;Mi>4grIrULi)>-58QC.a3(coT<um2f8K@&Q'9P%E[E7cDEI1!9U<kKiWglT]QmiRE%?1GJou9Kqk?#'H>cXf%ic$jn"s\#6lM-]<kj-*;eHTl$FN0\Ia"-WQ+b0nB3akfJ)JV5aDu\M%Z0q]\BG4mYX4Ze`^%7]Zqd4dKc#<W1qlg%nO8n,3hu3$$s63nhX)GcKc%#ZI++F7ironWVHi*c6^A[$ZJ+l0Ws73cdrXh6bhuEHD%bKD",o_ZE'oABN2pFh$rs8UpT!jYd)r&;Cd\,YFEIJZ6>7cBg~>%AI9_PrivateDataEnd